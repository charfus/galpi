{"version":3,"sources":["_actions/error_actions.js","_actions/types.js","_actions/user_action.js","components/containers/papercard.js","components/views/Dashboard/index.js","components/views/ErrorModal/modal.js","components/views/ErrorModal/index.js","components/views/Footer/index.js","_actions/post_action.js","components/containers/infinite-scroll.js","_actions/comment_action.js","components/containers/comment-form.js","components/containers/comments.js","_actions/like_action.js","components/containers/likes.js","components/containers/post-delete.js","components/containers/post-card.js","components/containers/post-thumbnail.js","components/views/Home/index.js","components/views/LandingPage/index.js","components/views/LoginPage/index.js","components/views/NavBar/index.js","components/views/NotFound/index.js","components/views/PostingPage/canvas.js","components/views/PostingPage/preview.js","components/views/PostingPage/bgr-colorpicker.js","components/views/PostingPage/font/font-align.js","components/views/PostingPage/font/font-colorpicker.js","components/views/PostingPage/font/font-lineheight.js","components/views/PostingPage/font/font-slider.js","components/views/PostingPage/font/font-type.js","components/views/PostingPage/index.js","components/views/PostPage/index.js","components/views/ProfilePage/index.js","components/views/RegisterPage/index.js","components/views/Thumbnails/index.js","route/authRoute.js","route/guestRoute.js","App.js","_reducers/error_reducer.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/post_reducer.js","_reducers/comment_reducer.js","_reducers/like_reducer.js","_store/index.js","index.js"],"names":["errorHandle","err","type","error","registerUser","body","a","axios","post","response","payload","data","loginUser","dataToSubmit","logOutUser","getUser","username","get","deleteUser","pwd","delete","getDashboard","auth","PaperCard","props","id","className","title","children","Dashboard","dispatch","useDispatch","history","useHistory","useState","user","setUser","posts","setPosts","password","setPassword","deleteUserHandler","e","window","confirm","preventDefault","alert","push","useEffect","fetchData","name","email","createdAt","slice","onSubmit","onChange","target","value","placeholder","modalRoot","document","getElementById","Modal","el","createElement","appendChild","this","removeChild","ReactDOM","createPortal","Component","ErrorModal","params","useSelector","state","message","isOpen","hideModal","onClick","Footer","imgPost","formData","config","header","contentPost","getPosts","page","getAPost","uuid","deletePost","PostInfiniteScroll","view","loading","setLoading","element","setElement","useRef","prevY","observer","IntersectionObserver","entries","y","boundingClientRect","current","handleInitial","root","rootMargin","threshold","useCallback","items","currentElement","currentObserver","observe","unobserve","map","index","render","LoadingOutlined","ref","getComment","postComment","deleteComment","CommentForm","setComments","comments","setShowComment","comment","setComment","handleCommentSubmit","newComment","FetchComments","userId","deleteAComment","event","li","parentElement","filteredComment","filter","item","_id","key","postLike","postUnlike","Likes","likes","loggedInUser","likesArray","setLikesArray","showLikes","setShowLikes","handleLike","handleUnlike","filteredLikes","includes","PushpinFilled","PushpinOutlined","length","DeleteAPost","deletePostHandle","DeleteOutlined","PostCard","content","url","showComment","contentStyle","display","CommentToggle","TagsFilled","TagsOutlined","to","alt","src","style","ZoomInOutlined","PostThumbnail","Home","setView","BarsOutlined","AppstoreOutlined","ToTopOutlined","scroll","top","left","behavior","Landing","LoginForm","setEmail","valid","ok","emailValid","setEmailValid","passwordValid","setPasswordValid","onFinish","userinfo","replace","htmlFor","min","max","val","trim","EmailValidator","CheckCircleOutlined","WarningOutlined","NavBar","loggedIn","menuToggle","setMenuToggle","logout","toggleMenu","height","viewBox","fill","d","undefined","exact","NotFound","role","aria-label","Canvas","color","opt","quote","fontcolor","fontsize","fonttype","fontlineheight","setQuote","canvasRef","fontalign","x","quoteClickStart","setQuoteClickStart","quoteXY","setQuoteXY","imgClickStart","setImgClickStart","imgXY","setImgXY","resize","setResize","quoteCursor","setQuoteCursor","imgCursor","setImgCursor","bgrStyleObj","backgroundColor","cursor","textStyleObj","fontSize","fontFamily","lineHeight","textAlign","imgPos","handleDragStart","cb","clientX","clientY","draggable","onDoubleClick","onDragStart","onDragEnd","distanceX","distanceY","handleDragEndImg","defaultValue","onFocus","onBlur","handleDragEndQuote","Preview","setUrl","setOpt","PlusOutlined","accept","info","img","reader","FileReader","onloadend","result","readAsDataURL","getBase64","files","imgUrl","BgrColorPicker","setColor","hex","FontAlign","setFontalign","setDisplay","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","ColumnWidthOutlined","iconHandler","FontColorPicker","FontColorsOutlined","triangle","FontLineHeight","setFontlineheight","LineHeightOutlined","step","FontSlider","setFontsize","FontSizeOutlined","FontType","setFonttype","counter","setCounter","fonts","QuestionOutlined","Posting","setFontcolor","setContent","postContent","postImage","blob","FormData","append","rows","canvasDiv","domtoimage","toBlob","then","Post","useParams","setPost","Profile","RegistrationForm","setUsername","usernameValid","setUsernameValid","setName","nameValid","setNameValid","setConfirm","confirmValid","setConfirmValid","passwordConfirmation","maxLength","test","Thumbnails","AuthRoute","component","rest","pathname","from","location","GuestRoute","App","fetchAuth","path","LandingPage","Login","Register","initState","status","rootReducer","combineReducers","action","getRegisterSuccess","getUserSuccess","deleteUserSuccess","getDashboardSuccess","isAuth","imgurl","postUploadSuccess","postGetSuccess","postsGetSuccess","postDelSuccess","getCommentSuccess","postCommentSuccess","deleteComomentSuccess","like","getLikeSuccess","postUnlikeSuccess","statusText","store","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","createStoreWithMiddleware","Reducers","__REDUX_DEVTOOLS_EXTENSION__","StrictMode"],"mappings":"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","file":"static/js/main.99d9310e.chunk.js","sourcesContent":["import { ERROR_HANDLE, ERROR_HIDE } from \"./types\";\r\n\r\nexport const errorHandle = (err) => {\r\n  return {\r\n    type: ERROR_HANDLE,\r\n    error: err,\r\n  };\r\n};\r\n\r\nexport const errorHide = () => {\r\n  return {\r\n    type: ERROR_HIDE,\r\n  };\r\n};\r\n","export const LOGIN_USER = \"login_user\";\r\nexport const REGISTER_USER = \"register_user\";\r\nexport const AUTH = \"auth\";\r\nexport const LOGOUT_USER = \"logout_user\";\r\nexport const GET_USER = \"get_user\";\r\nexport const GET_DASHBOARD = \"get_dashboard\";\r\nexport const DELETE_USER = \"delete_user\";\r\n\r\nexport const IMG_POST = \"img_post\";\r\nexport const CONTENT_POST = \"content_post\";\r\nexport const GET_A_POST = \"get_a_post\";\r\nexport const GET_POSTS = \"get_posts\";\r\nexport const DELETE_POST = \"delete_post\";\r\n\r\nexport const POST_COMMENT = \"post_comment\";\r\nexport const GET_COMMENT = \"get_comment\";\r\nexport const DELETE_COMMENT = \"delete_comment\";\r\n\r\nexport const POST_LIKE = \"post_like\";\r\nexport const POST_UNLIKE = \"post_unlike\";\r\n\r\nexport const ERROR_HANDLE = \"error_handle\";\r\nexport const ERROR_HIDE = \"error_hide\";\r\n","import axios from \"axios\";\r\nimport {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH,\r\n  LOGOUT_USER,\r\n  GET_USER,\r\n  GET_DASHBOARD,\r\n  DELETE_USER,\r\n} from \"./types\";\r\n\r\nexport async function registerUser(body) {\r\n  let response = await axios.post(`/api/user`, body);\r\n\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function loginUser(dataToSubmit) {\r\n  let response = await axios.post(`/api/login`, dataToSubmit);\r\n\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function logOutUser() {\r\n  let response = await axios.post(`/api/logout`);\r\n\r\n  return {\r\n    type: LOGOUT_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getUser(username) {\r\n  let response = await axios.get(`/api/user/${username}`);\r\n\r\n  return {\r\n    type: GET_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function deleteUser(pwd) {\r\n  let response = await axios.delete(`api/user`, { data: pwd });\r\n\r\n  return {\r\n    type: DELETE_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getDashboard() {\r\n  let response = await axios.get(`/api/dashboard`);\r\n\r\n  return {\r\n    type: GET_DASHBOARD,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function auth() {\r\n  let response = await axios.get(`/api/auth`);\r\n\r\n  return {\r\n    type: AUTH,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./papercard.css\";\r\n\r\nconst PaperCard = (props) => {\r\n  return (\r\n    <div id=\"paper\">\r\n      <div className=\"card-content\">\r\n        <div id=\"pattern\">\r\n          <h1 className=\"card-title\">{props.title}</h1>\r\n          <div id=\"content\">{props.children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaperCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { auth, deleteUser, getDashboard } from \"../../../_actions/user_action\";\r\nimport PaperCard from \"../../containers/papercard\";\r\n\r\nconst Dashboard = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [user, setUser] = useState();\r\n  const [posts, setPosts] = useState();\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const deleteUserHandler = async (e) => {\r\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\r\n      e.preventDefault();\r\n      let data = {\r\n        password,\r\n      };\r\n      try {\r\n        await dispatch(deleteUser(data));\r\n        alert(\"삭제 되었습니다\");\r\n        await dispatch(auth());\r\n        history.push(\"/\");\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n    e.preventDefault();\r\n    return;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let response = await dispatch(getDashboard());\r\n        let { user, posts } = response.payload;\r\n\r\n        setUser(user);\r\n        setPosts(posts);\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          <PaperCard title={`${user.username}님, 안녕하세요 !`}>\r\n            <br />\r\n            <p>이름: {user.name}</p>\r\n            <p>이메일: {user.email}</p>\r\n            <p>갈피: {posts} 개</p>\r\n            <p>계정 생성일: {user.createdAt.slice(0, 10)}</p>\r\n            <br />\r\n            <h2 className=\"account-delete\">계정 삭제</h2>\r\n            <form onSubmit={deleteUserHandler} className=\"account-delete\">\r\n              <input\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"비밀번호 확인\"\r\n              />\r\n              <input type=\"submit\" value=\"🗑\" />\r\n            </form>\r\n          </PaperCard>\r\n        </>\r\n      ) : (\r\n        <p> 유저 정보를 불러오고 있습니다. </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nconst modalRoot = document.getElementById(\"modal\");\r\n\r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.el = document.createElement(\"div\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    modalRoot.appendChild(this.el);\r\n  }\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport Modal from \"./modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { errorHide } from \"../../../_actions/error_actions\";\r\nimport { auth } from \"../../../_actions/user_action\";\r\n\r\nconst ErrorModal = (params) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const name = useSelector((state) => state.error.name);\r\n  const message = useSelector((state) => state.error.message);\r\n  const isOpen = useSelector((state) => state.error.isOpen);\r\n\r\n  const hideModal = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(errorHide());\r\n\r\n    if (message === \"You are already logged in\") {\r\n      await dispatch(auth());\r\n      return history.push(\"/\");\r\n    }\r\n    if (message === \"You must be logged in\") {\r\n      await dispatch(auth());\r\n      return history.push(\"/login\");\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Modal>\r\n          <div className=\"modal\">\r\n            <div className=\"error-message\">\r\n              <h1>{name}</h1>\r\n              <p>{message}</p>\r\n              <button onClick={hideModal} className=\"submit-btn\">\r\n                확인\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\n\r\nconst Footer = (params) => {\r\n  return (\r\n    <footer>\r\n      <p>© 2020 Haneul Cha.</p>\r\n      <address>문의사항은 tjaneul@gmail.com로 보내주세요.</address>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  CONTENT_POST,\r\n  IMG_POST,\r\n  GET_A_POST,\r\n  GET_POSTS,\r\n  DELETE_POST,\r\n} from \"./types\";\r\n\r\nexport async function imgPost(formData) {\r\n  const config = {\r\n    header: {\r\n      \"Content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n\r\n  const response = await axios.post(`/api/post/img`, formData, config);\r\n\r\n  return {\r\n    type: IMG_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function contentPost(data) {\r\n  const response = await axios.post(`/api/post`, data);\r\n\r\n  return {\r\n    type: CONTENT_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getPosts(page, username) {\r\n  if (username) {\r\n    const response = await axios.get(\r\n      `/api/post?username=${username}&page=${page}&limit=10`\r\n    );\r\n\r\n    return {\r\n      type: GET_POSTS,\r\n      payload: response.data,\r\n    };\r\n  }\r\n  const response = await axios.get(`/api/post?page=${page}&limit=10`);\r\n\r\n  return {\r\n    type: GET_POSTS,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getAPost(uuid) {\r\n  const response = await axios.get(`/api/post/${uuid}`);\r\n\r\n  return {\r\n    type: GET_A_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function deletePost(uuid) {\r\n  const response = await axios.delete(`/api/post/${uuid}`);\r\n\r\n  return {\r\n    type: DELETE_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\nimport { getPosts } from \"../../_actions/post_action\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\n// GET posts\r\nconst PostInfiniteScroll = (props) => {\r\n  const { username = null, view } = props;\r\n  const dispatch = useDispatch();\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [element, setElement] = useState(null);\r\n\r\n  const page = useRef(1);\r\n  const prevY = useRef(0);\r\n\r\n  const loadMore = () => {\r\n    page.current++;\r\n    handleInitial(page.current);\r\n  };\r\n\r\n  // intersectionObserver setting\r\n  const observerCallback = (entries) => {\r\n    const firstEntry = entries[0];\r\n    const y = firstEntry.boundingClientRect.y;\r\n\r\n    if (prevY.current > y) {\r\n      loadMore();\r\n    }\r\n    prevY.current = y;\r\n  };\r\n\r\n  let options = {\r\n    root: null,\r\n    rootMargin: \"0px\",\r\n    threshold: 1.0,\r\n  };\r\n\r\n  const observer = useRef(new IntersectionObserver(observerCallback, options));\r\n\r\n  const handleInitial = useCallback(\r\n    async (page) => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await dispatch(getPosts(page, username));\r\n        const { posts, message } = response.payload;\r\n        if (message === \"ok\") {\r\n          setPosts((items) => [...items, ...posts]);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [dispatch, username]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleInitial(page.current);\r\n  }, [handleInitial]);\r\n\r\n  useEffect(() => {\r\n    const currentElement = element;\r\n    const currentObserver = observer.current;\r\n\r\n    if (currentElement) {\r\n      currentObserver.observe(currentElement);\r\n    }\r\n\r\n    return () => {\r\n      if (currentElement) {\r\n        currentObserver.unobserve(currentElement);\r\n      }\r\n    };\r\n  }, [element]);\r\n\r\n  return (\r\n    <div className=\"infinite-scroll-wrapper\">\r\n      {posts ? (\r\n        <>\r\n          <ul className={`posts-list infinite-${view}`}>\r\n            {posts.map((posts, index) => props.render(posts, index))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <p> 마지막 포스트 입니다 ! </p>\r\n      )}\r\n      {loading && <LoadingOutlined />}\r\n      <div ref={(ref) => setElement(ref)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostInfiniteScroll;\r\n","import axios from \"axios\";\r\n\r\nimport { GET_COMMENT, POST_COMMENT, DELETE_COMMENT } from \"./types\";\r\n\r\nexport async function getComment(uuid) {\r\n  let response = await axios.get(`/api/comment/${uuid}`);\r\n  return {\r\n    type: GET_COMMENT,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function postComment(uuid, body) {\r\n  let response = await axios.post(`/api/comment/${uuid}`, body);\r\n\r\n  return {\r\n    type: POST_COMMENT,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function deleteComment(id) {\r\n  let response = await axios.delete(`/api/comment/${id}`);\r\n\r\n  return {\r\n    type: DELETE_COMMENT,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postComment } from \"../../_actions/comment_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst CommentForm = ({\r\n  uuid,\r\n  setComments,\r\n  comments,\r\n  setShowComment = null,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let data = {\r\n      comment,\r\n    };\r\n    try {\r\n      const response = await dispatch(postComment(uuid, data));\r\n      const { newComment, message } = response.payload;\r\n\r\n      if (message === \"ok\") {\r\n        setComments([...comments, newComment]);\r\n        if (setShowComment) setShowComment(true);\r\n      }\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const handleComment = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className=\"comment-form\">\r\n      <input placeholder=\"댓글 달기\" value={comment} onChange={handleComment} />\r\n      <button onClick={handleCommentSubmit}>↑</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { getComment, deleteComment } from \"../../_actions/comment_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst FetchComments = (props) => {\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector((state) => state.user.userId);\r\n  const { uuid, comments, setComments } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const deleteAComment = async (event) => {\r\n    event.preventDefault();\r\n    const li = event.target.parentElement;\r\n\r\n    try {\r\n      await dispatch(deleteComment(li.id));\r\n      let filteredComment = comments.filter((item) => item._id !== li.id);\r\n      setComments([...filteredComment]);\r\n      alert(\"댓글이 삭제되었습니다\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await dispatch(getComment(uuid));\r\n        const { comments, message } = response.payload;\r\n        if (message === \"ok\") {\r\n          setComments(comments);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setComments, dispatch, uuid]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <LoadingOutlined />}\r\n      {comments ? (\r\n        <ul className=\"comments-list\">\r\n          {comments.map((comment, index) => (\r\n            <li key={index} id={comment._id}>\r\n              <strong>{comment.user.username}</strong>\r\n              {` ${comment.comment}`}\r\n              {userId === comment.user._id && (\r\n                <button onClick={deleteAComment}>×</button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <span>첫 댓글을 달아보세요</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FetchComments;\r\n","import axios from \"axios\";\r\n\r\nimport { POST_LIKE, POST_UNLIKE } from \"./types\";\r\n\r\nexport async function postLike(uuid) {\r\n  let response = await axios.post(`/api/like/${uuid}/like`);\r\n  return {\r\n    type: POST_LIKE,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function postUnlike(uuid) {\r\n  let response = await axios.post(`/api/like/${uuid}/unlike`);\r\n  return {\r\n    type: POST_UNLIKE,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PushpinFilled, PushpinOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postLike, postUnlike } from \"../../_actions/like_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst Likes = ({ likes, uuid }) => {\r\n  const loggedInUser = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [likesArray, setLikesArray] = useState([...likes]);\r\n  const [showLikes, setShowLikes] = useState(false);\r\n\r\n  const handleLike = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(postLike(uuid));\r\n      setLikesArray([...likesArray, loggedInUser.userId]);\r\n      setShowLikes(true);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const handleUnlike = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(postUnlike(uuid));\r\n      let filteredLikes = likesArray.filter((id) => id !== loggedInUser.userId);\r\n      setLikesArray([...filteredLikes]);\r\n      setShowLikes(false);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (likes.includes(loggedInUser.userId)) {\r\n      setShowLikes(true);\r\n    }\r\n  }, [likes, loggedInUser.userId]);\r\n\r\n  return (\r\n    <div className=\"likes\">\r\n      {showLikes ? (\r\n        <PushpinFilled key=\"likes\" onClick={handleUnlike} />\r\n      ) : (\r\n        <PushpinOutlined key=\"notlikes\" onClick={handleLike} />\r\n      )}\r\n\r\n      <span>{likesArray.length}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Likes;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { deletePost } from \"../../_actions/post_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst DeleteAPost = ({ uuid }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const deletePostHandle = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(deletePost(uuid));\r\n      window.alert(\"삭제되었습니다\");\r\n      return history.push(\"/\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  return <DeleteOutlined onClick={deletePostHandle} />;\r\n};\r\n\r\nexport default DeleteAPost;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CommentForm from \"./comment-form\";\r\nimport FetchComments from \"./comments\";\r\nimport Likes from \"./likes\";\r\nimport \"./post-card.css\";\r\nimport { TagsOutlined, TagsFilled, ZoomInOutlined } from \"@ant-design/icons\";\r\nimport DeleteAPost from \"./post-delete\";\r\n\r\nconst PostCard = ({ index, posts }) => {\r\n  const { uuid, likes, content, url, user } = posts;\r\n  const { username } = user;\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const contentStyle = {\r\n    display: showComment ? \"none\" : \"inherit\",\r\n  };\r\n\r\n  const CommentToggle = (params) => {\r\n    return (\r\n      <div onClick={() => setShowComment(!showComment)}>\r\n        {!showComment ? (\r\n          <TagsOutlined key=\"comment\" />\r\n        ) : (\r\n          <TagsFilled key=\"comment\" />\r\n        )}\r\n\r\n        <span>댓글</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <li key={`postcard-${index}-by${username}`} className=\"postcard\">\r\n      <h1 className=\"user\">\r\n        <Link to={`/username/${username}`}>{username}</Link>\r\n      </h1>\r\n      <div className=\"post\">\r\n        <img alt={`${username}'s post`} src={url} />\r\n      </div>\r\n\r\n      <p className=\"content\" style={contentStyle}>\r\n        {content}\r\n      </p>\r\n      <ul className=\"features\">\r\n        <li>\r\n          <Likes likes={likes} uuid={uuid} />\r\n        </li>\r\n        <li>\r\n          <CommentToggle />\r\n        </li>\r\n        <li>\r\n          <Link to={`/p/${uuid}`}>\r\n            <ZoomInOutlined key=\"link\" />\r\n          </Link>\r\n        </li>\r\n        {userId === user._id && (\r\n          <li>\r\n            <DeleteAPost uuid={uuid} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n\r\n      {showComment && (\r\n        <FetchComments\r\n          uuid={uuid}\r\n          comments={comments}\r\n          setComments={setComments}\r\n        />\r\n      )}\r\n\r\n      <CommentForm\r\n        uuid={uuid}\r\n        comments={comments}\r\n        setComments={setComments}\r\n        setShowComment={setShowComment}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PostThumbnail = ({ index, posts }) => {\r\n  const { uuid, url, user, content } = posts;\r\n  const { username } = user;\r\n  const history = useHistory();\r\n  const postHandler = () => {\r\n    return history.push(`/p/${uuid}`);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      key={`postthumbnail-${index}-by${username}`}\r\n      className=\"post-thumbnail-li\"\r\n      onClick={postHandler}\r\n    >\r\n      <div className=\"post\">\r\n        <img alt={`${username}'s post`} src={url} />\r\n      </div>\r\n      <div className=\"info\">\r\n        <h2>{username}</h2>\r\n        <p>{content}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostThumbnail;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BarsOutlined,\r\n  AppstoreOutlined,\r\n  ToTopOutlined,\r\n} from \"@ant-design/icons\";\r\nimport PostInfiniteScroll from \"../../containers/infinite-scroll\";\r\nimport PostCard from \"../../containers/post-card\";\r\nimport PostThumbnail from \"../../containers/post-thumbnail\";\r\n\r\nconst Home = (params) => {\r\n  const [view, setView] = useState(\"wide\");\r\n\r\n  const scrollToTop = () => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"view-option\">\r\n        <BarsOutlined onClick={() => setView(\"wide\")} />\r\n        <AppstoreOutlined onClick={() => setView(\"thumbnail\")} />\r\n        <ToTopOutlined onClick={scrollToTop} />\r\n      </div>\r\n      <PostInfiniteScroll\r\n        view={view}\r\n        render={\r\n          view === \"wide\"\r\n            ? (posts, index) => (\r\n                <PostCard\r\n                  key={`postcard-${index}`}\r\n                  posts={posts}\r\n                  index={index}\r\n                />\r\n              )\r\n            : (posts, index) => (\r\n                <PostThumbnail\r\n                  key={`postcard-${index}`}\r\n                  posts={posts}\r\n                  index={index}\r\n                />\r\n              )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"landing\">\r\n      <div className=\"intro wrapper\">\r\n        <h1>\r\n          말은 제주로\r\n          <br />\r\n          <span>\r\n            글은 <strong>갈피</strong>로\r\n          </span>\r\n        </h1>\r\n        <p>좋아하는 문장들을 원하는 이미지에 옮겨 포스팅 해보세요 !</p>\r\n        <button>\r\n          <Link to=\"/register\">회원가입</Link>\r\n        </button>\r\n        <button>\r\n          <Link to=\"/login\">로그인</Link>\r\n        </button>\r\n      </div>\r\n      <span className=\"bgr-img\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport { CheckCircleOutlined, WarningOutlined } from \"@ant-design/icons\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { loginUser } from \"../../../_actions/user_action\";\r\n\r\nconst LoginForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { history } = props;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailValid, setEmailValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordValid, setPasswordValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n\r\n  const pwdHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setPassword(val);\r\n    if (val === \"\") {\r\n      setPasswordValid({\r\n        valid: \"\",\r\n        message: \"비밀번호를 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else setPasswordValid({ valid: \"\", message: \"\", ok: true });\r\n  };\r\n\r\n  const emailHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setEmail(val);\r\n    if (val === \"\") {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (!EmailValidator.validate(val)) {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 알맞게 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else {\r\n      setEmailValid({\r\n        valid: \"\",\r\n        message: \"\",\r\n        ok: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onFinish = async (e) => {\r\n    e.preventDefault();\r\n    if (emailValid.ok && passwordValid.ok) {\r\n      try {\r\n        let userinfo = {\r\n          email,\r\n          password,\r\n        };\r\n        await dispatch(loginUser(userinfo));\r\n        return history.replace(\"/home\");\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form login\">\r\n      <h1 className=\"page-title\">로그인</h1>\r\n      <form onSubmit={onFinish}>\r\n        <div className={`form-control ${emailValid.valid}`}>\r\n          <label htmlFor=\"email\">이메일</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            value={email}\r\n            placeholder=\"예) galpi@galpi.com\"\r\n            min=\"8\"\r\n            max=\"254\"\r\n            onChange={emailHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{emailValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${passwordValid.valid}`}>\r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={pwdHandler}\r\n          />\r\n\r\n          <small>{passwordValid.message}</small>\r\n        </div>\r\n        <input type=\"submit\" value=\"로그인\" className=\"submit-btn\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { auth, logOutUser } from \"../../../_actions/user_action\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\r\n\r\nconst NavBar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { loggedIn, username } = useSelector((state) => ({\r\n    loggedIn: state.user.loggedIn,\r\n    username: state.user.username,\r\n  }));\r\n  const [menuToggle, setMenuToggle] = useState(false);\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await dispatch(logOutUser());\r\n      alert(\"로그아웃 되었습니다\");\r\n      await dispatch(auth());\r\n      return history.push(\"/\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const toggleMenu = (e) => {\r\n    e.preventDefault();\r\n    setMenuToggle(!menuToggle);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Link to=\"/\">\r\n          <h1 className=\"logo\">galpi</h1>\r\n        </Link>\r\n\r\n        <svg\r\n          height=\"40px\"\r\n          id=\"menu-btn\"\r\n          className=\"open\"\r\n          viewBox=\"0 0 32 32\"\r\n          onClick={toggleMenu}\r\n        >\r\n          <path\r\n            fill=\"#db2b39\"\r\n            d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\"\r\n          />\r\n        </svg>\r\n\r\n        <nav id=\"nav\" className={menuToggle ? `open-nav` : undefined}>\r\n          <svg\r\n            viewBox=\"0 0 24 24\"\r\n            id=\"exit-btn\"\r\n            className=\"exit\"\r\n            onClick={toggleMenu}\r\n          >\r\n            <path\r\n              id=\"exit\"\r\n              fill=\"#db2b39\"\r\n              d=\"M14.8,12l3.6-3.6c0.8-0.8,0.8-2,0-2.8c-0.8-0.8-2-0.8-2.8,0L12,9.2L8.4,5.6c-0.8-0.8-2-0.8-2.8,0   c-0.8,0.8-0.8,2,0,2.8L9.2,12l-3.6,3.6c-0.8,0.8-0.8,2,0,2.8C6,18.8,6.5,19,7,19s1-0.2,1.4-0.6l3.6-3.6l3.6,3.6   C16,18.8,16.5,19,17,19s1-0.2,1.4-0.6c0.8-0.8,0.8-2,0-2.8L14.8,12z\"\r\n            />\r\n          </svg>\r\n          {!loggedIn ? (\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to=\"/\">\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/thumbnails\">갈피들</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/login\">로그인</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/register\">회원가입</NavLink>\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to=\"/\">\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/post\">갈피 남기기</NavLink>\r\n              </li>\r\n              <li className=\"sub\">\r\n                <NavLink to={`/user/${username}`} className=\"nav-username\">\r\n                  {username}\r\n                </NavLink>\r\n                <div className=\"submenu\">\r\n                  <ul>\r\n                    <li>\r\n                      <NavLink to=\"/dashboard\">대시보드</NavLink>\r\n                    </li>\r\n                    <li onClick={logout}>\r\n                      <span>로그아웃</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </nav>\r\n      </header>\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst NotFound = (params) => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <span role=\"img\" aria-label=\"not found\">\r\n          ⛔\r\n        </span>{\" \"}\r\n        잘못된 경로로 들어오셨네요. 어서 돌아가주세요.\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Canvas = ({\r\n  url,\r\n  color,\r\n  opt,\r\n  quote,\r\n  fontcolor,\r\n  fontsize,\r\n  fonttype,\r\n  fontlineheight,\r\n  setQuote,\r\n  canvasRef,\r\n  fontalign,\r\n}) => {\r\n  const [quoteClickStart, setQuoteClickStart] = useState({ x: 0, y: 0 });\r\n  const [quoteXY, setQuoteXY] = useState({ x: 200, y: 200 });\r\n  const [imgClickStart, setImgClickStart] = useState({ x: 0, y: 0 });\r\n  const [imgXY, setImgXY] = useState({ x: 0, y: 0 });\r\n  const [resize, setResize] = useState(\"none\");\r\n  const [quoteCursor, setQuoteCursor] = useState(\"grab\");\r\n  const [imgCursor, setImgCursor] = useState(\"move\");\r\n\r\n  const bgrStyleObj = {\r\n    backgroundColor: color,\r\n    cursor: imgCursor,\r\n  };\r\n\r\n  const textStyleObj = {\r\n    color: fontcolor,\r\n    fontSize: `${fontsize}px`,\r\n    fontFamily: fonttype,\r\n    lineHeight: `${fontlineheight}px`,\r\n    resize,\r\n    top: quoteXY.y,\r\n    left: quoteXY.x,\r\n    cursor: quoteCursor,\r\n    textAlign: fontalign,\r\n  };\r\n\r\n  const imgPos = {\r\n    top: imgXY.y,\r\n    left: imgXY.x,\r\n  };\r\n\r\n  const handleDragStart = (e, cb) => {\r\n    setQuoteCursor(\"grabbing\");\r\n    setImgCursor(\"grabbing\");\r\n    const x = e.clientX;\r\n    const y = e.clientY;\r\n    cb({ x, y });\r\n  };\r\n\r\n  const handleDragEndQuote = (e) => {\r\n    setQuoteCursor(\"grab\");\r\n    let distanceX = e.clientX - quoteClickStart.x;\r\n    let distanceY = e.clientY - quoteClickStart.y;\r\n    setQuoteXY({ x: quoteXY.x + distanceX, y: quoteXY.y + distanceY });\r\n  };\r\n\r\n  const handleDragEndImg = (e) => {\r\n    setImgCursor(\"move\");\r\n    let distanceX = e.clientX - imgClickStart.x;\r\n    let distanceY = e.clientY - imgClickStart.y;\r\n    setImgXY({\r\n      x: imgXY.x + distanceX,\r\n      y: imgXY.y + distanceY,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setImgXY({ x: 0, y: 0 });\r\n  }, [url]);\r\n\r\n  return (\r\n    <section className=\"canvas-wrapper\">\r\n      <div id=\"canvas\" className=\"canvas\" ref={canvasRef}>\r\n        {opt ? (\r\n          <div className=\"canvas-bgr\" style={bgrStyleObj}>\r\n            <img\r\n              src={url}\r\n              alt=\"background for quote lines\"\r\n              draggable=\"true\"\r\n              onDoubleClick={() => setImgXY({ x: 0, y: 0 })}\r\n              onDragStart={(e) => {\r\n                handleDragStart(e, setImgClickStart);\r\n              }}\r\n              onDragEnd={(e) => {\r\n                handleDragEndImg(e);\r\n              }}\r\n              style={imgPos}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"canvas-bgr\" style={bgrStyleObj} />\r\n        )}\r\n\r\n        <textarea\r\n          className=\"quote-textarea\"\r\n          value={quote}\r\n          onChange={(e) => setQuote(e.target.value)}\r\n          defaultValue={`마음에 드는 구절을 입력하세요`}\r\n          style={textStyleObj}\r\n          draggable=\"true\"\r\n          onFocus={() => setResize(\"both\")}\r\n          onBlur={() => setResize(\"none\")}\r\n          onDragStart={(e) => {\r\n            handleDragStart(e, setQuoteClickStart);\r\n          }}\r\n          onDragEnd={(e) => {\r\n            handleDragEndQuote(e);\r\n          }}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React, { useState } from \"react\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst getBase64 = (img, cb) => {\r\n  const reader = new FileReader();\r\n  reader.onloadend = () => {\r\n    cb(reader.result);\r\n  };\r\n  reader.readAsDataURL(img);\r\n};\r\n\r\nexport const Preview = ({ setUrl, setOpt }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (info) => {\r\n    setLoading(true);\r\n    let img = info.target.files[0];\r\n\r\n    getBase64(img, (imgUrl) => {\r\n      setUrl(imgUrl); // prop: setImgurl\r\n\r\n      setOpt(true);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"canvas-image\">\r\n      <label htmlFor=\"canvas-image\">\r\n        {loading ? <LoadingOutlined /> : <PlusOutlined />}배경 이미지\r\n      </label>\r\n      <form>\r\n        <input\r\n          type=\"file\"\r\n          name=\"canvas-image\"\r\n          id=\"canvas-image\"\r\n          accept=\"image/png, image/jpeg\"\r\n          onChange={handleChange}\r\n          style={{ display: \"none\" }}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nexport const BgrColorPicker = (props) => {\r\n  const { setColor, color } = props;\r\n\r\n  const handleColor = (color) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  return (\r\n    <div className=\"canvas-color\">\r\n      <label htmlFor=\"canvas-color\" style={{ display: \"none\" }}>\r\n        배경색\r\n      </label>\r\n      <ChromePicker\r\n        color={color}\r\n        onChange={handleColor}\r\n        className=\"bgr-colorpicker\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AlignCenterOutlined,\r\n  AlignLeftOutlined,\r\n  AlignRightOutlined,\r\n  ColumnWidthOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nexport const FontAlign = ({ setFontalign, fontalign }) => {\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const iconHandler = () => {\r\n    switch (fontalign) {\r\n      case \"left\":\r\n        return <AlignLeftOutlined />;\r\n      case \"center\":\r\n        return <AlignCenterOutlined />;\r\n      case \"right\":\r\n        return <AlignRightOutlined />;\r\n      case \"justify\":\r\n        return <ColumnWidthOutlined />;\r\n      default:\r\n        return <AlignLeftOutlined />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"font\" onClick={() => setDisplay(!display)}>\r\n      <label htmlFor=\"font-align\" style={{ display: \"none\" }}>\r\n        정렬\r\n      </label>\r\n      {iconHandler()}\r\n      {display && (\r\n        <div className=\"pop-up align-opt\">\r\n          <AlignLeftOutlined\r\n            onClick={() => {\r\n              setFontalign(\"left\");\r\n              setDisplay(!display);\r\n            }}\r\n          />\r\n          <AlignCenterOutlined\r\n            onClick={() => {\r\n              setFontalign(\"center\");\r\n              setDisplay(!display);\r\n            }}\r\n          />\r\n          <AlignRightOutlined\r\n            onClick={() => {\r\n              setFontalign(\"right\");\r\n              setDisplay(!display);\r\n            }}\r\n          />\r\n          <ColumnWidthOutlined\r\n            onClick={() => {\r\n              setFontalign(\"justify\");\r\n              setDisplay(!display);\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { FontColorsOutlined } from \"@ant-design/icons\";\r\n\r\nexport const FontColorPicker = (props) => {\r\n  const [display, setDisplay] = useState(false);\r\n  const { setColor, color } = props;\r\n\r\n  const handleColor = (color) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  const style = {\r\n    color: color,\r\n  };\r\n\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-color\" style={{ display: \"none\" }}>\r\n        글씨 색상\r\n      </label>\r\n      <FontColorsOutlined\r\n        className=\"icon\"\r\n        onClick={() => setDisplay(!display)}\r\n        style={style}\r\n      />\r\n      {display && (\r\n        <div className=\"pop-up sketch-picker\">\r\n          <SketchPicker color={color} onChange={handleColor} triangle=\"hide\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { LineHeightOutlined } from \"@ant-design/icons\";\r\n\r\nexport const FontLineHeight = ({ setFontlineheight }) => {\r\n  const fontLineHandler = (e) => {\r\n    e.preventDefault();\r\n    setFontlineheight(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-lineheight\" style={{ display: \"none\" }}>\r\n        줄 간격\r\n      </label>\r\n      <LineHeightOutlined className=\"icon\" />\r\n      <input\r\n        type=\"range\"\r\n        id=\"font-lineheight\"\r\n        min={18}\r\n        max={50}\r\n        step={1}\r\n        defaultValue={20}\r\n        onChange={fontLineHandler}\r\n        className=\"slider\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FontSizeOutlined } from \"@ant-design/icons\";\r\n\r\nexport const FontSlider = ({ setFontsize }) => {\r\n  const fontsizeHandler = (e) => {\r\n    e.preventDefault();\r\n    let val = e.target.value;\r\n    setFontsize(val);\r\n  };\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-size\" style={{ display: \"none\" }}>\r\n        글씨 크기\r\n      </label>\r\n      <FontSizeOutlined className=\"icon\" />\r\n      <input\r\n        type=\"range\"\r\n        id=\"font-size\"\r\n        min={5}\r\n        max={50}\r\n        step={1}\r\n        defaultValue={16}\r\n        onChange={fontsizeHandler}\r\n        className=\"slider\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { QuestionOutlined } from \"@ant-design/icons\";\r\n\r\nexport const FontType = ({ setFonttype }) => {\r\n  const [counter, setCounter] = useState(0);\r\n  const fonts = [\r\n    '\"Noto Sans KR\", \"Verdana\", \"Malgun Gothic\", \"sans-serif\"',\r\n    '\"Noto Serif KR\", \"Times New Roman\",\"Georgia\", \"serif\"',\r\n    '\"GyeonggiBatang\", \"Batang\", \"Caflisch Script\", \"Adobe Poetica\", \"Sanvito\", \"Ex Ponto\", \"cursive\" ',\r\n    '\"SunBatang-Bold\", \"Dotum\", \"Modern\", \"Arial Black\", \"serif\"',\r\n    '\"TmoneyRoundWindRegular\", \"Courier New\", \"fantasy\"',\r\n  ];\r\n\r\n  const fontTypeHandler = () => {\r\n    setFonttype(fonts[counter]);\r\n    setCounter(counter + 1);\r\n    if (counter === fonts.length - 1) return setCounter(0);\r\n  };\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-type\" style={{ display: \"none\" }}>\r\n        글씨 종류\r\n      </label>\r\n      <QuestionOutlined className=\"icon\" onClick={fontTypeHandler} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport Canvas from \"./canvas\";\r\nimport { Preview } from \"./preview\";\r\nimport { BgrColorPicker } from \"./bgr-colorpicker\";\r\nimport {\r\n  FontSlider,\r\n  FontType,\r\n  FontLineHeight,\r\n  FontAlign,\r\n  FontColorPicker,\r\n} from \"./font\";\r\nimport { contentPost, imgPost } from \"../../../_actions/post_action\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst Posting = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { history } = props;\r\n  const [url, setUrl] = useState(); // preview\r\n  const [color, setColor] = useState(\"#f1f2f6\");\r\n  const [fontsize, setFontsize] = useState(16);\r\n  const [fontcolor, setFontcolor] = useState(\"black\");\r\n  const [fonttype, setFonttype] = useState(\r\n    '\"Noto Serif KR\", \"Times New Roman\",\"Georgia\", \"serif\"'\r\n  );\r\n  const [fontalign, setFontalign] = useState(\"left\");\r\n  const [fontlineheight, setFontlineheight] = useState(20);\r\n  const [opt, setOpt] = useState(false);\r\n  const [quote, setQuote] = useState();\r\n  const [content, setContent] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const canvasRef = useRef();\r\n\r\n  const postContent = async (url) => {\r\n    let data = {\r\n      content,\r\n      url,\r\n    };\r\n    try {\r\n      await dispatch(dispatch(contentPost(data)));\r\n      alert(\"업로드 성공 !\");\r\n      setLoading(false);\r\n      history.replace(\"/home\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const postImage = async (blob) => {\r\n    const img = blob;\r\n    const formData = new FormData();\r\n    formData.append(\"img\", img, \"combined.png\");\r\n\r\n    try {\r\n      let response = await dispatch(imgPost(formData));\r\n      postContent(response.payload.url);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const domToImage = () => {\r\n    setLoading(true);\r\n    const canvasDiv = canvasRef.current;\r\n    domtoimage.toBlob(canvasDiv).then((blob) => {\r\n      postImage(blob);\r\n    });\r\n  };\r\n\r\n  useEffect(() => setOpt(true), [url]);\r\n  useEffect(() => setOpt(false), [color]);\r\n\r\n  return (\r\n    <div className=\"posting\">\r\n      <h1 className=\"page-title\">갈피 남기기</h1>\r\n\r\n      <div className=\"canvas-background\">\r\n        <span className=\"instruction\">1. 배경 선택</span>\r\n        <div className=\"canvas-back\">\r\n          <Preview setUrl={setUrl} setOpt={setOpt} id=\"canvas-image\" />\r\n          <span>OR</span>\r\n          <BgrColorPicker setColor={setColor} color={color} id=\"canvas-color\" />\r\n        </div>\r\n        <span className=\"instruction\">2. 폰트 선택</span>\r\n        <div className=\"canvas-font\">\r\n          <FontType setFonttype={setFonttype} />\r\n          <FontColorPicker setColor={setFontcolor} color={fontcolor} />\r\n          <FontAlign setFontalign={setFontalign} fontalign={fontalign} />\r\n          <FontSlider setFontsize={setFontsize} />\r\n          <FontLineHeight setFontlineheight={setFontlineheight} />\r\n        </div>\r\n      </div>\r\n\r\n      <Canvas\r\n        url={url}\r\n        color={color}\r\n        opt={opt}\r\n        fontcolor={fontcolor}\r\n        fontsize={fontsize}\r\n        fonttype={fonttype}\r\n        quote={quote}\r\n        setQuote={setQuote}\r\n        content={content}\r\n        setContent={setContent}\r\n        canvasRef={canvasRef}\r\n        fontlineheight={fontlineheight}\r\n        fontalign={fontalign}\r\n      />\r\n      <ul className=\"canvas-desc\">\r\n        <li>👁‍🗨 텍스트 상자의 크기와 위치를 직접 조정할 수 있습니다</li>\r\n        <li>\r\n          👁‍🗨이미지의 위치를 조정할 수 있고, 더블클릭 시 처음 위치로 설정됩니다\r\n        </li>{\" \"}\r\n      </ul>\r\n      <div className=\"content\">\r\n        <span className=\"instruction\">3. 코멘트 추가</span>\r\n        <label htmlFor=\"content\" style={{ display: \"none\" }}>\r\n          코멘트\r\n        </label>\r\n        <textarea\r\n          className=\"content-textarea\"\r\n          name=\"content\"\r\n          value={content}\r\n          rows=\"5\"\r\n          onChange={(e) => setContent(e.target.value)}\r\n          placeholder=\"작가, 책 제목, 간단한 소감 등을 남겨주세요\"\r\n        />\r\n      </div>\r\n      <div className=\"upload-btn\">\r\n        <button onClick={domToImage}>\r\n          {!loading ? \"업로드\" : <LoadingOutlined />}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posting;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAPost } from \"../../../_actions/post_action\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport Likes from \"../../containers/likes\";\r\nimport CommentForm from \"../../containers/comment-form\";\r\nimport FetchComments from \"../../containers/comments\";\r\nimport DeleteAPost from \"../../containers/post-delete\";\r\n\r\nconst Post = () => {\r\n  const { uuid } = useParams();\r\n  const dispatch = useDispatch();\r\n  const { loggedIn, userId } = useSelector((state) => ({\r\n    loggedIn: state.user.loggedIn,\r\n    userId: state.user.userId,\r\n  }));\r\n  const [post, setPost] = useState();\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let response = await dispatch(getAPost(uuid));\r\n        setPost(response.payload.post);\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [uuid, dispatch]);\r\n\r\n  return (\r\n    <div className=\"body-wrapper\">\r\n      {post && (\r\n        <section className=\"a-post\">\r\n          <div className=\"a-post-header\">\r\n            <div className=\"user\">\r\n              <Link to={`/user/${post.user.username}`}>\r\n                {post.user.username}\r\n              </Link>\r\n            </div>\r\n            {userId === post.user._id && (\r\n              <div className=\"delete\">\r\n                <DeleteAPost uuid={uuid} />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"image\">\r\n            <img src={post.url} alt={`${post.user.username}의 포스팅`} />\r\n          </div>\r\n\r\n          <div className=\"content\">\r\n            <p>{post.content}</p>\r\n          </div>\r\n          {loggedIn && <Likes likes={post.likes} uuid={post.uuid} />}\r\n          {comments && (\r\n            <FetchComments\r\n              uuid={uuid}\r\n              comments={comments}\r\n              setComments={setComments}\r\n            />\r\n          )}\r\n          {loggedIn && (\r\n            <CommentForm\r\n              uuid={uuid}\r\n              comments={comments}\r\n              setComments={setComments}\r\n            />\r\n          )}\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PostInfiniteScroll from \"../../containers/infinite-scroll\";\r\nimport PostThumbnail from \"../../containers/post-thumbnail\";\r\nimport { getUser } from \"../../../_actions/user_action\";\r\nimport PaperCard from \"../../containers/papercard\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\n\r\nconst Profile = () => {\r\n  const { username } = useParams();\r\n  const [user, setUser] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      let response = await dispatch(getUser(username));\r\n      let { user } = response.payload;\r\n      setUser(user);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n      setLoading(false);\r\n    }\r\n  }, [dispatch, username]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      {loading && \"유저 정보를 가져오고 있습니다\"}\r\n      {!loading && user ? (\r\n        <>\r\n          <PaperCard title={user.username}>\r\n            <br />\r\n            <h2>이름: {user.name}</h2>\r\n            <p>계정 생성일: {user.createdAt.slice(0, 10)}</p>\r\n          </PaperCard>\r\n          <PostInfiniteScroll\r\n            view=\"thumbnail\"\r\n            render={(posts, index) => (\r\n              <PostThumbnail\r\n                key={`postthumbnail-${index}`}\r\n                posts={posts}\r\n                index={index}\r\n              />\r\n            )}\r\n            username={user.username}\r\n          />\r\n        </>\r\n      ) : (\r\n        <p> 해당하는 유저가 없습니다. </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport { CheckCircleOutlined, WarningOutlined } from \"@ant-design/icons\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { auth, registerUser } from \"../../../_actions/user_action\";\r\n\r\nconst RegistrationForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailValid, setEmailValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameValid, setUsernameValid] = useState({\r\n    valid: \"\",\r\n    message: \"3 ~ 15글자 이상, 영문 및 숫자\",\r\n    ok: false,\r\n  });\r\n  const [name, setName] = useState(\"\");\r\n  const [nameValid, setNameValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordValid, setPasswordValid] = useState({\r\n    valid: \"\",\r\n    message: \"영어 대·소문자와 숫자 포함, 8글자 이상\",\r\n    ok: false,\r\n  });\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [confirmValid, setConfirmValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n\r\n  const onFinish = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      emailValid.ok &&\r\n      usernameValid.ok &&\r\n      nameValid.ok &&\r\n      passwordValid.ok &&\r\n      confirmValid.ok\r\n    ) {\r\n      try {\r\n        let userinfo = {\r\n          email,\r\n          username,\r\n          name,\r\n          password,\r\n          passwordConfirmation: confirm,\r\n        };\r\n        await dispatch(registerUser(userinfo));\r\n        alert(\"회원가입에 성공했습니다.\");\r\n        await dispatch(auth());\r\n        return history.push(\"/home\");\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    } else return alert(\"정확하게 입력해주세요\");\r\n  };\r\n\r\n  const isPassword = (pwd) => {\r\n    return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(pwd);\r\n  };\r\n\r\n  const confirmHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setConfirm(val);\r\n    if (val === \"\") {\r\n      setConfirmValid({\r\n        valid: \"error\",\r\n        message: \"비밀번호 확인을 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (password !== val) {\r\n      setConfirmValid({\r\n        valid: \"error\",\r\n        message: \"비밀번호를 동일하게 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else setConfirmValid({ valid: \"success\", message: \"\", ok: true });\r\n  };\r\n\r\n  const passwordHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setPassword(val);\r\n    if (val === \"\") {\r\n      setPasswordValid({\r\n        valid: \"error\",\r\n        message: \"비밀번호를 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (!isPassword(val)) {\r\n      setPasswordValid({\r\n        valid: \"error\",\r\n        message: \"영어 대·소문자와 숫자 포함하고 8글자 이상이여야 합니다\",\r\n        ok: false,\r\n      });\r\n    } else setPasswordValid({ valid: \"success\", message: \"\", ok: true });\r\n  };\r\n\r\n  const nameHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setName(val);\r\n    if (val === \"\") {\r\n      setNameValid({ valid: \"error\", message: \"이름을 입력하세요\", ok: false });\r\n    } else {\r\n      setNameValid({ valid: \"success\", message: \"\", ok: true });\r\n    }\r\n  };\r\n\r\n  const usernameHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setUsername(val);\r\n    if (val === \"\") {\r\n      setUsernameValid({\r\n        valid: \"error\",\r\n        message: \"아이디를 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (\r\n      !/^(?=[a-zA-Z0-9._]{3,20}$)(?!.*[_.]{2})[^_.].*[^_.]$/.test(val)\r\n    ) {\r\n      setUsernameValid({\r\n        valid: \"error\",\r\n        message: \"3 ~ 15글자 이상, 영문 혹은 숫자\",\r\n        ok: false,\r\n      });\r\n    } else {\r\n      setUsernameValid({ valid: \"success\", message: \"\", ok: true });\r\n    }\r\n  };\r\n\r\n  const emailHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setEmail(val);\r\n    if (val === \"\") {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (!EmailValidator.validate(val)) {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 올바르게 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else {\r\n      setEmailValid({\r\n        valid: \"success\",\r\n        message: \"\",\r\n        ok: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form register\">\r\n      <h1 className=\"page-title\">회원가입</h1>\r\n      <form onSubmit={onFinish}>\r\n        <div className={`form-control ${emailValid.valid}`}>\r\n          <label htmlFor=\"email\">이메일</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            value={email}\r\n            placeholder=\"예) galpi@galpi.com\"\r\n            onChange={emailHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{emailValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${usernameValid.valid}`}>\r\n          <label htmlFor=\"username\">아이디(영문)</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            maxLength=\"128\"\r\n            title=\"최소 2글자 이상\"\r\n            value={username}\r\n            onChange={usernameHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{usernameValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${nameValid.valid}`}>\r\n          <label htmlFor=\"name\">이름</label>\r\n          <input id=\"name\" type=\"text\" value={name} onChange={nameHandler} />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{nameValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${passwordValid.valid}`}>\r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={passwordHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n\r\n          <small>{passwordValid.message}</small>\r\n        </div>\r\n        <div className={`form-control ${confirmValid.valid}`}>\r\n          <label htmlFor=\"confirm\">비밀번호 확인</label>\r\n          <input\r\n            id=\"confirm\"\r\n            type=\"password\"\r\n            value={confirm}\r\n            onChange={confirmHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{confirmValid.message}</small>\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"가입하기\" className=\"submit-btn\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React from \"react\";\r\nimport PostInfiniteScroll from \"../../containers/infinite-scroll\";\r\nimport PostThumbnail from \"../../containers/post-thumbnail\";\r\n\r\nconst Thumbnails = (params) => {\r\n  return (\r\n    <div className=\"thumbnails\">\r\n      <h1 className=\"page-title\">방금 갈피된 문장들</h1>\r\n      <div className=\"notice\">\r\n        <span role=\"img\" aria-label=\"notice to login\">\r\n          👀\r\n        </span>\r\n        로그인 하면 직접 포스팅을 하거나\r\n        <br /> 다른 갈피에 댓글을 달 수 있어요\r\n      </div>\r\n      <PostInfiniteScroll\r\n        render={(posts, index) => (\r\n          <PostThumbnail key={`post-${index}`} posts={posts} index={index} />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Thumbnails;\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const AuthRoute = ({ component: Component, ...rest }) => {\r\n  const { loggedIn } = useSelector((state) => ({\r\n    loggedIn: state.user.loggedIn,\r\n  }));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            push\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const GuestRoute = ({ component: Component, ...rest }) => {\r\n  const { loggedIn } = useSelector((state) => ({\r\n    loggedIn: state.user.loggedIn,\r\n  }));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            push\r\n            to={{ pathname: \"/home\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport {\r\n  Dashboard,\r\n  ErrorModal,\r\n  Footer,\r\n  Home,\r\n  LandingPage,\r\n  Login,\r\n  NavBar,\r\n  NotFound,\r\n  Posting,\r\n  Post,\r\n  Profile,\r\n  Register,\r\n  Thumbnails,\r\n} from \"./components/views/index\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { GuestRoute, AuthRoute } from \"./route/index\";\r\nimport { auth } from \"./_actions/user_action\";\r\nimport { errorHandle } from \"./_actions/error_actions\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchAuth = async () => {\r\n      try {\r\n        await dispatch(auth());\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    };\r\n    fetchAuth();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <NavBar>\r\n          <section className=\"body-container\">\r\n            <Switch>\r\n              <GuestRoute exact path=\"/\" component={LandingPage} />\r\n\r\n              <GuestRoute path=\"/login\" component={Login} />\r\n              <GuestRoute path=\"/register\" component={Register} />\r\n\r\n              <AuthRoute path=\"/dashboard\" component={Dashboard} />\r\n              <AuthRoute path=\"/home\" component={Home} />\r\n              <AuthRoute path=\"/post\" component={Posting} />\r\n\r\n              <Route path=\"/thumbnails\" component={Thumbnails} />\r\n              <Route path=\"/user/:username\" children={<Profile />} />\r\n              <Route path=\"/p/:uuid\" children={<Post />} />\r\n\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </section>\r\n        </NavBar>\r\n      </Router>\r\n      <Footer />\r\n      <ErrorModal />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ERROR_HANDLE, ERROR_HIDE } from \"../_actions/types\";\r\n\r\nconst initState = {\r\n  name: null,\r\n  status: null,\r\n  message: null,\r\n  isOpen: false,\r\n};\r\n\r\nexport default function (state = initState, action) {\r\n  const { error } = action;\r\n\r\n  switch (action.type) {\r\n    case ERROR_HANDLE:\r\n      if (!error.statusText) error.statusText = null;\r\n      return {\r\n        name: error.statusText,\r\n        status: error.status,\r\n        message: error.data.message,\r\n        isOpen: true,\r\n      };\r\n\r\n    case ERROR_HIDE:\r\n      return {\r\n        name: null,\r\n        status: null,\r\n        message: null,\r\n        isOpen: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\nimport post from \"./post_reducer\";\r\nimport comment from \"./comment_reducer\";\r\nimport like from \"./like_reducer\";\r\nimport error from \"./error_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  post,\r\n  comment,\r\n  like,\r\n  error,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH,\r\n  LOGOUT_USER,\r\n  GET_USER,\r\n  GET_DASHBOARD,\r\n  DELETE_USER,\r\n} from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return {\r\n        ...state,\r\n        getRegisterSuccess: action.payload.message,\r\n      };\r\n\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        userId: action.payload.user._id,\r\n        username: action.payload.user.username,\r\n      };\r\n\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        userId: {},\r\n        username: {},\r\n      };\r\n\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        getUserSuccess: action.payload.message,\r\n      };\r\n\r\n    case DELETE_USER:\r\n      return {\r\n        ...state,\r\n        deleteUserSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_DASHBOARD:\r\n      return {\r\n        ...state,\r\n        getDashboardSuccess: action.payload.message,\r\n      };\r\n    case AUTH:\r\n      return {\r\n        ...state,\r\n        loggedIn: action.payload.isAuth,\r\n        userId: action.payload.user._id,\r\n        username: action.payload.user.username,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CONTENT_POST,\r\n  GET_A_POST,\r\n  IMG_POST,\r\n  GET_POSTS,\r\n  DELETE_POST,\r\n} from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case IMG_POST:\r\n      return {\r\n        ...state,\r\n        imgurl: action.payload.url,\r\n      };\r\n\r\n    case CONTENT_POST:\r\n      return {\r\n        ...state,\r\n        postUploadSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_A_POST:\r\n      return {\r\n        ...state,\r\n        postGetSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        postsGetSuccess: action.payload.message,\r\n      };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        postDelSuccess: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_COMMENT, POST_COMMENT, DELETE_COMMENT } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case GET_COMMENT:\r\n      return {\r\n        ...state,\r\n        getCommentSuccess: action.payload.message,\r\n      };\r\n\r\n    case POST_COMMENT:\r\n      return {\r\n        ...state,\r\n        postCommentSuccess: action.payload.message,\r\n      };\r\n\r\n    case DELETE_COMMENT:\r\n      return {\r\n        ...state,\r\n        deleteComomentSuccess: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { POST_LIKE, POST_UNLIKE } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case POST_LIKE:\r\n      return {\r\n        ...state,\r\n        getLikeSuccess: action.payload.message,\r\n      };\r\n\r\n    case POST_UNLIKE:\r\n      return {\r\n        ...state,\r\n        postUnlikeSuccess: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport Reducers from \"../_reducers\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  promiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\n\r\n// const initialState = {\r\n//   auth: {\r\n//     loggedIn: true,\r\n//     userId: \"randomid\",\r\n//     username: \"haneul\",\r\n//     email: \"goodnavy@naver.com\",\r\n//   },\r\n// };\r\n\r\nconst store = createStoreWithMiddleware(\r\n  Reducers,\r\n  // initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./_store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}