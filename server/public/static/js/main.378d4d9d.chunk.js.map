{"version":3,"sources":["_actions/user_action.js","_actions/types.js","components/views/Dashboard/dashboard.js","_actions/post_action.js","components/containers/infinite-scroll.js","_actions/comment_action.js","components/containers/comment-form.js","components/containers/comments.js","_actions/like_action.js","components/containers/likes.js","components/containers/post-card.js","components/views/Home/home.js","components/views/LandingPage/landing.js","util/auth.js","components/views/LoginPage/login.js","components/views/PostingPage/canvas.js","components/views/PostingPage/preview.js","components/views/PostingPage/bgrColorpicker.js","components/views/PostingPage/fontColorpicker.js","components/views/PostingPage/posting.js","components/containers/post-thumbnail.js","components/views/ProfilePage/profile.js","components/views/RegisterPage/register.js","components/views/PostPage/post.js","components/views/NavBar/navbar.js","route/authRoute.js","route/guestRoute.js","App.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/post_reducer.js","_reducers/comment_reducer.js","_reducers/like_reducer.js","_store/index.js","index.js"],"names":["baseUrl","getUser","username","type","payload","axios","get","then","res","data","catch","e","console","log","getDashboard","Dashboard","params","dispatch","useDispatch","useState","user","setUser","posts","setPosts","useEffect","a","result","error","fetchData","title","loading","style","width","bordered","name","email","length","getAPost","uuid","getPosts","page","PostInfiniteScroll","props","setLoading","element","setElement","useRef","prevY","observer","IntersectionObserver","entries","y","boundingClientRect","current","handleInitial","root","rootMargin","threshold","useCallback","pageNum","status","values","currentElement","currentObserver","observe","unobserve","className","map","index","render","ref","getComment","postComment","body","post","CommentForm","setComments","comments","comment","setComment","handleCommentSubmit","preventDefault","savedComment","placeholder","value","onChange","target","onClick","FetchComments","userId","useSelector","state","auth","deleteAComment","li","parentElement","id","delete","fetchComment","newComments","message","LoadingOutlined","key","_id","postLike","postUnlike","Likes","likes","loggedInUser","likesArray","setLikesArray","showLikes","setShowLikes","handleLike","handleUnlike","filteredLikes","filter","includes","PushpinFilled","PushpinOutlined","PostCard","content","url","showComment","setShowComment","CommentToggle","TagsFilled","TagsOutlined","alt","src","to","ZoomInOutlined","Home","Landing","AUTH_KEY","setExp","ttl","now","Date","item","exp","getTime","localStorage","setItem","JSON","stringify","getExp","itemStr","getItem","parse","expiry","removeItem","LoginForm","location","history","initialValues","remember","onFinish","dataToSubmit","password","DAYS","from","replace","Item","rules","required","prefix","UserOutlined","LockOutlined","valuePropName","noStyle","htmlType","href","Canvas","resize","setResize","quoteTop","setQuoteTop","quoteLeft","setQuoteLeft","quoteCursor","setQuoteCursor","imgTop","setImgTop","imgLeft","setImgLeft","imgCursor","setImgCursor","curX","setCurX","curY","setCurY","color","opt","quote","fontcolor","fontsize","setQuote","canvasRef","bgrStyleObj","backgroundColor","cursor","textStyleObj","fontSize","top","left","imgPos","objectPosition","draggable","onDragStart","cbtop","cbleft","x","clientX","clientY","handleDragStartImg","onDragEnd","handleDragEndImg","defaultValue","onFocus","onBlur","parent","getBoundingClientRect","relativeX","handleDragEndQuote","beforeUpload","file","isJpgOrPng","Preview","setUrl","setOpt","uploadBtn","PlusOutlined","marginTop","listType","showUploadList","info","img","cb","reader","FileReader","onloadend","readAsDataURL","getBase64","originFileObj","imgUrl","customRequest","onSuccess","setTimeout","height","BgrColorPicker","setColor","hex","FontColorPicker","display","setDisplay","FontColorsOutlined","triangle","Posting","setFontsize","setFontcolor","setContent","postContent","contentPost","err","postImage","blob","formData","FormData","append","header","imgPost","labelStyle","htmlFor","min","max","step","val","rows","canvasDiv","domtoimage","toBlob","PostThumbnail","push","Profile","useParams","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","Form","useForm","form","confirm","passwordConfirmation","scrollToFirstError","label","pattern","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","Post","setPost","NavBar","loggedIn","menuToggle","setMenuToggle","logout","toggleMenu","viewBox","fill","d","undefined","exact","children","AuthRoute","Component","component","rest","pathname","GuestRoute","App","path","Login","Register","LandingPage","rootReducer","combineReducers","action","register","login","getUserSuccess","getDashboardSuccess","isAuth","imgurl","postUploadSuccess","postGetSuccess","postsGetSuccess","getCommentSuccess","postCommentSuccess","deleteComomentSuccess","like","getLikeSuccess","postUnlikeSuccess","loginDetail","initialStates","store","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","createStoreWithMiddleware","Reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.378d4d9d.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH_USER,\r\n  LOGOUT_USER,\r\n  GET_USER,\r\n  GET_DASHBOARD,\r\n} from \"./types\";\r\n\r\nconst baseUrl = `http://localhost:5050/api`;\r\n\r\nexport function registerUser(body) {\r\n  const request = axios\r\n    .post(`${baseUrl}/user`, body)\r\n    .then((res) => {\r\n      return res.data;\r\n    })\r\n    .catch((e) => console.log(e));\r\n\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  const request = axios\r\n    .post(`${baseUrl}/login`, dataToSubmit)\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function logOutUser() {\r\n  const request = axios\r\n    .post(`${baseUrl}/logout`)\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n\r\n  return {\r\n    type: LOGOUT_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function getUser(username) {\r\n  const request = axios\r\n    .get(`${baseUrl}/user/${username}`)\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n\r\n  return {\r\n    type: GET_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function getDashboard() {\r\n  const request = axios\r\n    .get(`${baseUrl}/dashboard`)\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n\r\n  return {\r\n    type: GET_DASHBOARD,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function auth() {\r\n  const request = axios\r\n    .get(`${baseUrl}/auth`)\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n\r\n  return {\r\n    type: AUTH_USER,\r\n    payload: request,\r\n  };\r\n}\r\n","export const LOGIN_USER = \"login_user\";\r\nexport const REGISTER_USER = \"register_user\";\r\nexport const AUTH_USER = \"auth_user\";\r\nexport const LOGOUT_USER = \"logout_user\";\r\nexport const GET_USER = \"get_user\";\r\nexport const GET_DASHBOARD = \"get_dashboard\";\r\n\r\nexport const IMG_POST = \"img_post\";\r\nexport const CONTENT_POST = \"content_post\";\r\nexport const GET_A_POST = \"get_a_post\";\r\nexport const GET_POSTS = \"get_posts\";\r\n\r\nexport const POST_COMMENT = \"post_comment\";\r\nexport const GET_COMMENT = \"get_comment\";\r\nexport const DELETE_COMMENT = \"delete_comment\";\r\n\r\nexport const POST_LIKE = \"post_like\";\r\nexport const POST_UNLIKE = \"post_unlike\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getDashboard } from \"../../../_actions/user_action\";\r\n\r\nconst Dashboard = (params) => {\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState();\r\n  const [posts, setPosts] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let result = await dispatch(getDashboard);\r\n\r\n        let { user, posts } = result;\r\n\r\n        setUser(user);\r\n        setPosts(posts);\r\n        console.log(user);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          <Card\r\n            title={`${user.username}님, 안녕하세요 !`}\r\n            loading={false}\r\n            style={{ width: 500 }}\r\n            bordered=\"true\"\r\n          >\r\n            <p>이름: {user.name}</p>\r\n            <p>이메일: {user.email}</p>\r\n            <p>갈피: {posts.length} 개</p>\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        <Card loading={true} style={{ width: 500 }} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import axios from \"axios\";\r\nimport { CONTENT_POST, IMG_POST, GET_A_POST, GET_POSTS } from \"./types\";\r\n\r\nconst baseUrl = `http://localhost:5050`;\r\n\r\nexport function imgPost(formData) {\r\n  let config = {\r\n    header: {\r\n      \"Content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  const request = axios\r\n    .post(`${baseUrl}/api/post/img`, formData, config)\r\n    .then((res) => {\r\n      return res.data;\r\n    });\r\n\r\n  return {\r\n    type: IMG_POST,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function contentPost(data) {\r\n  const request = axios.post(`${baseUrl}/api/post`, data).then((res) => {\r\n    return res.data;\r\n  });\r\n\r\n  return {\r\n    type: CONTENT_POST,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function getAPost(uuid) {\r\n  const request = axios\r\n    .get(`${baseUrl}/api/post/${uuid}`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: GET_A_POST,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function getPosts(page, username) {\r\n  if (username) {\r\n    const request = axios.get(\r\n      `${baseUrl}/api/post?username=${username}&page=${page}&limit=10`\r\n    );\r\n\r\n    return {\r\n      type: GET_POSTS,\r\n      payload: request,\r\n    };\r\n  }\r\n  const request = axios.get(`${baseUrl}/api/post?page=${page}&limit=10`);\r\n\r\n  return {\r\n    type: GET_POSTS,\r\n    payload: request,\r\n  };\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPosts } from \"../../_actions/post_action\";\r\n\r\n// GET posts\r\nconst PostInfiniteScroll = (props) => {\r\n  const { username = null } = props;\r\n  const dispatch = useDispatch();\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [element, setElement] = useState(null);\r\n  const page = useRef(1);\r\n  const prevY = useRef(0);\r\n\r\n  const loadMore = () => {\r\n    page.current++;\r\n    handleInitial(page.current);\r\n  };\r\n\r\n  // intersectionObserver setting\r\n  const observerCallback = (entries) => {\r\n    const firstEntry = entries[0];\r\n    const y = firstEntry.boundingClientRect.y;\r\n\r\n    if (prevY.current > y) {\r\n      loadMore();\r\n    }\r\n    prevY.current = y;\r\n  };\r\n\r\n  let options = {\r\n    root: null,\r\n    rootMargin: \"0px\",\r\n    threshold: 1.0,\r\n  };\r\n\r\n  const observer = useRef(new IntersectionObserver(observerCallback, options));\r\n\r\n  // data fetching\r\n  const fetchData = useCallback(\r\n    async (pageNum) => {\r\n      setLoading(true);\r\n      try {\r\n        let { status, data } = await dispatch(getPosts(pageNum, username)).then(\r\n          (res) => res.payload\r\n        );\r\n\r\n        setLoading(false);\r\n        return { status, data };\r\n      } catch (e) {\r\n        setLoading(false);\r\n        return e;\r\n      }\r\n    },\r\n    [username, dispatch]\r\n  );\r\n\r\n  const handleInitial = useCallback(\r\n    async (page) => {\r\n      const { status, data } = await fetchData(page);\r\n      if (status === 200) {\r\n        setPosts((posts) => [...posts, ...data.posts.values()]);\r\n      }\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleInitial(page.current);\r\n\r\n    const currentElement = element;\r\n    const currentObserver = observer.current;\r\n\r\n    if (currentElement) {\r\n      currentObserver.observe(currentElement);\r\n    }\r\n\r\n    return () => {\r\n      if (currentElement) {\r\n        currentObserver.unobserve(currentElement);\r\n      }\r\n    };\r\n  }, [handleInitial, element]);\r\n\r\n  return (\r\n    <div className=\"infinite-scroll-wrapper\">\r\n      {posts ? (\r\n        <ul className=\"posts-list\">\r\n          {posts.map((posts, index) => props.render(posts, index))}\r\n        </ul>\r\n      ) : (\r\n        <p> 마지막 포스트 입니다 ! </p>\r\n      )}\r\n\r\n      {loading && <div>Loading...</div>}\r\n      <div ref={setElement} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostInfiniteScroll;\r\n","import axios from \"axios\";\r\nimport { GET_COMMENT, POST_COMMENT, DELETE_COMMENT } from \"./types\";\r\n\r\nconst baseUrl = `http://localhost:5050`;\r\n\r\nexport function getComment(uuid) {\r\n  const request = axios\r\n    .get(`${baseUrl}/api/comment/${uuid}`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: GET_COMMENT,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function postComment(uuid, body) {\r\n  const request = axios\r\n    .post(`${baseUrl}/api/comment/${uuid}`, body)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: POST_COMMENT,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function deleteComment(id) {\r\n  const request = axios\r\n    .delete(`${baseUrl}/api/comment/${id}`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: DELETE_COMMENT,\r\n    payload: request,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postComment } from \"../../_actions/comment_action\";\r\n\r\nconst CommentForm = ({ uuid, setComments, comments }) => {\r\n  const dispatch = useDispatch();\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const res = await dispatch(postComment(uuid, { comment }));\r\n      const { status, data } = res;\r\n\r\n      if (status === 200) {\r\n        setComments([...comments, data.savedComment]);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  const handleComment = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className=\"comment-form\">\r\n      <input placeholder=\"댓글 달기\" value={comment} onChange={handleComment} />\r\n      <button onClick={handleCommentSubmit}>↑</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { getComment, deleteComment } from \"../../_actions/comment_action\";\r\n\r\nconst FetchComments = (props) => {\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector((state) => state.auth.userId);\r\n  const { uuid, comments, setComments } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const deleteAComment = async (e) => {\r\n    e.preventDefault();\r\n    const li = e.target.parentElement;\r\n\r\n    try {\r\n      await dispatch(deleteComment(li.id)).then((res) => {\r\n        console.log(res.payload);\r\n        console.log(\"댓글이 삭제되었습니다\");\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  const fetchComment = useCallback(\r\n    async (uuid) => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await dispatch(getComment(uuid));\r\n        const { payload } = res;\r\n        setLoading(false);\r\n        return payload;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        return e;\r\n      }\r\n    },\r\n    [setLoading, dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const fetchData = async () => {\r\n      try {\r\n        const newComments = await fetchComment(uuid);\r\n        const { comments, message } = newComments;\r\n        if (message === \"success\") {\r\n          setComments(comments);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [fetchComment, setComments, setLoading, uuid]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <LoadingOutlined />}\r\n      {comments ? (\r\n        <ul className=\"comments-list\">\r\n          {comments.map((comment, index) => (\r\n            <li key={index} id={comment._id}>\r\n              <strong>{comment.user.username}</strong>\r\n              {` ${comment.comment}`}\r\n              {userId === comment.user._id && (\r\n                <button onClick={deleteAComment}>⨉</button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <span>첫 댓글을 달아보세요</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FetchComments;\r\n","import axios from \"axios\";\r\nimport { POST_LIKE, POST_UNLIKE } from \"./types\";\r\n\r\nconst baseUrl = `http://localhost:5050/api`;\r\n\r\nexport function postLike(uuid) {\r\n  const request = axios\r\n    .get(`${baseUrl}/like/${uuid}/like`)\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n\r\n  return {\r\n    type: POST_LIKE,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function postUnlike(uuid) {\r\n  const request = axios\r\n    .get(`${baseUrl}/like/${uuid}/unlike`)\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n  return {\r\n    type: POST_UNLIKE,\r\n    payload: request,\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PushpinFilled, PushpinOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postLike, postUnlike } from \"../../_actions/like_action\";\r\n\r\nconst Likes = ({ likes, uuid }) => {\r\n  const loggedInUser = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [likesArray, setLikesArray] = useState([...likes]);\r\n  const [showLikes, setShowLikes] = useState(false);\r\n\r\n  const handleLike = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(postLike(uuid)).then((res) => {\r\n        console.log(res.payload);\r\n        console.log(\"like done\");\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    setLikesArray([...likesArray, loggedInUser.userId]);\r\n\r\n    setShowLikes(true);\r\n\r\n    return;\r\n  };\r\n\r\n  const handleUnlike = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(postUnlike(uuid)).then((res) => {\r\n        console.log(res.payload);\r\n        console.log(\"like done\");\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    const filteredLikes = likesArray.filter((id) => id !== loggedInUser.userId);\r\n    setLikesArray([...filteredLikes]);\r\n    setShowLikes(false);\r\n\r\n    return;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (likes.includes(loggedInUser.userId)) {\r\n      console.log(\"user already liked\");\r\n      setShowLikes(true);\r\n    }\r\n  }, [likes, loggedInUser.userId]);\r\n\r\n  return (\r\n    <div className=\"likes\">\r\n      {showLikes ? (\r\n        <PushpinFilled key=\"likes\" onClick={handleUnlike} />\r\n      ) : (\r\n        <PushpinOutlined key=\"notlikes\" onClick={handleLike} />\r\n      )}\r\n\r\n      <span>{likesArray.length}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Likes;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommentForm from \"./comment-form\";\r\nimport FetchComments from \"./comments\";\r\nimport Likes from \"./likes\";\r\nimport \"./post-card.css\";\r\nimport { TagsOutlined, TagsFilled, ZoomInOutlined } from \"@ant-design/icons\";\r\n\r\nconst PostCard = ({ index, posts }) => {\r\n  const { uuid, likes, content, url, user } = posts;\r\n  const { username } = user;\r\n\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const CommentToggle = (params) => {\r\n    return (\r\n      <div onClick={() => setShowComment(!showComment)}>\r\n        {!showComment ? (\r\n          <TagsOutlined key=\"comment\" />\r\n        ) : (\r\n          <TagsFilled key=\"comment\" />\r\n        )}\r\n\r\n        <span>댓글</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <li key={`postcard-${index}-by${username}`} className=\"postcard\">\r\n      <h1 className=\"user\">{username}</h1>\r\n      <div className=\"post\">\r\n        <img alt=\"example\" src={url} />\r\n      </div>\r\n\r\n      <p className=\"content\">{content}</p>\r\n      <ul className=\"features\">\r\n        <li>\r\n          <Likes likes={likes} uuid={uuid} />\r\n        </li>\r\n        <li>\r\n          <CommentToggle />\r\n        </li>\r\n        <li>\r\n          <Link to={`/p/${uuid}`}>\r\n            <ZoomInOutlined key=\"link\" />\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {showComment && (\r\n        <FetchComments\r\n          uuid={uuid}\r\n          comments={comments}\r\n          setComments={setComments}\r\n        />\r\n      )}\r\n\r\n      <CommentForm uuid={uuid} comments={comments} setComments={setComments} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React from \"react\";\r\nimport PostInfiniteScroll from \"../../containers/infinite-scroll\";\r\nimport PostCard from \"../../containers/post-card\";\r\n\r\nconst Home = (params) => {\r\n  return (\r\n    <>\r\n      <PostInfiniteScroll\r\n        render={(posts, index) => (\r\n          <PostCard key={`post-${index}`} posts={posts} index={index} />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"landing\">\r\n      <div className=\"intro wrapper\">\r\n        <h1>\r\n          말은 제주로\r\n          <br />\r\n          <span>\r\n            글은 <strong>갈피</strong>로\r\n          </span>\r\n        </h1>\r\n        <p>좋아하는 문장들을 원하는 이미지에 옮겨 포스팅 해보세요 !</p>\r\n        <button>\r\n          <Link to=\"/register\">회원가입</Link>\r\n        </button>\r\n        <button>\r\n          <Link to=\"/login\">로그인</Link>\r\n        </button>\r\n      </div>\r\n      {/* <img src=\"bg-img-2.jpg\" alt=\"a highlighted book\" /> */}\r\n      <span className=\"bgr-img\"></span>\r\n    </div>\r\n    // <div className=\"papercards\">\r\n    //   <PaperCard title={`마음에 드는 문장을 갈피에 남겨보세요.`}>\r\n    //     <p>\r\n    //       <br />\r\n    //       <br />\r\n    //       당신을 사로 잡은 문장들을 책 밖으로 꺼내보세요.\r\n    //       <br />\r\n    //       이미지 카드에 새겨 더 오래 기억해보세요.\r\n    //       <br />\r\n    //       한 구절, 한 구절 당신의 글이 될 거예요.\r\n    //       <br />\r\n    //       <br />\r\n    //       톡 치면 인생의 문장이 입에서 술술 흘러나와\r\n    //       <br />\r\n    //       멋있는 사람으로 보일 그 날까지... <br />\r\n    //     </p>\r\n    //   </PaperCard>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","let DAYS = 7;\r\n\r\nexport const AUTH_KEY = \"AUTH_GALPI\";\r\n\r\nexport const TTL = DAYS * 24 * 60 * 60 * 1000;\r\n\r\nexport const setExp = (key, user, ttl) => {\r\n  const now = new Date();\r\n\r\n  const item = {\r\n    username: user.username,\r\n    userId: user.userId,\r\n    exp: now.getTime() + ttl,\r\n  };\r\n\r\n  localStorage.setItem(key, JSON.stringify(item));\r\n};\r\n\r\nexport const getExp = (key) => {\r\n  const itemStr = localStorage.getItem(key);\r\n\r\n  if (!itemStr) {\r\n    return false; // 없을 때 리턴. TODO: false => 서버에서 auth 미들웨어에서 logout\r\n  }\r\n\r\n  const item = JSON.parse(itemStr);\r\n  const now = new Date();\r\n\r\n  if (now.getTime() > item.expiry) {\r\n    localStorage.removeItem(key);\r\n    return false; // 만료 되어서 삭제. TODO: false => 클라이언트에서 다시 login\r\n  }\r\n\r\n  return item; // username 반환\r\n};\r\n\r\nexport const delExp = (key) => {\r\n  localStorage.removeItem(key);\r\n  return true; // TODO: 로그아웃 이후 리다이렉트\r\n};\r\n","import React from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"../../../_actions/user_action\";\r\nimport { AUTH_KEY, setExp, TTL } from \"../../../util/auth\";\r\n\r\nconst LoginForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { location, history } = props;\r\n  const { state } = location;\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n    const { email, password } = values;\r\n\r\n    let userinfo = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(loginUser(userinfo))\r\n      .then((res) => {\r\n        setExp(AUTH_KEY, res.payload, TTL); // TODO: DELETE\r\n        if (state && state.from) {\r\n          history.replace(state.from);\r\n        } else {\r\n          history.replace(\"/home\");\r\n        }\r\n      })\r\n      .catch((e) => console.error(e));\r\n  };\r\n\r\n  return (\r\n    <div className=\"form login\">\r\n      <h1 className=\"page-title\">로그인</h1>\r\n\r\n      <Form name=\"login\" initialValues={{ remember: true }} onFinish={onFinish}>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[{ required: true, message: \"이메일 주소를 입력하세요.\" }]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"이메일 주소\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"비밀번호를 입력하세요.\" }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"비밀번호\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n\r\n          {/* <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a> */}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"submit-btn\">\r\n            로그인\r\n          </Button>\r\n          혹은 <a href=\"/register\">회원가입!</a>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Canvas = (props) => {\r\n  const [resize, setResize] = useState(\"none\");\r\n  const [quoteTop, setQuoteTop] = useState(200);\r\n  const [quoteLeft, setQuoteLeft] = useState(200);\r\n  const [quoteCursor, setQuoteCursor] = useState(\"grab\");\r\n  const [imgTop, setImgTop] = useState(0);\r\n  const [imgLeft, setImgLeft] = useState(0);\r\n  const [imgCursor, setImgCursor] = useState(\"move\");\r\n\r\n  const [curX, setCurX] = useState();\r\n  const [curY, setCurY] = useState();\r\n\r\n  // const [overflow, setOverflow] = useState();\r\n\r\n  const {\r\n    url,\r\n    color,\r\n    opt,\r\n    quote,\r\n    fontcolor,\r\n    fontsize,\r\n    setQuote,\r\n    canvasRef,\r\n  } = props;\r\n\r\n  const bgrStyleObj = {\r\n    backgroundColor: color,\r\n    cursor: imgCursor,\r\n  };\r\n\r\n  const textStyleObj = {\r\n    color: fontcolor,\r\n    fontSize: `${fontsize}px`,\r\n    resize,\r\n    top: quoteTop,\r\n    left: quoteLeft,\r\n    cursor: quoteCursor,\r\n  };\r\n\r\n  const imgPos = {\r\n    objectPosition: `${imgLeft}px ${imgTop}px`,\r\n  };\r\n\r\n  const handleDragStartQuote = () => {\r\n    setQuoteCursor(\"grabbing\");\r\n  };\r\n\r\n  const handleDragEndQuote = (e, cbtop, cbleft) => {\r\n    setQuoteCursor(\"grab\");\r\n    let parent = e.target.parentElement.getBoundingClientRect();\r\n\r\n    const relativeX = e.clientX - parent.x;\r\n    const relativeY = e.clientY - parent.y;\r\n\r\n    cbtop(relativeY);\r\n    cbleft(relativeX);\r\n  };\r\n\r\n  const handleDragStartImg = (e, cbtop, cbleft) => {\r\n    setImgCursor(\"grabbing\");\r\n    const x = e.clientX;\r\n    const y = e.clientY;\r\n\r\n    cbtop(y);\r\n    cbleft(x);\r\n  };\r\n\r\n  const handleDragEndImg = (e, cbtop, cbleft) => {\r\n    setImgCursor(\"move\");\r\n    const x = e.clientX - curX;\r\n    const y = e.clientY - curY;\r\n\r\n    cbtop(imgTop + y);\r\n    cbleft(imgLeft + x);\r\n    console.log(imgTop + y, imgLeft + x);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setImgLeft(0);\r\n    setImgTop(0);\r\n  }, [url]);\r\n\r\n  return (\r\n    <section className=\"canvas-wrapper\">\r\n      <div id=\"canvas\" className=\"canvas\" ref={canvasRef}>\r\n        {opt ? (\r\n          <div className=\"canvas-bgr\" style={bgrStyleObj}>\r\n            <img\r\n              src={url}\r\n              alt=\"background for quote lines\"\r\n              draggable=\"true\"\r\n              onDragStart={(e) => {\r\n                handleDragStartImg(e, setCurY, setCurX);\r\n              }}\r\n              onDragEnd={(e) => {\r\n                handleDragEndImg(e, setImgTop, setImgLeft);\r\n              }}\r\n              style={imgPos}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"canvas-bgr\" style={bgrStyleObj} />\r\n        )}\r\n\r\n        <textarea\r\n          className=\"quote-textarea\"\r\n          value={quote}\r\n          onChange={(e) => setQuote(e.target.value)}\r\n          defaultValue={`마음에 드는 구절을 입력하세요`}\r\n          style={textStyleObj}\r\n          draggable=\"true\"\r\n          onFocus={() => setResize(\"both\")}\r\n          onBlur={() => setResize(\"none\")}\r\n          onDragStart={() => {\r\n            handleDragStartQuote();\r\n          }}\r\n          onDragEnd={(e) => {\r\n            handleDragEndQuote(e, setQuoteTop, setQuoteLeft);\r\n          }}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React, { useState } from \"react\";\r\nimport { Upload, message } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst getBase64 = (img, cb) => {\r\n  const reader = new FileReader();\r\n  reader.onloadend = () => {\r\n    cb(reader.result);\r\n  };\r\n  reader.readAsDataURL(img);\r\n};\r\n\r\nconst beforeUpload = (file) => {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"JPG/PNG 파일만 업로드 하세요.\");\r\n  }\r\n  // const isLt2M = file.size / 1024 / 1024 < 2;\r\n  // if(!isLt2M){\r\n  //     message.error('이미지 용량은 2MB 이하만 가능합니다. ')\r\n  // }\r\n  return isJpgOrPng;\r\n};\r\n\r\nexport const Preview = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { url, setUrl, setOpt } = props;\r\n\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess(\"ok\");\r\n    }, 0);\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      getBase64(info.file.originFileObj, (imgUrl) => {\r\n        setUrl(imgUrl); // prop: setImgurl\r\n\r\n        setOpt(true);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  };\r\n  const uploadBtn = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8, fontSize: \"0.75em\" }}>배경 이미지</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Upload\r\n      name=\"background-img\"\r\n      listType=\"picture-card\"\r\n      showUploadList={false}\r\n      beforeUpload={beforeUpload}\r\n      onChange={handleChange}\r\n      customRequest={dummyRequest}\r\n      className=\"preview-image\"\r\n    >\r\n      {url ? (\r\n        <img\r\n          src={url}\r\n          alt=\"preview\"\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n        />\r\n      ) : (\r\n        uploadBtn\r\n      )}\r\n    </Upload>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SliderPicker } from \"react-color\";\r\n\r\nexport const BgrColorPicker = (props) => {\r\n  const { setColor, color } = props;\r\n\r\n  const handleColor = (color) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  return (\r\n    <SliderPicker\r\n      color={color}\r\n      onChange={handleColor}\r\n      className=\"bgr-colorpicker\"\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { TwitterPicker } from \"react-color\";\r\nimport { FontColorsOutlined } from \"@ant-design/icons\";\r\n\r\nexport const FontColorPicker = (props) => {\r\n  const [display, setDisplay] = useState(false);\r\n  const { setColor, color } = props;\r\n\r\n  const handleColor = (color) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  const style = {\r\n    fontSize: 36,\r\n    color: color,\r\n    width: \"10%\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FontColorsOutlined onClick={() => setDisplay(!display)} style={style} />\r\n      {display && (\r\n        <div className=\"twitter-picker\">\r\n          <TwitterPicker color={color} onChange={handleColor} triangle=\"hide\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Canvas from \"./canvas\";\r\nimport { Slider } from \"antd\";\r\nimport { Preview } from \"./preview\";\r\nimport { BgrColorPicker } from \"./bgrColorpicker\";\r\nimport { FontColorPicker } from \"./fontColorpicker\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { contentPost, imgPost } from \"../../../_actions/post_action\";\r\n\r\nconst Posting = () => {\r\n  const dispatch = useDispatch();\r\n  const [url, setUrl] = useState(); // preview\r\n  const [color, setColor] = useState(\"#f1f2f6\");\r\n  const [fontsize, setFontsize] = useState(14);\r\n  const [fontcolor, setFontcolor] = useState(\"black\");\r\n  const [opt, setOpt] = useState(false);\r\n  const [quote, setQuote] = useState();\r\n  const [content, setContent] = useState();\r\n\r\n  const canvasRef = useRef();\r\n\r\n  const postContent = (url) => {\r\n    let data = {\r\n      content,\r\n      url,\r\n    };\r\n\r\n    dispatch(contentPost(data))\r\n      .then((res) => console.log(\"content\", res))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const postImage = (blob) => {\r\n    const img = blob;\r\n    const formData = new FormData();\r\n    formData.append(\"img\", img, \"combined.png\");\r\n\r\n    dispatch(imgPost(formData))\r\n      .then((res) => postContent(res.payload.url))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const domToImage = () => {\r\n    const canvasDiv = canvasRef.current;\r\n    domtoimage.toBlob(canvasDiv).then((blob) => {\r\n      postImage(blob);\r\n    });\r\n  };\r\n\r\n  const labelStyle = {\r\n    display: \"none\",\r\n  };\r\n\r\n  useEffect(() => setOpt(true), [url]);\r\n  useEffect(() => setOpt(false), [color]);\r\n\r\n  return (\r\n    <div className=\"posting\">\r\n      <h1 className=\"page-title\">갈피 남기기</h1>\r\n\r\n      <div className=\"canvas-background\">\r\n        <div className=\"bgr-image\">\r\n          <label htmlFor=\"canvas-image\" style={labelStyle}>\r\n            배경 이미지\r\n          </label>\r\n          <Preview\r\n            url={url}\r\n            setUrl={setUrl}\r\n            setOpt={setOpt}\r\n            id=\"canvas-image\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"bgr-color\">\r\n          <label htmlFor=\"canvas-color\">배경색</label>\r\n          <BgrColorPicker setColor={setColor} color={color} id=\"canvas-color\" />\r\n        </div>\r\n\r\n        <div className=\"canvas-font\">\r\n          <label htmlFor=\"font-size\" style={labelStyle}>\r\n            글씨 크기\r\n          </label>\r\n          <Slider\r\n            id=\"font-size\"\r\n            min={5}\r\n            max={50}\r\n            step={1}\r\n            defaultValue={16}\r\n            onChange={(val) => setFontsize(val)}\r\n            className=\"font-slider\"\r\n          />\r\n          <label htmlFor=\"font-color\" style={labelStyle}>\r\n            글씨 색상\r\n          </label>\r\n          <FontColorPicker setColor={setFontcolor} color={fontcolor} />\r\n        </div>\r\n      </div>\r\n\r\n      <Canvas\r\n        url={url}\r\n        color={color}\r\n        opt={opt}\r\n        fontcolor={fontcolor}\r\n        fontsize={fontsize}\r\n        quote={quote}\r\n        setQuote={setQuote}\r\n        content={content}\r\n        setContent={setContent}\r\n        canvasRef={canvasRef}\r\n      />\r\n\r\n      <div className=\"content\">\r\n        <label htmlFor=\"content\" style={labelStyle}>\r\n          코멘트\r\n        </label>\r\n        <textarea\r\n          className=\"content-textarea\"\r\n          name=\"content\"\r\n          value={content}\r\n          rows=\"5\"\r\n          // maxLength=\r\n          onChange={(e) => setContent(e.target.value)}\r\n          placeholder=\"작가, 책 제목, 간단한 소감 등을 남겨주세요\"\r\n        />\r\n      </div>\r\n      <div className=\"upload-btn\">\r\n        <button onClick={domToImage}>업로드</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posting;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst PostThumbnail = ({ index, posts }) => {\r\n  const { uuid, url, user } = posts;\r\n  const { username } = user;\r\n  const postHandler = (e) => {\r\n    e.preventDefault();\r\n    return <Redirect push to={`/p/${uuid}`} />;\r\n  };\r\n\r\n  return (\r\n    <li\r\n      key={`postthumbnail-${index}-by${username}`}\r\n      className=\"post-thumbnail\"\r\n      onClick={postHandler}\r\n    >\r\n      <div className=\"post\">\r\n        <img alt=\"example\" src={url} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostThumbnail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PostInfiniteScroll from \"../../containers/infinite-scroll\";\r\nimport PostThumbnail from \"../../containers/post-thumbnail\";\r\nimport { getUser } from \"../../../_actions/user_action\";\r\n\r\nconst Profile = () => {\r\n  const { username } = useParams();\r\n  const [user, setUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let { user } = await dispatch(getUser(username)).then(\r\n          (res) => res.payload\r\n        );\r\n        console.log(\"in profile\", user);\r\n\r\n        setUser(user);\r\n        setLoading(false);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [dispatch, username]);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      {user ? (\r\n        <>\r\n          <Card\r\n            title={`${user.username}`}\r\n            loading={loading}\r\n            style={{ width: \"100%\" }}\r\n            bordered=\"true\"\r\n          >\r\n            <p>이름: {user.name}</p>\r\n            <p>이메일: {user.email}</p>\r\n          </Card>\r\n          <PostInfiniteScroll\r\n            render={(posts, index) => (\r\n              <PostThumbnail\r\n                key={`postthumbnail-${index}`}\r\n                posts={posts}\r\n                index={index}\r\n              />\r\n            )}\r\n            username={user.username}\r\n          />\r\n        </>\r\n      ) : (\r\n        <p> 해당하는 유저가 없습니다. </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/user_action\";\r\nimport { AUTH_KEY, setExp, TTL } from \"../../../util/auth\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 4,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 20,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n      offset: 10,\r\n    },\r\n  },\r\n};\r\n\r\nconst RegistrationForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n    const { email, name, password, username, confirm } = values;\r\n\r\n    const userinfo = {\r\n      email,\r\n      username,\r\n      name,\r\n      password,\r\n      passwordConfirmation: confirm,\r\n    };\r\n\r\n    dispatch(registerUser(userinfo)).then(\r\n      (res) => setExp(AUTH_KEY, res.payload, TTL) // TODO: DELETE\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"form register\">\r\n      <h1 className=\"page-title\">회원가입</h1>\r\n\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"이메일\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              message: \"올바르지 않은 이메일 형식입니다.\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"이메일을 입력하세요.\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"username\"\r\n          label=\"아이디\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"아이디를 입력하세요!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"비밀번호\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"비밀번호를 입력하세요.\",\r\n            },\r\n            {\r\n              min: 8,\r\n              message: \"비밀번호는 8글자 이상이여야 합니다.\",\r\n            },\r\n            {\r\n              pattern: /^(?=.*?[\\p{Lu}])(?=.*?[\\p{Ll}])(?=.*?\\d).*$/u,\r\n              message:\r\n                \"적어도 하나 이상의 영어 대문자, 소문자, 숫자가 포함되어야 합니다.\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"비밀번호 확인\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your password!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  \"입력하신 비밀번호가 서로 일치하지 않습니다.\"\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"이름\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: \"이름을 입력하세요\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"submit-btn\">\r\n            가입하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getAPost } from \"../../../_actions/post_action\";\r\nimport Likes from \"../../containers/likes\";\r\nimport CommentForm from \"../../containers/comment-form\";\r\nimport FetchComments from \"../../containers/comments\";\r\n\r\nconst Post = () => {\r\n  const dispatch = useDispatch();\r\n  const { uuid } = useParams();\r\n  const [post, setPost] = useState();\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        await dispatch(getAPost(uuid)).then((res) => setPost(res.payload.post));\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [uuid, dispatch]);\r\n\r\n  return (\r\n    <div className=\"body-wrapper\">\r\n      {post && (\r\n        <section className=\"a-post\">\r\n          <div className=\"user\">\r\n            <Link to={`/username/${post.user.username}`}>\r\n              {post.user.username}\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"image\">\r\n            <img src={post.url} alt={`${post.user.username}의 포스팅`} />\r\n          </div>\r\n\r\n          <div className=\"content\">\r\n            <p>{post.content}</p>\r\n          </div>\r\n\r\n          <Likes likes={post.likes} uuid={post.uuid} />\r\n\r\n          {comments && (\r\n            <FetchComments\r\n              uuid={uuid}\r\n              comments={comments}\r\n              setComments={setComments}\r\n            />\r\n          )}\r\n          <CommentForm\r\n            uuid={uuid}\r\n            comments={comments}\r\n            setComments={setComments}\r\n          />\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logOutUser } from \"../../../_actions/user_action\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { delExp, AUTH_KEY } from \"../../../util/auth\";\r\n\r\nconst NavBar = (props) => {\r\n  const { loggedIn, username } = useSelector((state) => ({\r\n    loggedIn: state.auth.loggedIn,\r\n    username: state.auth.username,\r\n  }));\r\n  const [menuToggle, setMenuToggle] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const logout = async () => {\r\n    await dispatch(logOutUser())\r\n      .then((res) => {\r\n        console.log(\"after logout\", res);\r\n      })\r\n      .catch((e) => console.error(e));\r\n    delExp(AUTH_KEY); // TODO: DELETE\r\n  };\r\n\r\n  const toggleMenu = (e) => {\r\n    e.preventDefault();\r\n    setMenuToggle(!menuToggle);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Link to=\"/\">\r\n          <h1 className=\"logo\">galpi</h1>\r\n          {/* <img className=\"logo\" src=\"/galpi_logo.png\" alt=\"logo galpi\" /> */}\r\n        </Link>\r\n\r\n        <svg\r\n          height=\"40px\"\r\n          id=\"menu-btn\"\r\n          className=\"open\"\r\n          viewBox=\"0 0 32 32\"\r\n          onClick={toggleMenu}\r\n        >\r\n          <path\r\n            fill=\"#db2b39\"\r\n            d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\"\r\n          />\r\n        </svg>\r\n\r\n        <nav id=\"nav\" className={menuToggle ? `open-nav` : undefined}>\r\n          <svg\r\n            viewBox=\"0 0 24 24\"\r\n            id=\"exit-btn\"\r\n            className=\"exit\"\r\n            onClick={toggleMenu}\r\n          >\r\n            <path\r\n              id=\"exit\"\r\n              fill=\"#db2b39\"\r\n              d=\"M14.8,12l3.6-3.6c0.8-0.8,0.8-2,0-2.8c-0.8-0.8-2-0.8-2.8,0L12,9.2L8.4,5.6c-0.8-0.8-2-0.8-2.8,0   c-0.8,0.8-0.8,2,0,2.8L9.2,12l-3.6,3.6c-0.8,0.8-0.8,2,0,2.8C6,18.8,6.5,19,7,19s1-0.2,1.4-0.6l3.6-3.6l3.6,3.6   C16,18.8,16.5,19,17,19s1-0.2,1.4-0.6c0.8-0.8,0.8-2,0-2.8L14.8,12z\"\r\n            />\r\n          </svg>\r\n          {!loggedIn ? (\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to=\"/\">\r\n                  메인\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/login\">로그인</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/register\">회원가입</NavLink>\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to=\"/\">\r\n                  메인\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/post\">갈피 남기기</NavLink>\r\n              </li>\r\n              <li className=\"sub\">\r\n                <NavLink to={`/user/${username}`} className=\"nav-username\">\r\n                  {username}\r\n                </NavLink>\r\n                <div className=\"submenu\">\r\n                  <ul>\r\n                    <li>\r\n                      <NavLink to=\"/dashboard\">대시보드</NavLink>\r\n                    </li>\r\n                    <li onClick={logout}>\r\n                      <span>로그아웃</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </nav>\r\n      </header>\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const AuthRoute = ({ component: Component, ...rest }) => {\r\n  const { loggedIn } = useSelector((state) => ({\r\n    loggedIn: state.auth.loggedIn,\r\n  }));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const GuestRoute = ({ component: Component, ...rest }) => {\r\n  const { loggedIn } = useSelector((state) => ({\r\n    loggedIn: state.auth.loggedIn,\r\n  }));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/home\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport {\r\n  Register,\r\n  Login,\r\n  Dashboard,\r\n  Home,\r\n  Post,\r\n  Posting,\r\n  Profile,\r\n  LandingPage,\r\n} from \"./components/views/index\";\r\n// import NotFound from './components/views/NotFound/notFound'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport NavBar from \"./components/views/NavBar/navbar\";\r\nimport { GuestRoute, AuthRoute } from \"./route/index\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <NavBar>\r\n          <GuestRoute path=\"/login\" component={Login} />\r\n          <GuestRoute path=\"/register\" component={Register} />\r\n\r\n          <AuthRoute path=\"/dashboard\" component={Dashboard} />\r\n          <AuthRoute path=\"/home\" component={Home} />\r\n          <AuthRoute path=\"/post\" component={Posting} />\r\n\r\n          <Route path=\"/user/:username\" children={<Profile />} />\r\n          <Route path=\"/p/:uuid\" children={<Post />} />\r\n          <GuestRoute exact path=\"/\" component={LandingPage} />\r\n\r\n          {/* <Route component={NotFound} />      */}\r\n        </NavBar>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\nimport post from \"./post_reducer\";\r\nimport comment from \"./comment_reducer\";\r\nimport like from \"./like_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: user,\r\n  post,\r\n  comment,\r\n  like,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH_USER,\r\n  LOGOUT_USER,\r\n  GET_USER,\r\n  GET_DASHBOARD,\r\n} from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        userId: action.payload.userId,\r\n        username: action.payload.username,\r\n        register: action.payload.message,\r\n      };\r\n\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        userId: action.payload.userId,\r\n        username: action.payload.username,\r\n        login: action.payload.message,\r\n      };\r\n\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        userId: {},\r\n        username: {},\r\n        logout: action.payload.message,\r\n      };\r\n\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        getUserSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_DASHBOARD:\r\n      return {\r\n        ...state,\r\n        getDashboardSuccess: action.payload.message,\r\n      };\r\n    case AUTH_USER:\r\n      return {\r\n        ...state,\r\n        loggedIn: action.payload.isAuth,\r\n        userId: action.payload.user._id,\r\n        username: action.payload.user.username,\r\n        email: action.payload.user.email,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CONTENT_POST,\r\n  GET_A_POST,\r\n  IMG_POST,\r\n  GET_POSTS,\r\n} from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case IMG_POST:\r\n      return {\r\n        ...state,\r\n        imgurl: action.payload.url,\r\n      };\r\n\r\n    case CONTENT_POST:\r\n      return {\r\n        ...state,\r\n        postUploadSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_A_POST:\r\n      return {\r\n        ...state,\r\n        postGetSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        postsGetSuccess: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_COMMENT, POST_COMMENT, DELETE_COMMENT } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case GET_COMMENT:\r\n      return {\r\n        ...state,\r\n        getCommentSuccess: action.payload.message,\r\n      };\r\n\r\n    case POST_COMMENT:\r\n      return {\r\n        ...state,\r\n        postCommentSuccess: action.payload.message,\r\n      };\r\n\r\n    case DELETE_COMMENT:\r\n      return {\r\n        ...state,\r\n        deleteComomentSuccess: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { POST_LIKE, POST_UNLIKE } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case POST_LIKE:\r\n      return {\r\n        ...state,\r\n        getLikeSuccess: action.payload.message,\r\n      };\r\n\r\n    case POST_UNLIKE:\r\n      return {\r\n        ...state,\r\n        postUnlikeSuccess: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { AUTH_KEY, getExp } from \"../util/auth\";\r\nimport Reducers from \"../_reducers\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nconst loginStatus = () => {\r\n  console.log(\"initial authentication confirm\");\r\n  if (getExp(AUTH_KEY)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst loginDetail = () => {\r\n  return getExp(AUTH_KEY) ? getExp(AUTH_KEY) : { userId: null, username: null };\r\n};\r\n\r\nconst initialStates = {\r\n  auth: {\r\n    loggedIn: loginStatus(),\r\n    userId: loginDetail().userId,\r\n    username: loginDetail().username,\r\n  },\r\n};\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  promiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\n\r\nconst store = createStoreWithMiddleware(\r\n  Reducers,\r\n  initialStates,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./_store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}