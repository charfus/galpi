{"version":3,"sources":["_actions/error_actions.js","_actions/types.js","_actions/user_action.js","components/containers/papercard.js","components/views/Dashboard/dashboard.js","_actions/post_action.js","components/containers/infinite-scroll.js","_actions/comment_action.js","components/containers/comment-form.js","components/containers/comments.js","_actions/like_action.js","components/containers/likes.js","components/containers/post-delete.js","components/containers/post-card.js","components/views/Home/home.js","components/views/LandingPage/landing.js","components/views/LoginPage/login.js","components/views/PostingPage/canvas.js","components/views/PostingPage/preview.js","components/views/PostingPage/bgr-colorpicker.js","components/views/PostingPage/font/font-align.js","components/views/PostingPage/font/font-colorpicker.js","components/views/PostingPage/font/font-lineheight.js","components/views/PostingPage/font/font-slider.js","components/views/PostingPage/font/font-type.js","components/views/PostingPage/posting.js","components/containers/post-thumbnail.js","components/views/ProfilePage/profile.js","components/views/RegisterPage/register.js","components/views/PostPage/post.js","components/views/Footer/footer.js","components/views/NotFound/notFound.js","components/views/NavBar/navbar.js","route/authRoute.js","route/guestRoute.js","components/views/Modal/modal.js","components/views/Modal/modal-content.js","App.js","_reducers/error_reducer.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/post_reducer.js","_reducers/comment_reducer.js","_reducers/like_reducer.js","_store/index.js","index.js"],"names":["errorHandle","err","type","error","registerUser","body","a","axios","post","response","payload","data","loginUser","dataToSubmit","logOutUser","getUser","username","get","deleteUser","pwd","delete","getDashboard","auth","PaperCard","props","id","className","title","children","Dashboard","dispatch","useDispatch","useState","user","setUser","posts","setPosts","password","setPassword","deleteUserHandler","e","window","confirm","preventDefault","alert","to","useEffect","fetchData","name","email","createdAt","slice","onSubmit","onChange","target","value","placeholder","imgPost","formData","config","header","contentPost","getPosts","page","getAPost","uuid","deletePost","PostInfiniteScroll","loading","setLoading","element","setElement","useRef","prevY","observer","IntersectionObserver","entries","y","boundingClientRect","current","handleInitial","root","rootMargin","threshold","useCallback","message","items","currentElement","currentObserver","observe","unobserve","map","index","render","LoadingOutlined","ref","getComment","postComment","deleteComment","CommentForm","setComments","comments","comment","setComment","handleCommentSubmit","newComment","onClick","FetchComments","userId","useSelector","state","deleteAComment","li","parentElement","key","_id","postLike","postUnlike","Likes","likes","loggedInUser","likesArray","setLikesArray","showLikes","setShowLikes","handleLike","handleUnlike","filteredLikes","filter","includes","PushpinFilled","PushpinOutlined","length","DeleteAPost","history","deletePostHandle","replace","DeleteOutlined","PostCard","content","url","showComment","setShowComment","CommentToggle","params","TagsFilled","TagsOutlined","alt","src","ZoomInOutlined","Home","Landing","LoginForm","location","setEmail","valid","ok","emailValid","setEmailValid","passwordValid","setPasswordValid","onFinish","userinfo","from","htmlFor","min","max","val","trim","EmailValidator","CheckCircleOutlined","WarningOutlined","Canvas","color","opt","quote","fontcolor","fontsize","fonttype","fontlineheight","setQuote","canvasRef","fontalign","x","quoteClickStart","setQuoteClickStart","quoteXY","setQuoteXY","imgClickStart","setImgClickStart","imgXY","setImgXY","resize","setResize","quoteCursor","setQuoteCursor","imgCursor","setImgCursor","bgrStyleObj","backgroundColor","cursor","textStyleObj","fontSize","fontFamily","lineHeight","top","left","textAlign","imgPos","handleDragStart","cb","clientX","clientY","style","draggable","onDoubleClick","onDragStart","onDragEnd","distanceX","distanceY","handleDragEndImg","defaultValue","onFocus","onBlur","handleDragEndQuote","beforeUpload","file","isJpgOrPng","Preview","setUrl","setOpt","uploadBtn","PlusOutlined","marginTop","display","listType","showUploadList","info","status","img","reader","FileReader","onloadend","result","readAsDataURL","getBase64","originFileObj","imgUrl","customRequest","onSuccess","setTimeout","width","height","BgrColorPicker","setColor","hex","FontAlign","setFontalign","setDisplay","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","ColumnWidthOutlined","iconHandler","FontColorPicker","FontColorsOutlined","triangle","FontLineHeight","setFontlineheight","LineHeightOutlined","step","FontSlider","setFontsize","FontSizeOutlined","FontType","setFonttype","counter","setCounter","fonts","QuestionOutlined","Posting","setFontcolor","setContent","postContent","postImage","blob","FormData","append","rows","canvasDiv","domtoimage","toBlob","then","PostThumbnail","push","Profile","useParams","RegistrationForm","setUsername","usernameValid","setUsernameValid","setName","nameValid","setNameValid","setConfirm","confirmValid","setConfirmValid","passwordConfirmation","res","catch","maxLength","test","Post","setPost","Footer","NotFound","NavBar","loggedIn","menuToggle","setMenuToggle","logout","console","log","toggleMenu","viewBox","fill","d","undefined","exact","AuthRoute","Component","component","rest","pathname","GuestRoute","modalRoot","document","getElementById","Modal","el","createElement","appendChild","this","removeChild","ReactDOM","createPortal","ErrorModal","isOpen","App","fetchAuth","path","LandingPage","Login","Register","initState","rootReducer","combineReducers","action","getRegisterSuccess","getUserSuccess","deleteUserSuccess","getDashboardSuccess","isAuth","imgurl","postUploadSuccess","postGetSuccess","postsGetSuccess","postDelSuccess","getCommentSuccess","postCommentSuccess","deleteComomentSuccess","like","getLikeSuccess","postUnlikeSuccess","statusText","store","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","createStoreWithMiddleware","Reducers","__REDUX_DEVTOOLS_EXTENSION__","StrictMode"],"mappings":"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","file":"static/js/main.acf86c82.chunk.js","sourcesContent":["import { ERROR_HANDLE, ERROR_HIDE } from \"./types\";\r\n\r\nexport const errorHandle = (err) => {\r\n  return {\r\n    type: ERROR_HANDLE,\r\n    error: err,\r\n  };\r\n};\r\n\r\nexport const errorHide = () => {\r\n  return {\r\n    type: ERROR_HIDE,\r\n  };\r\n};\r\n","export const LOGIN_USER = \"login_user\";\r\nexport const REGISTER_USER = \"register_user\";\r\nexport const AUTH = \"auth\";\r\nexport const LOGOUT_USER = \"logout_user\";\r\nexport const GET_USER = \"get_user\";\r\nexport const GET_DASHBOARD = \"get_dashboard\";\r\nexport const DELETE_USER = \"delete_user\";\r\n\r\nexport const IMG_POST = \"img_post\";\r\nexport const CONTENT_POST = \"content_post\";\r\nexport const GET_A_POST = \"get_a_post\";\r\nexport const GET_POSTS = \"get_posts\";\r\nexport const DELETE_POST = \"delete_post\";\r\n\r\nexport const POST_COMMENT = \"post_comment\";\r\nexport const GET_COMMENT = \"get_comment\";\r\nexport const DELETE_COMMENT = \"delete_comment\";\r\n\r\nexport const POST_LIKE = \"post_like\";\r\nexport const POST_UNLIKE = \"post_unlike\";\r\n\r\nexport const ERROR_HANDLE = \"error_handle\";\r\nexport const ERROR_HIDE = \"error_hide\";\r\n","import axios from \"axios\";\r\nimport {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH,\r\n  LOGOUT_USER,\r\n  GET_USER,\r\n  GET_DASHBOARD,\r\n  DELETE_USER,\r\n} from \"./types\";\r\n\r\nexport async function registerUser(body) {\r\n  let response = await axios.post(`/api/user`, body);\r\n\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function loginUser(dataToSubmit) {\r\n  let response = await axios.post(`/api/login`, dataToSubmit);\r\n\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function logOutUser() {\r\n  let response = await axios.post(`/api/logout`);\r\n\r\n  return {\r\n    type: LOGOUT_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getUser(username) {\r\n  let response = await axios.get(`/api/user/${username}`);\r\n\r\n  return {\r\n    type: GET_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function deleteUser(pwd) {\r\n  let response = await axios.delete(`api/user`, { data: pwd });\r\n\r\n  return {\r\n    type: DELETE_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getDashboard() {\r\n  let response = await axios.get(`/api/dashboard`);\r\n\r\n  return {\r\n    type: GET_DASHBOARD,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function auth() {\r\n  let response = await axios.get(`/api/auth`);\r\n\r\n  return {\r\n    type: AUTH,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./papercard.css\";\r\n\r\nconst PaperCard = (props) => {\r\n  return (\r\n    <div id=\"paper\">\r\n      <div className=\"card-content\">\r\n        <div id=\"pattern\">\r\n          <h1 className=\"card-title\">{props.title}</h1>\r\n          <div id=\"content\">{props.children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaperCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { deleteUser, getDashboard } from \"../../../_actions/user_action\";\r\nimport PaperCard from \"../../containers/papercard\";\r\n\r\nconst Dashboard = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [user, setUser] = useState();\r\n  const [posts, setPosts] = useState();\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const deleteUserHandler = async (e) => {\r\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\r\n      e.preventDefault();\r\n      let data = {\r\n        password,\r\n      };\r\n      try {\r\n        await dispatch(deleteUser(data));\r\n        alert(\"삭제 되었습니다\");\r\n        return <Redirect to=\"/\" />;\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n    e.preventDefault();\r\n    return;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let response = await dispatch(getDashboard());\r\n        let { user, posts } = response.payload;\r\n\r\n        setUser(user);\r\n        setPosts(posts);\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          <PaperCard title={`${user.username}님, 안녕하세요 !`}>\r\n            <br />\r\n            <p>이름: {user.name}</p>\r\n            <p>이메일: {user.email}</p>\r\n            <p>갈피: {posts} 개</p>\r\n            <p>계정 생성일: {user.createdAt.slice(0, 10)}</p>\r\n            <br />\r\n            <h2 className=\"account-delete\">계정 삭제</h2>\r\n            <form onSubmit={deleteUserHandler} className=\"account-delete\">\r\n              <input\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"비밀번호 확인\"\r\n              />\r\n              <input type=\"submit\" value=\"🗑\" />\r\n            </form>\r\n          </PaperCard>\r\n        </>\r\n      ) : (\r\n        <p> 유저 정보를 불러오고 있습니다. </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  CONTENT_POST,\r\n  IMG_POST,\r\n  GET_A_POST,\r\n  GET_POSTS,\r\n  DELETE_POST,\r\n} from \"./types\";\r\n\r\nexport async function imgPost(formData) {\r\n  const config = {\r\n    header: {\r\n      \"Content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n\r\n  const response = await axios.post(`/api/post/img`, formData, config);\r\n\r\n  return {\r\n    type: IMG_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function contentPost(data) {\r\n  const response = await axios.post(`/api/post`, data);\r\n\r\n  return {\r\n    type: CONTENT_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getPosts(page, username) {\r\n  if (username) {\r\n    const response = await axios.get(\r\n      `/api/post?username=${username}&page=${page}&limit=10`\r\n    );\r\n\r\n    return {\r\n      type: GET_POSTS,\r\n      payload: response.data,\r\n    };\r\n  }\r\n  const response = await axios.get(`/api/post?page=${page}&limit=10`);\r\n\r\n  return {\r\n    type: GET_POSTS,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getAPost(uuid) {\r\n  const response = await axios.get(`/api/post/${uuid}`);\r\n\r\n  return {\r\n    type: GET_A_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function deletePost(uuid) {\r\n  const response = await axios.delete(`/api/post/${uuid}`);\r\n\r\n  return {\r\n    type: DELETE_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\nimport { getPosts } from \"../../_actions/post_action\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\n// GET posts\r\nconst PostInfiniteScroll = (props) => {\r\n  const { username = null } = props;\r\n  const dispatch = useDispatch();\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [element, setElement] = useState(null);\r\n\r\n  const page = useRef(1);\r\n  const prevY = useRef(0);\r\n\r\n  const loadMore = () => {\r\n    page.current++;\r\n    handleInitial(page.current);\r\n  };\r\n\r\n  // intersectionObserver setting\r\n  const observerCallback = (entries) => {\r\n    const firstEntry = entries[0];\r\n    const y = firstEntry.boundingClientRect.y;\r\n\r\n    if (prevY.current > y) {\r\n      loadMore();\r\n    }\r\n    prevY.current = y;\r\n  };\r\n\r\n  let options = {\r\n    root: null,\r\n    rootMargin: \"0px\",\r\n    threshold: 1.0,\r\n  };\r\n\r\n  const observer = useRef(new IntersectionObserver(observerCallback, options));\r\n\r\n  const handleInitial = useCallback(\r\n    async (page) => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await dispatch(getPosts(page, username));\r\n        const { posts, message } = response.payload;\r\n        if (message === \"ok\") {\r\n          setPosts((items) => [...items, ...posts]);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [dispatch, username]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleInitial(page.current);\r\n  }, [handleInitial]);\r\n\r\n  useEffect(() => {\r\n    const currentElement = element;\r\n    const currentObserver = observer.current;\r\n\r\n    if (currentElement) {\r\n      currentObserver.observe(currentElement);\r\n    }\r\n\r\n    return () => {\r\n      if (currentElement) {\r\n        currentObserver.unobserve(currentElement);\r\n      }\r\n    };\r\n  }, [element]);\r\n\r\n  return (\r\n    <div className=\"infinite-scroll-wrapper\">\r\n      {posts ? (\r\n        <>\r\n          <ul className=\"posts-list\">\r\n            {posts.map((posts, index) => props.render(posts, index))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <p> 마지막 포스트 입니다 ! </p>\r\n      )}\r\n      {loading && <LoadingOutlined />}\r\n      <div ref={(ref) => setElement(ref)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostInfiniteScroll;\r\n","import axios from \"axios\";\r\n\r\nimport { GET_COMMENT, POST_COMMENT, DELETE_COMMENT } from \"./types\";\r\n\r\nexport async function getComment(uuid) {\r\n  let response = await axios.get(`/api/comment/${uuid}`);\r\n  return {\r\n    type: GET_COMMENT,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function postComment(uuid, body) {\r\n  let response = await axios.post(`/api/comment/${uuid}`, body);\r\n\r\n  return {\r\n    type: POST_COMMENT,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function deleteComment(id) {\r\n  let response = await axios.delete(`/api/comment/${id}`);\r\n\r\n  return {\r\n    type: DELETE_COMMENT,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postComment } from \"../../_actions/comment_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst CommentForm = ({ uuid, setComments, comments }) => {\r\n  const dispatch = useDispatch();\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await dispatch(postComment(uuid, { comment }));\r\n      const { newComment, message } = response.payload;\r\n\r\n      if (message === \"ok\") {\r\n        setComments([...comments, newComment]);\r\n      }\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const handleComment = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className=\"comment-form\">\r\n      <input placeholder=\"댓글 달기\" value={comment} onChange={handleComment} />\r\n      <button onClick={handleCommentSubmit}>↑</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { getComment, deleteComment } from \"../../_actions/comment_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst FetchComments = (props) => {\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector((state) => state.user.userId);\r\n  const { uuid, comments, setComments } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const deleteAComment = async (e) => {\r\n    e.preventDefault();\r\n    const li = e.target.parentElement;\r\n\r\n    try {\r\n      await dispatch(deleteComment(li.id));\r\n      alert(\"댓글이 삭제되었습니다\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await dispatch(getComment(uuid));\r\n        const { comments, message } = response.payload;\r\n        if (message === \"ok\") {\r\n          setComments(comments);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setComments, dispatch, uuid]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <LoadingOutlined />}\r\n      {comments ? (\r\n        <ul className=\"comments-list\">\r\n          {comments.map((comment, index) => (\r\n            <li key={index} id={comment._id}>\r\n              <strong>{comment.user.username}</strong>\r\n              {` ${comment.comment}`}\r\n              {userId === comment.user._id && (\r\n                <button onClick={deleteAComment}>⨉</button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <span>첫 댓글을 달아보세요</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FetchComments;\r\n","import axios from \"axios\";\r\n\r\nimport { POST_LIKE, POST_UNLIKE } from \"./types\";\r\n\r\nexport async function postLike(uuid) {\r\n  let response = await axios.post(`/api/like/${uuid}/like`);\r\n  return {\r\n    type: POST_LIKE,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function postUnlike(uuid) {\r\n  let response = await axios.post(`/api/like/${uuid}/unlike`);\r\n  return {\r\n    type: POST_UNLIKE,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PushpinFilled, PushpinOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postLike, postUnlike } from \"../../_actions/like_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst Likes = ({ likes, uuid }) => {\r\n  const loggedInUser = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [likesArray, setLikesArray] = useState([...likes]);\r\n  const [showLikes, setShowLikes] = useState(false);\r\n\r\n  const handleLike = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(postLike(uuid));\r\n      setLikesArray([...likesArray, loggedInUser.userId]);\r\n      setShowLikes(true);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const handleUnlike = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(postUnlike(uuid));\r\n      let filteredLikes = likesArray.filter((id) => id !== loggedInUser.userId);\r\n      setLikesArray([...filteredLikes]);\r\n      setShowLikes(false);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (likes.includes(loggedInUser.userId)) {\r\n      setShowLikes(true);\r\n    }\r\n  }, [likes, loggedInUser.userId]);\r\n\r\n  return (\r\n    <div className=\"likes\">\r\n      {showLikes ? (\r\n        <PushpinFilled key=\"likes\" onClick={handleUnlike} />\r\n      ) : (\r\n        <PushpinOutlined key=\"notlikes\" onClick={handleLike} />\r\n      )}\r\n\r\n      <span>{likesArray.length}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Likes;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { deletePost } from \"../../_actions/post_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst DeleteAPost = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { history, uuid } = props;\r\n\r\n  const deletePostHandle = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(deletePost(uuid));\r\n      alert(\"포스트가 삭제되었습니다\");\r\n      return history.replace(\"/home\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  return <DeleteOutlined onClick={deletePostHandle} />;\r\n};\r\n\r\nexport default DeleteAPost;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CommentForm from \"./comment-form\";\r\nimport FetchComments from \"./comments\";\r\nimport Likes from \"./likes\";\r\nimport \"./post-card.css\";\r\nimport { TagsOutlined, TagsFilled, ZoomInOutlined } from \"@ant-design/icons\";\r\nimport DeleteAPost from \"./post-delete\";\r\n\r\nconst PostCard = ({ index, posts }) => {\r\n  const { uuid, likes, content, url, user } = posts;\r\n  const { username } = user;\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const CommentToggle = (params) => {\r\n    return (\r\n      <div onClick={() => setShowComment(!showComment)}>\r\n        {!showComment ? (\r\n          <TagsOutlined key=\"comment\" />\r\n        ) : (\r\n          <TagsFilled key=\"comment\" />\r\n        )}\r\n\r\n        <span>댓글</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <li key={`postcard-${index}-by${username}`} className=\"postcard\">\r\n      <h1 className=\"user\">\r\n        <Link to={`/username/${username}`}>{username}</Link>\r\n      </h1>\r\n      <div className=\"post\">\r\n        <img alt={`${username}'s post`} src={url} />\r\n      </div>\r\n\r\n      <p className=\"content\">{content}</p>\r\n      <ul className=\"features\">\r\n        <li>\r\n          <Likes likes={likes} uuid={uuid} />\r\n        </li>\r\n        <li>\r\n          <CommentToggle />\r\n        </li>\r\n        <li>\r\n          <Link to={`/p/${uuid}`}>\r\n            <ZoomInOutlined key=\"link\" />\r\n          </Link>\r\n        </li>\r\n        {userId === user._id && (\r\n          <li>\r\n            <DeleteAPost uuid={uuid} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n\r\n      {showComment && (\r\n        <FetchComments\r\n          uuid={uuid}\r\n          comments={comments}\r\n          setComments={setComments}\r\n        />\r\n      )}\r\n\r\n      <CommentForm uuid={uuid} comments={comments} setComments={setComments} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React from \"react\";\r\nimport PostInfiniteScroll from \"../../containers/infinite-scroll\";\r\nimport PostCard from \"../../containers/post-card\";\r\n\r\nconst Home = (params) => {\r\n  return (\r\n    <>\r\n      <PostInfiniteScroll\r\n        render={(posts, index) => (\r\n          <PostCard key={`post-${index}`} posts={posts} index={index} />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"landing\">\r\n      <div className=\"intro wrapper\">\r\n        <h1>\r\n          말은 제주로\r\n          <br />\r\n          <span>\r\n            글은 <strong>갈피</strong>로\r\n          </span>\r\n        </h1>\r\n        <p>좋아하는 문장들을 원하는 이미지에 옮겨 포스팅 해보세요 !</p>\r\n        <button>\r\n          <Link to=\"/register\">회원가입</Link>\r\n        </button>\r\n        <button>\r\n          <Link to=\"/login\">로그인</Link>\r\n        </button>\r\n      </div>\r\n      <span className=\"bgr-img\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport { CheckCircleOutlined, WarningOutlined } from \"@ant-design/icons\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { loginUser } from \"../../../_actions/user_action\";\r\n\r\nconst LoginForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { location, history } = props;\r\n  const { state } = location;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailValid, setEmailValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordValid, setPasswordValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n\r\n  const pwdHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setPassword(val);\r\n    if (val === \"\") {\r\n      setPasswordValid({\r\n        valid: \"\",\r\n        message: \"비밀번호를 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else setPasswordValid({ valid: \"\", message: \"\", ok: true });\r\n  };\r\n\r\n  const emailHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setEmail(val);\r\n    if (val === \"\") {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (!EmailValidator.validate(val)) {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 알맞게 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else {\r\n      setEmailValid({\r\n        valid: \"\",\r\n        message: \"\",\r\n        ok: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onFinish = async (e) => {\r\n    e.preventDefault();\r\n    if (emailValid.ok && passwordValid.ok) {\r\n      try {\r\n        let userinfo = {\r\n          email,\r\n          password,\r\n        };\r\n\r\n        await dispatch(loginUser(userinfo));\r\n\r\n        if (state && state.from) {\r\n          return history.replace(state.from);\r\n        } else {\r\n          return history.replace(\"/home\");\r\n        }\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form login\">\r\n      <h1 className=\"page-title\">로그인</h1>\r\n      <form onSubmit={onFinish}>\r\n        <div className={`form-control ${emailValid.valid}`}>\r\n          <label htmlFor=\"email\">이메일</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            value={email}\r\n            placeholder=\"예) galpi@galpi.com\"\r\n            min=\"8\"\r\n            max=\"254\"\r\n            onChange={emailHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{emailValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${passwordValid.valid}`}>\r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={pwdHandler}\r\n          />\r\n\r\n          <small>{passwordValid.message}</small>\r\n        </div>\r\n        <input type=\"submit\" value=\"로그인\" className=\"submit-btn\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Canvas = ({\r\n  url,\r\n  color,\r\n  opt,\r\n  quote,\r\n  fontcolor,\r\n  fontsize,\r\n  fonttype,\r\n  fontlineheight,\r\n  setQuote,\r\n  canvasRef,\r\n  fontalign,\r\n}) => {\r\n  const [quoteClickStart, setQuoteClickStart] = useState({ x: 0, y: 0 });\r\n  const [quoteXY, setQuoteXY] = useState({ x: 200, y: 200 });\r\n  const [imgClickStart, setImgClickStart] = useState({ x: 0, y: 0 });\r\n  const [imgXY, setImgXY] = useState({ x: 0, y: 0 });\r\n  const [resize, setResize] = useState(\"none\");\r\n  const [quoteCursor, setQuoteCursor] = useState(\"grab\");\r\n  const [imgCursor, setImgCursor] = useState(\"move\");\r\n\r\n  const bgrStyleObj = {\r\n    backgroundColor: color,\r\n    cursor: imgCursor,\r\n  };\r\n\r\n  const textStyleObj = {\r\n    color: fontcolor,\r\n    fontSize: `${fontsize}px`,\r\n    fontFamily: fonttype,\r\n    lineHeight: `${fontlineheight}px`,\r\n    resize,\r\n    top: quoteXY.y,\r\n    left: quoteXY.x,\r\n    cursor: quoteCursor,\r\n    textAlign: fontalign,\r\n  };\r\n\r\n  const imgPos = {\r\n    top: imgXY.y,\r\n    left: imgXY.x,\r\n  };\r\n\r\n  const handleDragStart = (e, cb) => {\r\n    setQuoteCursor(\"grabbing\");\r\n    setImgCursor(\"grabbing\");\r\n    const x = e.clientX;\r\n    const y = e.clientY;\r\n    cb({ x, y });\r\n  };\r\n\r\n  const handleDragEndQuote = (e) => {\r\n    setQuoteCursor(\"grab\");\r\n    let distanceX = e.clientX - quoteClickStart.x;\r\n    let distanceY = e.clientY - quoteClickStart.y;\r\n    setQuoteXY({ x: quoteXY.x + distanceX, y: quoteXY.y + distanceY });\r\n  };\r\n\r\n  const handleDragEndImg = (e) => {\r\n    setImgCursor(\"move\");\r\n    let distanceX = e.clientX - imgClickStart.x;\r\n    let distanceY = e.clientY - imgClickStart.y;\r\n    setImgXY({\r\n      x: imgXY.x + distanceX,\r\n      y: imgXY.y + distanceY,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setImgXY({ x: 0, y: 0 });\r\n  }, [url]);\r\n\r\n  return (\r\n    <section className=\"canvas-wrapper\">\r\n      <div id=\"canvas\" className=\"canvas\" ref={canvasRef}>\r\n        {opt ? (\r\n          <div className=\"canvas-bgr\" style={bgrStyleObj}>\r\n            <img\r\n              src={url}\r\n              alt=\"background for quote lines\"\r\n              draggable=\"true\"\r\n              onDoubleClick={() => setImgXY({ x: 0, y: 0 })}\r\n              onDragStart={(e) => {\r\n                handleDragStart(e, setImgClickStart);\r\n              }}\r\n              onDragEnd={(e) => {\r\n                handleDragEndImg(e);\r\n              }}\r\n              style={imgPos}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"canvas-bgr\" style={bgrStyleObj} />\r\n        )}\r\n\r\n        <textarea\r\n          className=\"quote-textarea\"\r\n          value={quote}\r\n          onChange={(e) => setQuote(e.target.value)}\r\n          defaultValue={`마음에 드는 구절을 입력하세요`}\r\n          style={textStyleObj}\r\n          draggable=\"true\"\r\n          onFocus={() => setResize(\"both\")}\r\n          onBlur={() => setResize(\"none\")}\r\n          onDragStart={(e) => {\r\n            handleDragStart(e, setQuoteClickStart);\r\n          }}\r\n          onDragEnd={(e) => {\r\n            handleDragEndQuote(e);\r\n          }}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React, { useState } from \"react\";\r\nimport { Upload, message } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst getBase64 = (img, cb) => {\r\n  const reader = new FileReader();\r\n  reader.onloadend = () => {\r\n    cb(reader.result);\r\n  };\r\n  reader.readAsDataURL(img);\r\n};\r\n\r\nconst beforeUpload = (file) => {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"JPG/PNG 파일만 업로드 하세요.\");\r\n  }\r\n  // const isLt2M = file.size / 1024 / 1024 < 2;\r\n  // if(!isLt2M){\r\n  //     message.error('이미지 용량은 2MB 이하만 가능합니다. ')\r\n  // }\r\n  return isJpgOrPng;\r\n};\r\n\r\nexport const Preview = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { url, setUrl, setOpt } = props;\r\n\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess(\"ok\");\r\n    }, 0);\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      getBase64(info.file.originFileObj, (imgUrl) => {\r\n        setUrl(imgUrl); // prop: setImgurl\r\n\r\n        setOpt(true);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  };\r\n  const uploadBtn = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8, fontSize: \"0.75em\" }}>배경 이미지</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"canvas-image\" style={{ display: \"none\" }}>\r\n        배경 이미지\r\n      </label>\r\n      <Upload\r\n        name=\"background-img\"\r\n        listType=\"picture-card\"\r\n        showUploadList={false}\r\n        beforeUpload={beforeUpload}\r\n        onChange={handleChange}\r\n        customRequest={dummyRequest}\r\n        className=\"preview-image\"\r\n      >\r\n        {url ? (\r\n          <img\r\n            src={url}\r\n            alt=\"preview\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          />\r\n        ) : (\r\n          uploadBtn\r\n        )}\r\n      </Upload>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SliderPicker } from \"react-color\";\r\n\r\nexport const BgrColorPicker = (props) => {\r\n  const { setColor, color } = props;\r\n\r\n  const handleColor = (color) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"canvas-color\">배경색</label>\r\n      <SliderPicker\r\n        color={color}\r\n        onChange={handleColor}\r\n        className=\"bgr-colorpicker\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AlignCenterOutlined,\r\n  AlignLeftOutlined,\r\n  AlignRightOutlined,\r\n  ColumnWidthOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nexport const FontAlign = ({ setFontalign, fontalign }) => {\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const iconHandler = () => {\r\n    switch (fontalign) {\r\n      case \"left\":\r\n        return <AlignLeftOutlined />;\r\n      case \"center\":\r\n        return <AlignCenterOutlined />;\r\n      case \"right\":\r\n        return <AlignRightOutlined />;\r\n      case \"justify\":\r\n        return <ColumnWidthOutlined />;\r\n      default:\r\n        return <AlignLeftOutlined />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"font\" onClick={() => setDisplay(!display)}>\r\n      <label htmlFor=\"font-align\" style={{ display: \"none\" }}>\r\n        정렬\r\n      </label>\r\n      {iconHandler()}\r\n      {display && (\r\n        <div className=\"pop-up align-opt\">\r\n          <AlignLeftOutlined\r\n            onClick={() => {\r\n              setFontalign(\"left\");\r\n              setDisplay(!display);\r\n            }}\r\n          />\r\n          <AlignCenterOutlined\r\n            onClick={() => {\r\n              setFontalign(\"center\");\r\n              setDisplay(!display);\r\n            }}\r\n          />\r\n          <AlignRightOutlined\r\n            onClick={() => {\r\n              setFontalign(\"right\");\r\n              setDisplay(!display);\r\n            }}\r\n          />\r\n          <ColumnWidthOutlined\r\n            onClick={() => {\r\n              setFontalign(\"justify\");\r\n              setDisplay(!display);\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { FontColorsOutlined } from \"@ant-design/icons\";\r\n\r\nexport const FontColorPicker = (props) => {\r\n  const [display, setDisplay] = useState(false);\r\n  const { setColor, color } = props;\r\n\r\n  const handleColor = (color) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  const style = {\r\n    color: color,\r\n  };\r\n\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-color\" style={{ display: \"none\" }}>\r\n        글씨 색상\r\n      </label>\r\n      <FontColorsOutlined\r\n        className=\"icon\"\r\n        onClick={() => setDisplay(!display)}\r\n        style={style}\r\n      />\r\n      {display && (\r\n        <div className=\"pop-up sketch-picker\">\r\n          <SketchPicker color={color} onChange={handleColor} triangle=\"hide\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { LineHeightOutlined } from \"@ant-design/icons\";\r\n\r\nexport const FontLineHeight = ({ setFontlineheight }) => {\r\n  const fontLineHandler = (e) => {\r\n    e.preventDefault();\r\n    setFontlineheight(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-lineheight\" style={{ display: \"none\" }}>\r\n        줄 간격\r\n      </label>\r\n      <LineHeightOutlined className=\"icon\" />\r\n      <input\r\n        type=\"range\"\r\n        id=\"font-lineheight\"\r\n        min={18}\r\n        max={50}\r\n        step={1}\r\n        defaultValue={20}\r\n        onChange={fontLineHandler}\r\n        className=\"slider\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FontSizeOutlined } from \"@ant-design/icons\";\r\n\r\nexport const FontSlider = ({ setFontsize }) => {\r\n  const fontsizeHandler = (e) => {\r\n    e.preventDefault();\r\n    let val = e.target.value;\r\n    setFontsize(val);\r\n  };\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-size\" style={{ display: \"none\" }}>\r\n        글씨 크기\r\n      </label>\r\n      <FontSizeOutlined className=\"icon\" />\r\n      <input\r\n        type=\"range\"\r\n        id=\"font-size\"\r\n        min={5}\r\n        max={50}\r\n        step={1}\r\n        defaultValue={16}\r\n        onChange={fontsizeHandler}\r\n        className=\"slider\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { QuestionOutlined } from \"@ant-design/icons\";\r\n\r\nexport const FontType = ({ setFonttype }) => {\r\n  const [counter, setCounter] = useState(0);\r\n  const fonts = [\r\n    '\"Noto Serif KR\", \"Times New Roman\",\"Georgia\", \"serif\"',\r\n    '\"UhBeeDoolDool\", \"Dotum\", \"Caflisch Script\", \"Adobe Poetica\", \"Sanvito\", \"Ex Ponto\", \"cursive\" ',\r\n    '\"Noto Sans KR\", \"Verdana\", \"Malgun Gothic\", \"sans-serif\"',\r\n  ];\r\n\r\n  const fontTypeHandler = () => {\r\n    setFonttype(fonts[counter]);\r\n    setCounter(counter + 1);\r\n    if (counter === fonts.length - 1) return setCounter(0);\r\n  };\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-type\" style={{ display: \"none\" }}>\r\n        글씨 종류\r\n      </label>\r\n      <QuestionOutlined className=\"icon\" onClick={fontTypeHandler} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport Canvas from \"./canvas\";\r\nimport { Preview } from \"./preview\";\r\nimport { BgrColorPicker } from \"./bgr-colorpicker\";\r\nimport {\r\n  FontSlider,\r\n  FontType,\r\n  FontLineHeight,\r\n  FontAlign,\r\n  FontColorPicker,\r\n} from \"./font\";\r\nimport { contentPost, imgPost } from \"../../../_actions/post_action\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\n\r\nconst Posting = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { history } = props;\r\n  const [url, setUrl] = useState(); // preview\r\n  const [color, setColor] = useState(\"#f1f2f6\");\r\n  const [fontsize, setFontsize] = useState(16);\r\n  const [fontcolor, setFontcolor] = useState(\"black\");\r\n  const [fonttype, setFonttype] = useState(\r\n    '\"Noto Serif KR\", \"Times New Roman\",\"Georgia\", \"serif\"'\r\n  );\r\n  const [fontalign, setFontalign] = useState(\"left\");\r\n  const [fontlineheight, setFontlineheight] = useState(20);\r\n  const [opt, setOpt] = useState(false);\r\n  const [quote, setQuote] = useState();\r\n  const [content, setContent] = useState();\r\n\r\n  const canvasRef = useRef();\r\n\r\n  const postContent = async (url) => {\r\n    let data = {\r\n      content,\r\n      url,\r\n    };\r\n    try {\r\n      await dispatch(dispatch(contentPost(data)));\r\n      alert(\"업로드 성공 !\");\r\n      history.replace(\"/home\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const postImage = async (blob) => {\r\n    const img = blob;\r\n    const formData = new FormData();\r\n    formData.append(\"img\", img, \"combined.png\");\r\n\r\n    try {\r\n      let response = await dispatch(imgPost(formData));\r\n      postContent(response.payload.url);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const domToImage = () => {\r\n    const canvasDiv = canvasRef.current;\r\n    domtoimage.toBlob(canvasDiv).then((blob) => {\r\n      postImage(blob);\r\n    });\r\n  };\r\n\r\n  useEffect(() => setOpt(true), [url]);\r\n  useEffect(() => setOpt(false), [color]);\r\n\r\n  return (\r\n    <div className=\"posting\">\r\n      <h1 className=\"page-title\">갈피 남기기</h1>\r\n\r\n      <div className=\"canvas-background\">\r\n        <div className=\"bgr-image\">\r\n          <Preview\r\n            url={url}\r\n            setUrl={setUrl}\r\n            setOpt={setOpt}\r\n            id=\"canvas-image\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"bgr-color\">\r\n          <BgrColorPicker setColor={setColor} color={color} id=\"canvas-color\" />\r\n        </div>\r\n\r\n        <div className=\"canvas-font\">\r\n          <FontType setFonttype={setFonttype} />\r\n          <FontColorPicker setColor={setFontcolor} color={fontcolor} />\r\n          <FontAlign setFontalign={setFontalign} fontalign={fontalign} />\r\n          <FontSlider setFontsize={setFontsize} />\r\n          <FontLineHeight setFontlineheight={setFontlineheight} />\r\n        </div>\r\n      </div>\r\n\r\n      <Canvas\r\n        url={url}\r\n        color={color}\r\n        opt={opt}\r\n        fontcolor={fontcolor}\r\n        fontsize={fontsize}\r\n        fonttype={fonttype}\r\n        quote={quote}\r\n        setQuote={setQuote}\r\n        content={content}\r\n        setContent={setContent}\r\n        canvasRef={canvasRef}\r\n        fontlineheight={fontlineheight}\r\n        fontalign={fontalign}\r\n      />\r\n      <ul className=\"canvas-desc\">\r\n        <li>✒ 텍스트 상자의 크기와 위치를 직접 조정할 수 있습니다</li>\r\n        <li>\r\n          ✒ 이미지의 위치를 조정할 수 있고, 더블클릭 시 처음 위치로 설정됩니다\r\n        </li>{\" \"}\r\n      </ul>\r\n      <div className=\"content\">\r\n        <label htmlFor=\"content\" style={{ display: \"none\" }}>\r\n          코멘트\r\n        </label>\r\n        <textarea\r\n          className=\"content-textarea\"\r\n          name=\"content\"\r\n          value={content}\r\n          rows=\"5\"\r\n          onChange={(e) => setContent(e.target.value)}\r\n          placeholder=\"작가, 책 제목, 간단한 소감 등을 남겨주세요\"\r\n        />\r\n      </div>\r\n      <div className=\"upload-btn\">\r\n        <button onClick={domToImage}>업로드</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posting;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst PostThumbnail = ({ index, posts }) => {\r\n  const { uuid, url, user } = posts;\r\n  const { username } = user;\r\n  const postHandler = (e) => {\r\n    e.preventDefault();\r\n    return <Redirect push to={`/p/${uuid}`} />;\r\n  };\r\n\r\n  return (\r\n    <li\r\n      key={`postthumbnail-${index}-by${username}`}\r\n      className=\"post-thumbnail\"\r\n      onClick={postHandler}\r\n    >\r\n      <div className=\"post\">\r\n        <img alt={`${user}'s post`} src={url} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostThumbnail;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PostInfiniteScroll from \"../../containers/infinite-scroll\";\r\nimport PostThumbnail from \"../../containers/post-thumbnail\";\r\nimport { getUser } from \"../../../_actions/user_action\";\r\nimport PaperCard from \"../../containers/papercard\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\n\r\nconst Profile = () => {\r\n  const { username } = useParams();\r\n  const [user, setUser] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      let response = await dispatch(getUser(username));\r\n      let { user } = response.payload;\r\n      setUser(user);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n      setLoading(false);\r\n    }\r\n  }, [dispatch, username]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      {loading && \"유저 정보를 가져오고 있습니다\"}\r\n      {user ? (\r\n        <>\r\n          <PaperCard title={user.username}>\r\n            <br />\r\n            <h2>이름: {user.name}</h2>\r\n            <p>계정 생성일: {user.createdAt.slice(0, 10)}</p>\r\n          </PaperCard>\r\n          <PostInfiniteScroll\r\n            render={(posts, index) => (\r\n              <PostThumbnail\r\n                key={`postthumbnail-${index}`}\r\n                posts={posts}\r\n                index={index}\r\n              />\r\n            )}\r\n            username={user.username}\r\n          />\r\n        </>\r\n      ) : (\r\n        <p> 해당하는 유저가 없습니다. </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport { CheckCircleOutlined, WarningOutlined } from \"@ant-design/icons\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { registerUser } from \"../../../_actions/user_action\";\r\n\r\nconst RegistrationForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { history } = props;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailValid, setEmailValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameValid, setUsernameValid] = useState({\r\n    valid: \"\",\r\n    message: \"3 ~ 15글자 이상, 영문 및 숫자\",\r\n    ok: false,\r\n  });\r\n  const [name, setName] = useState(\"\");\r\n  const [nameValid, setNameValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordValid, setPasswordValid] = useState({\r\n    valid: \"\",\r\n    message: \"영어 대·소문자와 숫자 포함, 8글자 이상.\",\r\n    ok: false,\r\n  });\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [confirmValid, setConfirmValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n\r\n  const onFinish = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      emailValid.ok &&\r\n      usernameValid.ok &&\r\n      nameValid.ok &&\r\n      passwordValid.ok &&\r\n      confirmValid.ok\r\n    ) {\r\n      let userinfo = {\r\n        email,\r\n        username,\r\n        name,\r\n        password,\r\n        passwordConfirmation: confirm,\r\n      };\r\n      return await dispatch(registerUser(userinfo))\r\n        .then((res) => {\r\n          alert(\"회원가입에 성공했습니다.\");\r\n          history.replace(\"/home\");\r\n        })\r\n        .catch((e) => dispatch(errorHandle(e.response)));\r\n    } else return alert(\"정확하게 입력해주세요\");\r\n  };\r\n\r\n  const isPassword = (pwd) => {\r\n    return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(pwd);\r\n  };\r\n\r\n  const confirmHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setConfirm(val);\r\n    if (val === \"\") {\r\n      setConfirmValid({\r\n        valid: \"error\",\r\n        message: \"비밀번호 확인을 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (password !== val) {\r\n      setConfirmValid({\r\n        valid: \"error\",\r\n        message: \"비밀번호를 동일하게 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else setConfirmValid({ valid: \"success\", message: \"\", ok: true });\r\n  };\r\n\r\n  const passwordHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setPassword(val);\r\n    if (val === \"\") {\r\n      setPasswordValid({\r\n        valid: \"error\",\r\n        message: \"비밀번호를 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (!isPassword(val)) {\r\n      setPasswordValid({\r\n        valid: \"error\",\r\n        message: \"영어 대·소문자와 숫자 포함하고 8글자 이상이여야 합니다\",\r\n        ok: false,\r\n      });\r\n    } else setPasswordValid({ valid: \"success\", message: \"\", ok: true });\r\n  };\r\n\r\n  const nameHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setName(val);\r\n    if (val === \"\") {\r\n      setNameValid({ valid: \"error\", message: \"이름을 입력하세요\", ok: false });\r\n    } else {\r\n      setNameValid({ valid: \"success\", message: \"\", ok: true });\r\n    }\r\n  };\r\n\r\n  const usernameHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setUsername(val);\r\n    if (val === \"\") {\r\n      setUsernameValid({\r\n        valid: \"error\",\r\n        message: \"아이디를 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (\r\n      !/^(?=[a-zA-Z0-9._]{3,20}$)(?!.*[_.]{2})[^_.].*[^_.]$/.test(val)\r\n    ) {\r\n      setUsernameValid({\r\n        valid: \"error\",\r\n        message: \"3 ~ 15글자 이상, 영문 혹은 숫자\",\r\n        ok: false,\r\n      });\r\n    } else {\r\n      setUsernameValid({ valid: \"success\", message: \"\", ok: true });\r\n    }\r\n  };\r\n\r\n  const emailHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setEmail(val);\r\n    if (val === \"\") {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (!EmailValidator.validate(val)) {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 올바르게 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else {\r\n      setEmailValid({\r\n        valid: \"success\",\r\n        message: \"\",\r\n        ok: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form register\">\r\n      <h1 className=\"page-title\">회원가입</h1>\r\n      <form onSubmit={onFinish}>\r\n        <div className={`form-control ${emailValid.valid}`}>\r\n          <label htmlFor=\"email\">이메일</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            value={email}\r\n            placeholder=\"예) galpi@galpi.com\"\r\n            onChange={emailHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{emailValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${usernameValid.valid}`}>\r\n          <label htmlFor=\"username\">아이디(영문)</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            maxLength=\"128\"\r\n            title=\"최소 2글자 이상\"\r\n            value={username}\r\n            onChange={usernameHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{usernameValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${nameValid.valid}`}>\r\n          <label htmlFor=\"name\">이름</label>\r\n          <input id=\"name\" type=\"text\" value={name} onChange={nameHandler} />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{nameValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${passwordValid.valid}`}>\r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={passwordHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n\r\n          <small>{passwordValid.message}</small>\r\n        </div>\r\n        <div className={`form-control ${confirmValid.valid}`}>\r\n          <label htmlFor=\"confirm\">비밀번호 확인</label>\r\n          <input\r\n            id=\"confirm\"\r\n            type=\"password\"\r\n            value={confirm}\r\n            onChange={confirmHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{confirmValid.message}</small>\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"가입하기\" className=\"submit-btn\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAPost } from \"../../../_actions/post_action\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport Likes from \"../../containers/likes\";\r\nimport CommentForm from \"../../containers/comment-form\";\r\nimport FetchComments from \"../../containers/comments\";\r\nimport DeleteAPost from \"../../containers/post-delete\";\r\n\r\nconst Post = () => {\r\n  const { uuid } = useParams();\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const [post, setPost] = useState();\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let response = await dispatch(getAPost(uuid));\r\n        setPost(response.payload.post);\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [uuid, dispatch]);\r\n\r\n  return (\r\n    <div className=\"body-wrapper\">\r\n      {post && (\r\n        <section className=\"a-post\">\r\n          <div className=\"a-post-header\">\r\n            <div className=\"user\">\r\n              <Link to={`/username/${post.user.username}`}>\r\n                {post.user.username}\r\n              </Link>\r\n            </div>\r\n            {userId === post.user._id && (\r\n              <div className=\"delete\">\r\n                <DeleteAPost uuid={uuid} />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"image\">\r\n            <img src={post.url} alt={`${post.user.username}의 포스팅`} />\r\n          </div>\r\n\r\n          <div className=\"content\">\r\n            <p>{post.content}</p>\r\n          </div>\r\n\r\n          <Likes likes={post.likes} uuid={post.uuid} />\r\n\r\n          {comments && (\r\n            <FetchComments\r\n              uuid={uuid}\r\n              comments={comments}\r\n              setComments={setComments}\r\n            />\r\n          )}\r\n          <CommentForm\r\n            uuid={uuid}\r\n            comments={comments}\r\n            setComments={setComments}\r\n          />\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nconst Footer = (params) => {\r\n  return (\r\n    <footer>\r\n      <p>© 2020 Cha Haneul. All rights reserved.</p>\r\n      <address>문의사항은 tjaneul@gmail.com로 보내주세요.</address>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst NotFound = (params) => {\r\n  return (\r\n    <div>\r\n      <h1>잘못된 경로로 들어오셨네요. 어서 돌아가주세요.</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth, logOutUser } from \"../../../_actions/user_action\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { NavLink, Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst NavBar = (props) => {\r\n  const { loggedIn, username } = useSelector((state) => ({\r\n    loggedIn: state.user.loggedIn,\r\n    username: state.user.username,\r\n  }));\r\n  const [menuToggle, setMenuToggle] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const logout = async () => {\r\n    try {\r\n      await dispatch(logOutUser());\r\n      await dispatch(auth());\r\n      alert(\"로그아웃 되었습니다\");\r\n      return <Redirect to=\"/\" />;\r\n    } catch (e) {\r\n      console.log(\"logout\", e);\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const toggleMenu = (e) => {\r\n    e.preventDefault();\r\n    setMenuToggle(!menuToggle);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Link to=\"/\">\r\n          <h1 className=\"logo\">galpi</h1>\r\n        </Link>\r\n\r\n        <svg\r\n          height=\"40px\"\r\n          id=\"menu-btn\"\r\n          className=\"open\"\r\n          viewBox=\"0 0 32 32\"\r\n          onClick={toggleMenu}\r\n        >\r\n          <path\r\n            fill=\"#db2b39\"\r\n            d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\"\r\n          />\r\n        </svg>\r\n\r\n        <nav id=\"nav\" className={menuToggle ? `open-nav` : undefined}>\r\n          <svg\r\n            viewBox=\"0 0 24 24\"\r\n            id=\"exit-btn\"\r\n            className=\"exit\"\r\n            onClick={toggleMenu}\r\n          >\r\n            <path\r\n              id=\"exit\"\r\n              fill=\"#db2b39\"\r\n              d=\"M14.8,12l3.6-3.6c0.8-0.8,0.8-2,0-2.8c-0.8-0.8-2-0.8-2.8,0L12,9.2L8.4,5.6c-0.8-0.8-2-0.8-2.8,0   c-0.8,0.8-0.8,2,0,2.8L9.2,12l-3.6,3.6c-0.8,0.8-0.8,2,0,2.8C6,18.8,6.5,19,7,19s1-0.2,1.4-0.6l3.6-3.6l3.6,3.6   C16,18.8,16.5,19,17,19s1-0.2,1.4-0.6c0.8-0.8,0.8-2,0-2.8L14.8,12z\"\r\n            />\r\n          </svg>\r\n          {!loggedIn ? (\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to=\"/\">\r\n                  메인\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/login\">로그인</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/register\">회원가입</NavLink>\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to=\"/\">\r\n                  메인\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/post\">갈피 남기기</NavLink>\r\n              </li>\r\n              <li className=\"sub\">\r\n                <NavLink to={`/user/${username}`} className=\"nav-username\">\r\n                  {username}\r\n                </NavLink>\r\n                <div className=\"submenu\">\r\n                  <ul>\r\n                    <li>\r\n                      <NavLink to=\"/dashboard\">대시보드</NavLink>\r\n                    </li>\r\n                    <li onClick={logout}>\r\n                      <span>로그아웃</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </nav>\r\n      </header>\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const AuthRoute = ({ component: Component, ...rest }) => {\r\n  const { loggedIn } = useSelector((state) => ({\r\n    loggedIn: state.user.loggedIn,\r\n  }));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const GuestRoute = ({ component: Component, ...rest }) => {\r\n  const { loggedIn } = useSelector((state) => ({\r\n    loggedIn: state.user.loggedIn,\r\n  }));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/home\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nconst modalRoot = document.getElementById(\"modal\");\r\n\r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.el = document.createElement(\"div\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    modalRoot.appendChild(this.el);\r\n  }\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport Modal from \"./modal\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { errorHide } from \"../../../_actions/error_actions\";\r\n\r\nconst ErrorModal = (params) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const name = useSelector((state) => state.error.name);\r\n  const message = useSelector((state) => state.error.message);\r\n  const isOpen = useSelector((state) => state.error.isOpen);\r\n\r\n  const hideModal = (params) => {\r\n    dispatch(errorHide());\r\n  };\r\n\r\n  if (message === \"You are already logged in\") {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Modal>\r\n          <div className=\"modal\">\r\n            <div className=\"error-message\">\r\n              <h1>{name}</h1>\r\n              <p>{message}</p>\r\n              <button onClick={hideModal} className=\"submit-btn\">\r\n                확인\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport {\r\n  Register,\r\n  Login,\r\n  Dashboard,\r\n  Home,\r\n  Post,\r\n  Posting,\r\n  Profile,\r\n  LandingPage,\r\n  Footer,\r\n} from \"./components/views/index\";\r\nimport NotFound from \"./components/views/NotFound/notFound\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport NavBar from \"./components/views/NavBar/navbar\";\r\nimport { GuestRoute, AuthRoute } from \"./route/index\";\r\nimport { auth } from \"./_actions/user_action\";\r\nimport { errorHandle } from \"./_actions/error_actions\";\r\nimport ErrorModal from \"./components/views/Modal/modal-content\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchAuth = async () => {\r\n      console.log(\"initial auth\");\r\n\r\n      try {\r\n        await dispatch(auth());\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    };\r\n    fetchAuth();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <NavBar>\r\n          <section className=\"body-container\">\r\n            <Switch>\r\n              <GuestRoute exact path=\"/\" component={LandingPage} />\r\n\r\n              <GuestRoute path=\"/login\" component={Login} />\r\n              <GuestRoute path=\"/register\" component={Register} />\r\n\r\n              <AuthRoute path=\"/dashboard\" component={Dashboard} />\r\n              <AuthRoute path=\"/home\" component={Home} />\r\n              <AuthRoute path=\"/post\" component={Posting} />\r\n\r\n              <Route path=\"/user/:username\" children={<Profile />} />\r\n              <Route path=\"/p/:uuid\" children={<Post />} />\r\n\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </section>\r\n        </NavBar>\r\n      </Router>\r\n      <Footer />\r\n      <ErrorModal />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ERROR_HANDLE, ERROR_HIDE } from \"../_actions/types\";\r\n\r\nconst initState = {\r\n  name: null,\r\n  status: null,\r\n  message: null,\r\n  isOpen: false,\r\n};\r\n\r\nexport default function (state = initState, action) {\r\n  const { error } = action;\r\n  console.log(error);\r\n  switch (action.type) {\r\n    case ERROR_HANDLE:\r\n      if (!error.statusText) error.statusText = null;\r\n      return {\r\n        name: error.statusText,\r\n        status: error.status,\r\n        message: error.data.message,\r\n        isOpen: true,\r\n      };\r\n\r\n    case ERROR_HIDE:\r\n      return {\r\n        name: null,\r\n        status: null,\r\n        message: null,\r\n        isOpen: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\nimport post from \"./post_reducer\";\r\nimport comment from \"./comment_reducer\";\r\nimport like from \"./like_reducer\";\r\nimport error from \"./error_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  post,\r\n  comment,\r\n  like,\r\n  error,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH,\r\n  LOGOUT_USER,\r\n  GET_USER,\r\n  GET_DASHBOARD,\r\n  DELETE_USER,\r\n} from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return {\r\n        ...state,\r\n        getRegisterSuccess: action.payload.message,\r\n      };\r\n\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        userId: action.payload.user._id,\r\n        username: action.payload.user.username,\r\n      };\r\n\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        userId: {},\r\n        username: {},\r\n      };\r\n\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        getUserSuccess: action.payload.message,\r\n      };\r\n\r\n    case DELETE_USER:\r\n      return {\r\n        ...state,\r\n        deleteUserSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_DASHBOARD:\r\n      return {\r\n        ...state,\r\n        getDashboardSuccess: action.payload.message,\r\n      };\r\n    case AUTH:\r\n      return {\r\n        ...state,\r\n        loggedIn: action.payload.isAuth,\r\n        userId: action.payload.user._id,\r\n        username: action.payload.user.username,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CONTENT_POST,\r\n  GET_A_POST,\r\n  IMG_POST,\r\n  GET_POSTS,\r\n  DELETE_POST,\r\n} from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case IMG_POST:\r\n      return {\r\n        ...state,\r\n        imgurl: action.payload.url,\r\n      };\r\n\r\n    case CONTENT_POST:\r\n      return {\r\n        ...state,\r\n        postUploadSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_A_POST:\r\n      return {\r\n        ...state,\r\n        postGetSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        postsGetSuccess: action.payload.message,\r\n      };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        postDelSuccess: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_COMMENT, POST_COMMENT, DELETE_COMMENT } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case GET_COMMENT:\r\n      return {\r\n        ...state,\r\n        getCommentSuccess: action.payload.message,\r\n      };\r\n\r\n    case POST_COMMENT:\r\n      return {\r\n        ...state,\r\n        postCommentSuccess: action.payload.message,\r\n      };\r\n\r\n    case DELETE_COMMENT:\r\n      return {\r\n        ...state,\r\n        deleteComomentSuccess: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { POST_LIKE, POST_UNLIKE } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case POST_LIKE:\r\n      return {\r\n        ...state,\r\n        getLikeSuccess: action.payload.message,\r\n      };\r\n\r\n    case POST_UNLIKE:\r\n      return {\r\n        ...state,\r\n        postUnlikeSuccess: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport Reducers from \"../_reducers\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  promiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\n\r\n// const initialState = {\r\n//   auth: {\r\n//     loggedIn: true,\r\n//     userId: \"randomid\",\r\n//     username: \"haneul\",\r\n//     email: \"goodnavy@naver.com\",\r\n//   },\r\n// };\r\n\r\nconst store = createStoreWithMiddleware(\r\n  Reducers,\r\n  // initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./_store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}