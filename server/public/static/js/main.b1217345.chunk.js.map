{"version":3,"sources":["_actions/error_actions.js","_actions/types.js","_actions/user_action.js","components/containers/papercard.js","components/views/Dashboard/dashboard.js","_actions/post_action.js","components/containers/infinite-scroll.js","_actions/comment_action.js","components/containers/comment-form.js","components/containers/comments.js","_actions/like_action.js","components/containers/likes.js","components/containers/post-delete.js","components/containers/post-card.js","components/views/Home/home.js","components/views/LandingPage/landing.js","components/views/LoginPage/login.js","components/views/PostingPage/canvas.js","components/views/PostingPage/preview.js","components/views/PostingPage/bgr-colorpicker.js","components/views/PostingPage/font-colorpicker.js","components/views/PostingPage/font-slider.js","components/views/PostingPage/font-type.js","components/views/PostingPage/font-lineheight.js","components/views/PostingPage/posting.js","components/containers/post-thumbnail.js","components/views/ProfilePage/profile.js","components/views/RegisterPage/register.js","components/views/PostPage/post.js","components/views/Footer/footer.js","components/views/NotFound/notFound.js","components/views/NavBar/navbar.js","route/authRoute.js","route/guestRoute.js","components/views/Modal/modal.js","components/views/Modal/modal-content.js","App.js","_reducers/error_reducer.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/post_reducer.js","_reducers/comment_reducer.js","_reducers/like_reducer.js","_store/index.js","index.js"],"names":["errorHandle","err","type","error","registerUser","body","a","axios","post","response","payload","data","loginUser","dataToSubmit","logOutUser","getUser","username","get","getDashboard","auth","PaperCard","props","id","className","title","children","Dashboard","params","dispatch","useDispatch","useState","user","setUser","posts","setPosts","useEffect","fetchData","name","email","length","createdAt","slice","imgPost","formData","config","header","contentPost","getPosts","page","getAPost","uuid","deletePost","delete","PostInfiniteScroll","loading","setLoading","element","setElement","useRef","prevY","observer","IntersectionObserver","entries","y","boundingClientRect","current","handleInitial","root","rootMargin","threshold","useCallback","pageNum","message","items","values","currentElement","currentObserver","observe","unobserve","map","index","render","ref","getComment","postComment","deleteComment","CommentForm","setComments","comments","comment","setComment","handleCommentSubmit","e","preventDefault","newComment","placeholder","value","onChange","target","onClick","FetchComments","userId","useSelector","state","deleteAComment","li","parentElement","alert","LoadingOutlined","key","_id","postLike","postUnlike","Likes","likes","loggedInUser","likesArray","setLikesArray","showLikes","setShowLikes","handleLike","handleUnlike","filteredLikes","filter","includes","PushpinFilled","PushpinOutlined","DeleteAPost","deletePostHandle","DeleteOutlined","PostCard","content","url","showComment","setShowComment","CommentToggle","TagsFilled","TagsOutlined","to","alt","src","ZoomInOutlined","Home","Landing","LoginForm","location","history","setEmail","valid","ok","emailValid","setEmailValid","password","setPassword","passwordValid","setPasswordValid","onFinish","userinfo","from","replace","onSubmit","htmlFor","min","max","val","trim","EmailValidator","CheckCircleOutlined","WarningOutlined","Canvas","resize","setResize","quoteTop","setQuoteTop","quoteLeft","setQuoteLeft","quoteCursor","setQuoteCursor","imgTop","setImgTop","imgLeft","setImgLeft","imgCursor","setImgCursor","curX","setCurX","curY","setCurY","color","opt","quote","fontcolor","fontsize","fonttype","fontlineheight","setQuote","canvasRef","bgrStyleObj","backgroundColor","cursor","textStyleObj","fontSize","fontFamily","lineHeight","top","left","imgPos","objectPosition","style","draggable","onDragStart","cbtop","cbleft","x","clientX","clientY","handleDragStartImg","onDragEnd","handleDragEndImg","defaultValue","onFocus","onBlur","parent","getBoundingClientRect","relativeX","handleDragEndQuote","beforeUpload","file","isJpgOrPng","Preview","setUrl","setOpt","uploadBtn","PlusOutlined","marginTop","display","listType","showUploadList","info","status","img","cb","reader","FileReader","onloadend","result","readAsDataURL","getBase64","originFileObj","imgUrl","customRequest","onSuccess","setTimeout","width","height","BgrColorPicker","setColor","hex","FontColorPicker","setDisplay","FontColorsOutlined","triangle","FontSlider","setFontsize","FontSizeOutlined","step","FontType","setFonttype","counter","setCounter","fonts","QuestionOutlined","FontLineHeight","setFontlineheight","LineHeightOutlined","console","log","Posting","setFontcolor","setContent","postContent","postImage","blob","FormData","append","rows","canvasDiv","domtoimage","toBlob","then","PostThumbnail","push","Profile","useParams","RegistrationForm","setUsername","usernameValid","setUsernameValid","setName","nameValid","setNameValid","confirm","setConfirm","confirmValid","setConfirmValid","passwordConfirmation","res","catch","maxLength","test","Post","setPost","Footer","NotFound","NavBar","loggedIn","menuToggle","setMenuToggle","logout","toggleMenu","viewBox","fill","d","undefined","exact","AuthRoute","Component","component","rest","pathname","GuestRoute","modalRoot","document","getElementById","Modal","el","createElement","appendChild","this","removeChild","ReactDOM","createPortal","ErrorModal","isOpen","App","fetchAuth","path","LandingPage","Login","Register","initState","rootReducer","combineReducers","action","getRegisterSuccess","getUserSuccess","getDashboardSuccess","isAuth","imgurl","postUploadSuccess","postGetSuccess","postsGetSuccess","postDelSuccess","getCommentSuccess","postCommentSuccess","deleteComomentSuccess","like","getLikeSuccess","postUnlikeSuccess","statusText","store","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","createStoreWithMiddleware","Reducers","window","__REDUX_DEVTOOLS_EXTENSION__","StrictMode"],"mappings":"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","file":"static/js/main.b1217345.chunk.js","sourcesContent":["import { ERROR_HANDLE, ERROR_HIDE } from \"./types\";\r\n\r\nexport const errorHandle = (err) => {\r\n  return {\r\n    type: ERROR_HANDLE,\r\n    error: err,\r\n  };\r\n};\r\n\r\nexport const errorHide = () => {\r\n  return {\r\n    type: ERROR_HIDE,\r\n  };\r\n};\r\n","export const LOGIN_USER = \"login_user\";\r\nexport const REGISTER_USER = \"register_user\";\r\nexport const AUTH = \"auth\";\r\nexport const LOGOUT_USER = \"logout_user\";\r\nexport const GET_USER = \"get_user\";\r\nexport const GET_DASHBOARD = \"get_dashboard\";\r\n\r\nexport const IMG_POST = \"img_post\";\r\nexport const CONTENT_POST = \"content_post\";\r\nexport const GET_A_POST = \"get_a_post\";\r\nexport const GET_POSTS = \"get_posts\";\r\nexport const DELETE_POST = \"delete_post\";\r\n\r\nexport const POST_COMMENT = \"post_comment\";\r\nexport const GET_COMMENT = \"get_comment\";\r\nexport const DELETE_COMMENT = \"delete_comment\";\r\n\r\nexport const POST_LIKE = \"post_like\";\r\nexport const POST_UNLIKE = \"post_unlike\";\r\n\r\nexport const ERROR_HANDLE = \"error_handle\";\r\nexport const ERROR_HIDE = \"error_hide\";\r\n","import axios from \"axios\";\r\nimport {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH,\r\n  LOGOUT_USER,\r\n  GET_USER,\r\n  GET_DASHBOARD,\r\n} from \"./types\";\r\n\r\nexport async function registerUser(body) {\r\n  let response = await axios.post(`/api/user`, body);\r\n\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function loginUser(dataToSubmit) {\r\n  let response = await axios.post(`/api/login`, dataToSubmit);\r\n\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function logOutUser() {\r\n  let response = await axios.post(`/api/logout`);\r\n\r\n  return {\r\n    type: LOGOUT_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getUser(username) {\r\n  let response = await axios.get(`/api/user/${username}`);\r\n\r\n  return {\r\n    type: GET_USER,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getDashboard() {\r\n  let response = await axios.get(`/api/dashboard`);\r\n\r\n  return {\r\n    type: GET_DASHBOARD,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function auth() {\r\n  let response = await axios.get(`/api/auth`);\r\n\r\n  return {\r\n    type: AUTH,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./papercard.css\";\r\n\r\nconst PaperCard = (props) => {\r\n  return (\r\n    <div id=\"paper\">\r\n      <div className=\"card-content\">\r\n        <div id=\"pattern\">\r\n          <h1 className=\"card-title\">{props.title}</h1>\r\n          <div id=\"content\">{props.children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaperCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { getDashboard } from \"../../../_actions/user_action\";\r\nimport PaperCard from \"../../containers/papercard\";\r\n\r\nconst Dashboard = (params) => {\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState();\r\n  const [posts, setPosts] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let response = await dispatch(getDashboard());\r\n        let { user, posts } = response.payload;\r\n\r\n        setUser(user);\r\n        setPosts(posts);\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {user && posts ? (\r\n        <>\r\n          <PaperCard title={`${user.username}님, 안녕하세요 !`}>\r\n            <br />\r\n            <p>이름: {user.name}</p>\r\n            <p>이메일: {user.email}</p>\r\n            <p>갈피: {posts.length} 개</p>\r\n            <p>계정 생성일: {user.createdAt.slice(0, 10)}</p>\r\n          </PaperCard>\r\n        </>\r\n      ) : (\r\n        <p> 유저 정보를 불러오고 있습니다. </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  CONTENT_POST,\r\n  IMG_POST,\r\n  GET_A_POST,\r\n  GET_POSTS,\r\n  DELETE_POST,\r\n} from \"./types\";\r\n\r\nexport async function imgPost(formData) {\r\n  const config = {\r\n    header: {\r\n      \"Content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n\r\n  const response = await axios.post(`/api/post/img`, formData, config);\r\n\r\n  return {\r\n    type: IMG_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function contentPost(data) {\r\n  const response = await axios.post(`/api/post`, data);\r\n\r\n  return {\r\n    type: CONTENT_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getPosts(page, username) {\r\n  if (username) {\r\n    const response = await axios.get(\r\n      `/api/post?username=${username}&page=${page}&limit=10`\r\n    );\r\n\r\n    return {\r\n      type: GET_POSTS,\r\n      payload: response.data,\r\n    };\r\n  }\r\n  const response = await axios.get(`/api/post?page=${page}&limit=10`);\r\n\r\n  return {\r\n    type: GET_POSTS,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function getAPost(uuid) {\r\n  const response = await axios.get(`/api/post/${uuid}`);\r\n\r\n  return {\r\n    type: GET_A_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function deletePost(uuid) {\r\n  const response = await axios.delete(`/api/post/${uuid}`);\r\n\r\n  return {\r\n    type: DELETE_POST,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\nimport { getPosts } from \"../../_actions/post_action\";\r\n\r\n// GET posts\r\nconst PostInfiniteScroll = (props) => {\r\n  const { username = null } = props;\r\n  const dispatch = useDispatch();\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [element, setElement] = useState(null);\r\n  const page = useRef(1);\r\n  const prevY = useRef(0);\r\n\r\n  const loadMore = () => {\r\n    page.current++;\r\n    handleInitial(page.current);\r\n  };\r\n\r\n  // intersectionObserver setting\r\n  const observerCallback = (entries) => {\r\n    const firstEntry = entries[0];\r\n    const y = firstEntry.boundingClientRect.y;\r\n\r\n    if (prevY.current > y) {\r\n      loadMore();\r\n    }\r\n    prevY.current = y;\r\n  };\r\n\r\n  let options = {\r\n    root: null,\r\n    rootMargin: \"0px\",\r\n    threshold: 1.0,\r\n  };\r\n\r\n  const observer = useRef(new IntersectionObserver(observerCallback, options));\r\n\r\n  const fetchData = useCallback(\r\n    async (pageNum) => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await dispatch(getPosts(pageNum, username));\r\n        const { posts, message } = response.payload;\r\n\r\n        setLoading(false);\r\n        return { posts, message };\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [username, dispatch]\r\n  );\r\n\r\n  const handleInitial = useCallback(\r\n    async (page) => {\r\n      const { posts, message } = await fetchData(page);\r\n      if (message === \"ok\") {\r\n        setPosts((items) => [...items, ...posts.values()]);\r\n      }\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleInitial(page.current);\r\n\r\n    const currentElement = element;\r\n    const currentObserver = observer.current;\r\n\r\n    if (currentElement) {\r\n      currentObserver.observe(currentElement);\r\n    }\r\n\r\n    return () => {\r\n      if (currentElement) {\r\n        currentObserver.unobserve(currentElement);\r\n      }\r\n    };\r\n  }, [handleInitial, element]);\r\n\r\n  return (\r\n    <div className=\"infinite-scroll-wrapper\">\r\n      {posts ? (\r\n        <ul className=\"posts-list\">\r\n          {posts.map((posts, index) => props.render(posts, index))}\r\n        </ul>\r\n      ) : (\r\n        <p> 마지막 포스트 입니다 ! </p>\r\n      )}\r\n\r\n      {loading && <div>Loading...</div>}\r\n      <div ref={setElement} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostInfiniteScroll;\r\n","import axios from \"axios\";\r\n\r\nimport { GET_COMMENT, POST_COMMENT, DELETE_COMMENT } from \"./types\";\r\n\r\nexport async function getComment(uuid) {\r\n  let response = await axios.get(`/api/comment/${uuid}`);\r\n  return {\r\n    type: GET_COMMENT,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function postComment(uuid, body) {\r\n  let response = await axios.post(`/api/comment/${uuid}`, body);\r\n\r\n  return {\r\n    type: POST_COMMENT,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function deleteComment(id) {\r\n  let response = await axios.delete(`/api/comment/${id}`);\r\n\r\n  return {\r\n    type: DELETE_COMMENT,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postComment } from \"../../_actions/comment_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst CommentForm = ({ uuid, setComments, comments }) => {\r\n  const dispatch = useDispatch();\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await dispatch(postComment(uuid, { comment }));\r\n      const { newComment, message } = response.payload;\r\n\r\n      if (message === \"ok\") {\r\n        setComments([...comments, newComment]);\r\n      }\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const handleComment = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className=\"comment-form\">\r\n      <input placeholder=\"댓글 달기\" value={comment} onChange={handleComment} />\r\n      <button onClick={handleCommentSubmit}>↑</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { getComment, deleteComment } from \"../../_actions/comment_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst FetchComments = (props) => {\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector((state) => state.user.userId);\r\n  const { uuid, comments, setComments } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const deleteAComment = async (e) => {\r\n    e.preventDefault();\r\n    const li = e.target.parentElement;\r\n\r\n    try {\r\n      await dispatch(deleteComment(li.id));\r\n      alert(\"댓글이 삭제되었습니다\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await dispatch(getComment(uuid));\r\n        const { comments, message } = response.payload;\r\n        if (message === \"ok\") {\r\n          setComments(comments);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setComments, dispatch, uuid]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <LoadingOutlined />}\r\n      {comments ? (\r\n        <ul className=\"comments-list\">\r\n          {comments.map((comment, index) => (\r\n            <li key={index} id={comment._id}>\r\n              <strong>{comment.user.username}</strong>\r\n              {` ${comment.comment}`}\r\n              {userId === comment.user._id && (\r\n                <button onClick={deleteAComment}>⨉</button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <span>첫 댓글을 달아보세요</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FetchComments;\r\n","import axios from \"axios\";\r\n\r\nimport { POST_LIKE, POST_UNLIKE } from \"./types\";\r\n\r\nexport async function postLike(uuid) {\r\n  let response = await axios.post(`/api/like/${uuid}/like`);\r\n  return {\r\n    type: POST_LIKE,\r\n    payload: response.data,\r\n  };\r\n}\r\n\r\nexport async function postUnlike(uuid) {\r\n  let response = await axios.post(`/api/like/${uuid}/unlike`);\r\n  return {\r\n    type: POST_UNLIKE,\r\n    payload: response.data,\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PushpinFilled, PushpinOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postLike, postUnlike } from \"../../_actions/like_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst Likes = ({ likes, uuid }) => {\r\n  const loggedInUser = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [likesArray, setLikesArray] = useState([...likes]);\r\n  const [showLikes, setShowLikes] = useState(false);\r\n\r\n  const handleLike = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(postLike(uuid));\r\n      setLikesArray([...likesArray, loggedInUser.userId]);\r\n      setShowLikes(true);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const handleUnlike = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(postUnlike(uuid));\r\n      let filteredLikes = likesArray.filter((id) => id !== loggedInUser.userId);\r\n      setLikesArray([...filteredLikes]);\r\n      setShowLikes(false);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (likes.includes(loggedInUser.userId)) {\r\n      setShowLikes(true);\r\n    }\r\n  }, [likes, loggedInUser.userId]);\r\n\r\n  return (\r\n    <div className=\"likes\">\r\n      {showLikes ? (\r\n        <PushpinFilled key=\"likes\" onClick={handleUnlike} />\r\n      ) : (\r\n        <PushpinOutlined key=\"notlikes\" onClick={handleLike} />\r\n      )}\r\n\r\n      <span>{likesArray.length}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Likes;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { deletePost } from \"../../_actions/post_action\";\r\nimport { errorHandle } from \"../../_actions/error_actions\";\r\n\r\nconst DeleteAPost = ({ uuid }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const deletePostHandle = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(deletePost(uuid));\r\n      alert(\"포스트가 삭제되었습니다\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  return <DeleteOutlined onClick={deletePostHandle} />;\r\n};\r\n\r\nexport default DeleteAPost;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CommentForm from \"./comment-form\";\r\nimport FetchComments from \"./comments\";\r\nimport Likes from \"./likes\";\r\nimport \"./post-card.css\";\r\nimport { TagsOutlined, TagsFilled, ZoomInOutlined } from \"@ant-design/icons\";\r\nimport DeleteAPost from \"./post-delete\";\r\n\r\nconst PostCard = ({ index, posts }) => {\r\n  const { uuid, likes, content, url, user } = posts;\r\n  const { username } = user;\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const CommentToggle = (params) => {\r\n    return (\r\n      <div onClick={() => setShowComment(!showComment)}>\r\n        {!showComment ? (\r\n          <TagsOutlined key=\"comment\" />\r\n        ) : (\r\n          <TagsFilled key=\"comment\" />\r\n        )}\r\n\r\n        <span>댓글</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <li key={`postcard-${index}-by${username}`} className=\"postcard\">\r\n      <h1 className=\"user\">\r\n        <Link to={`/username/${username}`}>{username}</Link>\r\n      </h1>\r\n      <div className=\"post\">\r\n        <img alt=\"example\" src={url} />\r\n      </div>\r\n\r\n      <p className=\"content\">{content}</p>\r\n      <ul className=\"features\">\r\n        <li>\r\n          <Likes likes={likes} uuid={uuid} />\r\n        </li>\r\n        <li>\r\n          <CommentToggle />\r\n        </li>\r\n        <li>\r\n          <Link to={`/p/${uuid}`}>\r\n            <ZoomInOutlined key=\"link\" />\r\n          </Link>\r\n        </li>\r\n        {userId === user._id && (\r\n          <li>\r\n            <DeleteAPost uuid={uuid} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n\r\n      {showComment && (\r\n        <FetchComments\r\n          uuid={uuid}\r\n          comments={comments}\r\n          setComments={setComments}\r\n        />\r\n      )}\r\n\r\n      <CommentForm uuid={uuid} comments={comments} setComments={setComments} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React from \"react\";\r\nimport PostInfiniteScroll from \"../../containers/infinite-scroll\";\r\nimport PostCard from \"../../containers/post-card\";\r\n\r\nconst Home = (params) => {\r\n  return (\r\n    <>\r\n      <PostInfiniteScroll\r\n        render={(posts, index) => (\r\n          <PostCard key={`post-${index}`} posts={posts} index={index} />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"landing\">\r\n      <div className=\"intro wrapper\">\r\n        <h1>\r\n          말은 제주로\r\n          <br />\r\n          <span>\r\n            글은 <strong>갈피</strong>로\r\n          </span>\r\n        </h1>\r\n        <p>좋아하는 문장들을 원하는 이미지에 옮겨 포스팅 해보세요 !</p>\r\n        <button>\r\n          <Link to=\"/register\">회원가입</Link>\r\n        </button>\r\n        <button>\r\n          <Link to=\"/login\">로그인</Link>\r\n        </button>\r\n      </div>\r\n      <span className=\"bgr-img\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport { CheckCircleOutlined, WarningOutlined } from \"@ant-design/icons\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { loginUser } from \"../../../_actions/user_action\";\r\n\r\nconst LoginForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { location, history } = props;\r\n  const { state } = location;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailValid, setEmailValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordValid, setPasswordValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n\r\n  const pwdHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setPassword(val);\r\n    if (val === \"\") {\r\n      setPasswordValid({\r\n        valid: \"\",\r\n        message: \"비밀번호를 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else setPasswordValid({ valid: \"\", message: \"\", ok: true });\r\n  };\r\n\r\n  const emailHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setEmail(val);\r\n    if (val === \"\") {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (!EmailValidator.validate(val)) {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 알맞게 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else {\r\n      setEmailValid({\r\n        valid: \"\",\r\n        message: \"\",\r\n        ok: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onFinish = async (e) => {\r\n    e.preventDefault();\r\n    if (emailValid.ok && passwordValid.ok) {\r\n      try {\r\n        let userinfo = {\r\n          email,\r\n          password,\r\n        };\r\n\r\n        await dispatch(loginUser(userinfo));\r\n\r\n        if (state && state.from) {\r\n          return history.replace(state.from);\r\n        } else {\r\n          return history.replace(\"/home\");\r\n        }\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form login\">\r\n      <h1 className=\"page-title\">로그인</h1>\r\n      <form onSubmit={onFinish}>\r\n        <div className={`form-control ${emailValid.valid}`}>\r\n          <label htmlFor=\"email\">이메일</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            value={email}\r\n            placeholder=\"예) galpi@galpi.com\"\r\n            min=\"8\"\r\n            max=\"254\"\r\n            onChange={emailHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{emailValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${passwordValid.valid}`}>\r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={pwdHandler}\r\n          />\r\n\r\n          <small>{passwordValid.message}</small>\r\n        </div>\r\n        <input type=\"submit\" value=\"로그인\" className=\"submit-btn\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Canvas = (props) => {\r\n  const [resize, setResize] = useState(\"none\");\r\n  const [quoteTop, setQuoteTop] = useState(200);\r\n  const [quoteLeft, setQuoteLeft] = useState(200);\r\n  const [quoteCursor, setQuoteCursor] = useState(\"grab\");\r\n  const [imgTop, setImgTop] = useState(0);\r\n  const [imgLeft, setImgLeft] = useState(0);\r\n  const [imgCursor, setImgCursor] = useState(\"move\");\r\n  const [curX, setCurX] = useState();\r\n  const [curY, setCurY] = useState();\r\n\r\n  // const [overflow, setOverflow] = useState();\r\n\r\n  const {\r\n    url,\r\n    color,\r\n    opt,\r\n    quote,\r\n    fontcolor,\r\n    fontsize,\r\n    fonttype,\r\n    fontlineheight,\r\n    setQuote,\r\n    canvasRef,\r\n  } = props;\r\n\r\n  const bgrStyleObj = {\r\n    backgroundColor: color,\r\n    cursor: imgCursor,\r\n  };\r\n\r\n  const textStyleObj = {\r\n    color: fontcolor,\r\n    fontSize: `${fontsize}px`,\r\n    fontFamily: fonttype,\r\n    lineHeight: `${fontlineheight}px`,\r\n    resize,\r\n    top: quoteTop,\r\n    left: quoteLeft,\r\n    cursor: quoteCursor,\r\n  };\r\n\r\n  const imgPos = {\r\n    objectPosition: `${imgLeft}px ${imgTop}px`,\r\n  };\r\n\r\n  const handleDragStartQuote = () => {\r\n    setQuoteCursor(\"grabbing\");\r\n  };\r\n\r\n  const handleDragEndQuote = (e, cbtop, cbleft) => {\r\n    setQuoteCursor(\"grab\");\r\n    let parent = e.target.parentElement.getBoundingClientRect();\r\n\r\n    const relativeX = e.clientX - parent.x;\r\n    const relativeY = e.clientY - parent.y;\r\n\r\n    cbtop(relativeY);\r\n    cbleft(relativeX);\r\n  };\r\n\r\n  const handleDragStartImg = (e, cbtop, cbleft) => {\r\n    setImgCursor(\"grabbing\");\r\n    const x = e.clientX;\r\n    const y = e.clientY;\r\n\r\n    cbtop(y);\r\n    cbleft(x);\r\n  };\r\n\r\n  const handleDragEndImg = (e, cbtop, cbleft) => {\r\n    setImgCursor(\"move\");\r\n    const x = e.clientX - curX;\r\n    const y = e.clientY - curY;\r\n\r\n    cbtop(imgTop + y);\r\n    cbleft(imgLeft + x);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setImgLeft(0);\r\n    setImgTop(0);\r\n  }, [url]);\r\n\r\n  return (\r\n    <section className=\"canvas-wrapper\">\r\n      <div id=\"canvas\" className=\"canvas\" ref={canvasRef}>\r\n        {opt ? (\r\n          <div className=\"canvas-bgr\" style={bgrStyleObj}>\r\n            <img\r\n              src={url}\r\n              alt=\"background for quote lines\"\r\n              draggable=\"true\"\r\n              onDragStart={(e) => {\r\n                handleDragStartImg(e, setCurY, setCurX);\r\n              }}\r\n              onDragEnd={(e) => {\r\n                handleDragEndImg(e, setImgTop, setImgLeft);\r\n              }}\r\n              style={imgPos}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"canvas-bgr\" style={bgrStyleObj} />\r\n        )}\r\n\r\n        <textarea\r\n          className=\"quote-textarea\"\r\n          value={quote}\r\n          onChange={(e) => setQuote(e.target.value)}\r\n          defaultValue={`마음에 드는 구절을 입력하세요`}\r\n          style={textStyleObj}\r\n          draggable=\"true\"\r\n          onFocus={() => setResize(\"both\")}\r\n          onBlur={() => setResize(\"none\")}\r\n          onDragStart={() => {\r\n            handleDragStartQuote();\r\n          }}\r\n          onDragEnd={(e) => {\r\n            handleDragEndQuote(e, setQuoteTop, setQuoteLeft);\r\n          }}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React, { useState } from \"react\";\r\nimport { Upload, message } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst getBase64 = (img, cb) => {\r\n  const reader = new FileReader();\r\n  reader.onloadend = () => {\r\n    cb(reader.result);\r\n  };\r\n  reader.readAsDataURL(img);\r\n};\r\n\r\nconst beforeUpload = (file) => {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"JPG/PNG 파일만 업로드 하세요.\");\r\n  }\r\n  // const isLt2M = file.size / 1024 / 1024 < 2;\r\n  // if(!isLt2M){\r\n  //     message.error('이미지 용량은 2MB 이하만 가능합니다. ')\r\n  // }\r\n  return isJpgOrPng;\r\n};\r\n\r\nexport const Preview = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { url, setUrl, setOpt } = props;\r\n\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess(\"ok\");\r\n    }, 0);\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      getBase64(info.file.originFileObj, (imgUrl) => {\r\n        setUrl(imgUrl); // prop: setImgurl\r\n\r\n        setOpt(true);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  };\r\n  const uploadBtn = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8, fontSize: \"0.75em\" }}>배경 이미지</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"canvas-image\" style={{ display: \"none\" }}>\r\n        배경 이미지\r\n      </label>\r\n      <Upload\r\n        name=\"background-img\"\r\n        listType=\"picture-card\"\r\n        showUploadList={false}\r\n        beforeUpload={beforeUpload}\r\n        onChange={handleChange}\r\n        customRequest={dummyRequest}\r\n        className=\"preview-image\"\r\n      >\r\n        {url ? (\r\n          <img\r\n            src={url}\r\n            alt=\"preview\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          />\r\n        ) : (\r\n          uploadBtn\r\n        )}\r\n      </Upload>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SliderPicker } from \"react-color\";\r\n\r\nexport const BgrColorPicker = (props) => {\r\n  const { setColor, color } = props;\r\n\r\n  const handleColor = (color) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"canvas-color\">배경색</label>\r\n      <SliderPicker\r\n        color={color}\r\n        onChange={handleColor}\r\n        className=\"bgr-colorpicker\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { FontColorsOutlined } from \"@ant-design/icons\";\r\n\r\nexport const FontColorPicker = (props) => {\r\n  const [display, setDisplay] = useState(false);\r\n  const { setColor, color } = props;\r\n\r\n  const handleColor = (color) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  const style = {\r\n    color: color,\r\n  };\r\n\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-color\" style={{ display: \"none\" }}>\r\n        글씨 색상\r\n      </label>\r\n      <FontColorsOutlined\r\n        className=\"icon\"\r\n        onClick={() => setDisplay(!display)}\r\n        style={style}\r\n      />\r\n      {display && (\r\n        <div className=\"sketch-picker\">\r\n          <SketchPicker color={color} onChange={handleColor} triangle=\"hide\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FontSizeOutlined } from \"@ant-design/icons\";\r\n\r\nconst FontSlider = ({ setFontsize }) => {\r\n  const fontsizeHandler = (e) => {\r\n    e.preventDefault();\r\n    let val = e.target.value;\r\n    setFontsize(val);\r\n  };\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-size\" style={{ display: \"none\" }}>\r\n        글씨 크기\r\n      </label>\r\n      <FontSizeOutlined className=\"icon\" />\r\n      <input\r\n        type=\"range\"\r\n        id=\"font-size\"\r\n        min={5}\r\n        max={50}\r\n        step={1}\r\n        defaultValue={16}\r\n        onChange={fontsizeHandler}\r\n        className=\"slider\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FontSlider;\r\n","import React, { useState } from \"react\";\r\nimport { QuestionOutlined } from \"@ant-design/icons\";\r\n\r\nconst FontType = ({ setFonttype }) => {\r\n  const [counter, setCounter] = useState(0);\r\n  const fonts = [\r\n    '\"Noto Serif KR\", \"Times New Roman\",\"Georgia\", \"serif\"',\r\n    '\"UhBeeDoolDool\", \"Dotum\", \"Caflisch Script\", \"Adobe Poetica\", \"Sanvito\", \"Ex Ponto\", \"cursive\" ',\r\n    '\"Noto Sans KR\", \"Verdana\", \"Malgun Gothic\", \"sans-serif\"',\r\n  ];\r\n\r\n  const fontTypeHandler = () => {\r\n    setFonttype(fonts[counter]);\r\n    setCounter(counter + 1);\r\n    if (counter === fonts.length - 1) return setCounter(0);\r\n  };\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-type\" style={{ display: \"none\" }}>\r\n        글씨 종류\r\n      </label>\r\n      <QuestionOutlined className=\"icon\" onClick={fontTypeHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FontType;\r\n","import React from \"react\";\r\nimport { LineHeightOutlined } from \"@ant-design/icons\";\r\n\r\nconst FontLineHeight = ({ setFontlineheight }) => {\r\n  const fontLineHandler = (e) => {\r\n    e.preventDefault();\r\n    setFontlineheight(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"font\">\r\n      <label htmlFor=\"font-lineheight\" style={{ display: \"none\" }}>\r\n        줄 간격\r\n      </label>\r\n      <LineHeightOutlined className=\"icon\" />\r\n      <input\r\n        type=\"range\"\r\n        id=\"font-lineheight\"\r\n        min={15}\r\n        max={40}\r\n        step={1}\r\n        defaultValue={20}\r\n        onChange={fontLineHandler}\r\n        className=\"slider\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FontLineHeight;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Canvas from \"./canvas\";\r\nimport { Preview } from \"./preview\";\r\nimport { BgrColorPicker } from \"./bgr-colorpicker\";\r\nimport { FontColorPicker } from \"./font-colorpicker\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { contentPost, imgPost } from \"../../../_actions/post_action\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport FontSlider from \"./font-slider\";\r\nimport FontType from \"./font-type\";\r\nimport FontLineHeight from \"./font-lineheight\";\r\n\r\nconst Posting = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { history } = props;\r\n  const [url, setUrl] = useState(); // preview\r\n  const [color, setColor] = useState(\"#f1f2f6\");\r\n  const [fontsize, setFontsize] = useState(16);\r\n  const [fontcolor, setFontcolor] = useState(\"black\");\r\n  const [fonttype, setFonttype] = useState(\r\n    '\"Noto Serif KR\", \"Times New Roman\",\"Georgia\", \"serif\"'\r\n  );\r\n  const [fontlineheight, setFontlineheight] = useState(20);\r\n  const [opt, setOpt] = useState(false);\r\n  const [quote, setQuote] = useState();\r\n  const [content, setContent] = useState();\r\n\r\n  const canvasRef = useRef();\r\n\r\n  const postContent = async (url) => {\r\n    let data = {\r\n      content,\r\n      url,\r\n    };\r\n    try {\r\n      await dispatch(dispatch(contentPost(data)));\r\n      alert(\"업로드 성공 !\");\r\n      history.replace(\"/home\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const postImage = async (blob) => {\r\n    const img = blob;\r\n    const formData = new FormData();\r\n    formData.append(\"img\", img, \"combined.png\");\r\n\r\n    try {\r\n      let response = await dispatch(imgPost(formData));\r\n      postContent(response.payload.url);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const domToImage = () => {\r\n    const canvasDiv = canvasRef.current;\r\n    domtoimage.toBlob(canvasDiv).then((blob) => {\r\n      postImage(blob);\r\n    });\r\n  };\r\n\r\n  useEffect(() => setOpt(true), [url]);\r\n  useEffect(() => setOpt(false), [color]);\r\n\r\n  return (\r\n    <div className=\"posting\">\r\n      <h1 className=\"page-title\">갈피 남기기</h1>\r\n\r\n      <div className=\"canvas-background\">\r\n        <div className=\"bgr-image\">\r\n          <Preview\r\n            url={url}\r\n            setUrl={setUrl}\r\n            setOpt={setOpt}\r\n            id=\"canvas-image\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"bgr-color\">\r\n          <BgrColorPicker setColor={setColor} color={color} id=\"canvas-color\" />\r\n        </div>\r\n\r\n        <div className=\"canvas-font\">\r\n          <FontType setFonttype={setFonttype} />\r\n          <FontColorPicker setColor={setFontcolor} color={fontcolor} />\r\n          <FontSlider setFontsize={setFontsize} />\r\n          <FontLineHeight setFontlineheight={setFontlineheight} />\r\n        </div>\r\n      </div>\r\n\r\n      <Canvas\r\n        url={url}\r\n        color={color}\r\n        opt={opt}\r\n        fontcolor={fontcolor}\r\n        fontsize={fontsize}\r\n        fonttype={fonttype}\r\n        quote={quote}\r\n        setQuote={setQuote}\r\n        content={content}\r\n        setContent={setContent}\r\n        canvasRef={canvasRef}\r\n        fontlineheight={fontlineheight}\r\n      />\r\n\r\n      <div className=\"content\">\r\n        <label htmlFor=\"content\" style={{ display: \"none\" }}>\r\n          코멘트\r\n        </label>\r\n        <textarea\r\n          className=\"content-textarea\"\r\n          name=\"content\"\r\n          value={content}\r\n          rows=\"5\"\r\n          onChange={(e) => setContent(e.target.value)}\r\n          placeholder=\"작가, 책 제목, 간단한 소감 등을 남겨주세요\"\r\n        />\r\n      </div>\r\n      <div className=\"upload-btn\">\r\n        <button onClick={domToImage}>업로드</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posting;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst PostThumbnail = ({ index, posts }) => {\r\n  const { uuid, url, user } = posts;\r\n  const { username } = user;\r\n  const postHandler = (e) => {\r\n    e.preventDefault();\r\n    return <Redirect push to={`/p/${uuid}`} />;\r\n  };\r\n\r\n  return (\r\n    <li\r\n      key={`postthumbnail-${index}-by${username}`}\r\n      className=\"post-thumbnail\"\r\n      onClick={postHandler}\r\n    >\r\n      <div className=\"post\">\r\n        <img alt=\"example\" src={url} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostThumbnail;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PostInfiniteScroll from \"../../containers/infinite-scroll\";\r\nimport PostThumbnail from \"../../containers/post-thumbnail\";\r\nimport { getUser } from \"../../../_actions/user_action\";\r\nimport PaperCard from \"../../containers/papercard\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\n\r\nconst Profile = () => {\r\n  const { username } = useParams();\r\n  const [user, setUser] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      let response = await dispatch(getUser(username));\r\n      let { user } = response.payload;\r\n      setUser(user);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n      setLoading(false);\r\n    }\r\n  }, [dispatch, username]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      {loading && \"유저 정보를 가져오고 있습니다\"}\r\n      {user ? (\r\n        <>\r\n          <PaperCard title={user.username}>\r\n            <br />\r\n            <h2>이름: {user.name}</h2>\r\n            <p>계정 생성일: {user.createdAt.slice(0, 10)}</p>\r\n          </PaperCard>\r\n          <PostInfiniteScroll\r\n            render={(posts, index) => (\r\n              <PostThumbnail\r\n                key={`postthumbnail-${index}`}\r\n                posts={posts}\r\n                index={index}\r\n              />\r\n            )}\r\n            username={user.username}\r\n          />\r\n        </>\r\n      ) : (\r\n        <p> 해당하는 유저가 없습니다. </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport { CheckCircleOutlined, WarningOutlined } from \"@ant-design/icons\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { registerUser } from \"../../../_actions/user_action\";\r\n\r\nconst RegistrationForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { history } = props;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailValid, setEmailValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameValid, setUsernameValid] = useState({\r\n    valid: \"\",\r\n    message: \"3 ~ 15글자 이상, 영문 및 숫자\",\r\n    ok: false,\r\n  });\r\n  const [name, setName] = useState(\"\");\r\n  const [nameValid, setNameValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordValid, setPasswordValid] = useState({\r\n    valid: \"\",\r\n    message: \"영어 대·소문자와 숫자 포함, 8글자 이상.\",\r\n    ok: false,\r\n  });\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [confirmValid, setConfirmValid] = useState({\r\n    valid: \"\",\r\n    message: \"\",\r\n    ok: false,\r\n  });\r\n\r\n  const onFinish = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      emailValid.ok &&\r\n      usernameValid.ok &&\r\n      nameValid.ok &&\r\n      passwordValid.ok &&\r\n      confirmValid.ok\r\n    ) {\r\n      let userinfo = {\r\n        email,\r\n        username,\r\n        name,\r\n        password,\r\n        passwordConfirmation: confirm,\r\n      };\r\n      return await dispatch(registerUser(userinfo))\r\n        .then((res) => {\r\n          alert(\"회원가입에 성공했습니다.\");\r\n          history.replace(\"/login\");\r\n        })\r\n        .catch((e) => dispatch(errorHandle(e.response)));\r\n    } else return alert(\"정확하게 입력해주세요\");\r\n  };\r\n\r\n  const isPassword = (pwd) => {\r\n    return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(pwd);\r\n  };\r\n\r\n  const confirmHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setConfirm(val);\r\n    if (val === \"\") {\r\n      setConfirmValid({\r\n        valid: \"error\",\r\n        message: \"비밀번호 확인을 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (password !== val) {\r\n      setConfirmValid({\r\n        valid: \"error\",\r\n        message: \"비밀번호를 동일하게 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else setConfirmValid({ valid: \"success\", message: \"\", ok: true });\r\n  };\r\n\r\n  const passwordHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setPassword(val);\r\n    if (val === \"\") {\r\n      setPasswordValid({\r\n        valid: \"error\",\r\n        message: \"비밀번호를 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (!isPassword(val)) {\r\n      setPasswordValid({\r\n        valid: \"error\",\r\n        message: \"영어 대·소문자와 숫자 포함하고 8글자 이상이여야 합니다\",\r\n        ok: false,\r\n      });\r\n    } else setPasswordValid({ valid: \"success\", message: \"\", ok: true });\r\n  };\r\n\r\n  const nameHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setName(val);\r\n    if (val === \"\") {\r\n      setNameValid({ valid: \"error\", message: \"이름을 입력하세요\", ok: false });\r\n    } else {\r\n      setNameValid({ valid: \"success\", message: \"\", ok: true });\r\n    }\r\n  };\r\n\r\n  const usernameHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setUsername(val);\r\n    if (val === \"\") {\r\n      setUsernameValid({\r\n        valid: \"error\",\r\n        message: \"아이디를 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (\r\n      !/^(?=[a-zA-Z0-9._]{3,20}$)(?!.*[_.]{2})[^_.].*[^_.]$/.test(val)\r\n    ) {\r\n      setUsernameValid({\r\n        valid: \"error\",\r\n        message: \"3 ~ 15글자 이상, 영문 혹은 숫자\",\r\n        ok: false,\r\n      });\r\n    } else {\r\n      setUsernameValid({ valid: \"success\", message: \"\", ok: true });\r\n    }\r\n  };\r\n\r\n  const emailHandler = (e) => {\r\n    let val = e.target.value.trim();\r\n    setEmail(val);\r\n    if (val === \"\") {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else if (!EmailValidator.validate(val)) {\r\n      setEmailValid({\r\n        valid: \"error\",\r\n        message: \"이메일을 올바르게 입력하세요\",\r\n        ok: false,\r\n      });\r\n    } else {\r\n      setEmailValid({\r\n        valid: \"success\",\r\n        message: \"\",\r\n        ok: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form register\">\r\n      <h1 className=\"page-title\">회원가입</h1>\r\n      <form onSubmit={onFinish}>\r\n        <div className={`form-control ${emailValid.valid}`}>\r\n          <label htmlFor=\"email\">이메일</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            value={email}\r\n            placeholder=\"예) galpi@galpi.com\"\r\n            onChange={emailHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{emailValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${usernameValid.valid}`}>\r\n          <label htmlFor=\"username\">아이디(영문)</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            maxLength=\"128\"\r\n            title=\"최소 2글자 이상\"\r\n            value={username}\r\n            onChange={usernameHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{usernameValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${nameValid.valid}`}>\r\n          <label htmlFor=\"name\">이름</label>\r\n          <input id=\"name\" type=\"text\" value={name} onChange={nameHandler} />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{nameValid.message}</small>\r\n        </div>\r\n\r\n        <div className={`form-control ${passwordValid.valid}`}>\r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={passwordHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n\r\n          <small>{passwordValid.message}</small>\r\n        </div>\r\n        <div className={`form-control ${confirmValid.valid}`}>\r\n          <label htmlFor=\"confirm\">비밀번호 확인</label>\r\n          <input\r\n            id=\"confirm\"\r\n            type=\"password\"\r\n            value={confirm}\r\n            onChange={confirmHandler}\r\n          />\r\n          <CheckCircleOutlined className=\"icon icon-suc\" />\r\n          <WarningOutlined className=\"icon icon-err\" />\r\n          <small>{confirmValid.message}</small>\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"가입하기\" className=\"submit-btn\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAPost } from \"../../../_actions/post_action\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport Likes from \"../../containers/likes\";\r\nimport CommentForm from \"../../containers/comment-form\";\r\nimport FetchComments from \"../../containers/comments\";\r\nimport DeleteAPost from \"../../containers/post-delete\";\r\n\r\nconst Post = () => {\r\n  const { uuid } = useParams();\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const [post, setPost] = useState();\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let response = await dispatch(getAPost(uuid));\r\n        setPost(response.payload.post);\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [uuid, dispatch]);\r\n\r\n  return (\r\n    <div className=\"body-wrapper\">\r\n      {post && (\r\n        <section className=\"a-post\">\r\n          <div className=\"a-post-header\">\r\n            <div className=\"user\">\r\n              <Link to={`/username/${post.user.username}`}>\r\n                {post.user.username}\r\n              </Link>\r\n            </div>\r\n            {userId === post.user._id && (\r\n              <div className=\"delete\">\r\n                <DeleteAPost uuid={uuid} />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"image\">\r\n            <img src={post.url} alt={`${post.user.username}의 포스팅`} />\r\n          </div>\r\n\r\n          <div className=\"content\">\r\n            <p>{post.content}</p>\r\n          </div>\r\n\r\n          <Likes likes={post.likes} uuid={post.uuid} />\r\n\r\n          {comments && (\r\n            <FetchComments\r\n              uuid={uuid}\r\n              comments={comments}\r\n              setComments={setComments}\r\n            />\r\n          )}\r\n          <CommentForm\r\n            uuid={uuid}\r\n            comments={comments}\r\n            setComments={setComments}\r\n          />\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nconst Footer = (params) => {\r\n  return (\r\n    <footer>\r\n      <p>© 2020 Cha Haneul. All rights reserved.</p>\r\n      <address>문의사항은 tjaneul@gmail.com로 보내주세요.</address>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst NotFound = (params) => {\r\n  return (\r\n    <div>\r\n      <h1>잘못된 경로로 들어오셨네요. 어서 돌아가주세요.</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logOutUser } from \"../../../_actions/user_action\";\r\nimport { errorHandle } from \"../../../_actions/error_actions\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst NavBar = (props) => {\r\n  const { loggedIn, username } = useSelector((state) => ({\r\n    loggedIn: state.user.loggedIn,\r\n    username: state.user.username,\r\n  }));\r\n  const [menuToggle, setMenuToggle] = useState(false);\r\n  const { history } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const logout = async () => {\r\n    try {\r\n      await dispatch(logOutUser());\r\n      alert(\"로그아웃 되었습니다\");\r\n      history.replace(\"/\");\r\n    } catch (e) {\r\n      dispatch(errorHandle(e.response));\r\n    }\r\n  };\r\n\r\n  const toggleMenu = (e) => {\r\n    e.preventDefault();\r\n    setMenuToggle(!menuToggle);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Link to=\"/\">\r\n          <h1 className=\"logo\">galpi</h1>\r\n        </Link>\r\n\r\n        <svg\r\n          height=\"40px\"\r\n          id=\"menu-btn\"\r\n          className=\"open\"\r\n          viewBox=\"0 0 32 32\"\r\n          onClick={toggleMenu}\r\n        >\r\n          <path\r\n            fill=\"#db2b39\"\r\n            d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\"\r\n          />\r\n        </svg>\r\n\r\n        <nav id=\"nav\" className={menuToggle ? `open-nav` : undefined}>\r\n          <svg\r\n            viewBox=\"0 0 24 24\"\r\n            id=\"exit-btn\"\r\n            className=\"exit\"\r\n            onClick={toggleMenu}\r\n          >\r\n            <path\r\n              id=\"exit\"\r\n              fill=\"#db2b39\"\r\n              d=\"M14.8,12l3.6-3.6c0.8-0.8,0.8-2,0-2.8c-0.8-0.8-2-0.8-2.8,0L12,9.2L8.4,5.6c-0.8-0.8-2-0.8-2.8,0   c-0.8,0.8-0.8,2,0,2.8L9.2,12l-3.6,3.6c-0.8,0.8-0.8,2,0,2.8C6,18.8,6.5,19,7,19s1-0.2,1.4-0.6l3.6-3.6l3.6,3.6   C16,18.8,16.5,19,17,19s1-0.2,1.4-0.6c0.8-0.8,0.8-2,0-2.8L14.8,12z\"\r\n            />\r\n          </svg>\r\n          {!loggedIn ? (\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to=\"/\">\r\n                  메인\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/login\">로그인</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/register\">회원가입</NavLink>\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to=\"/\">\r\n                  메인\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/post\">갈피 남기기</NavLink>\r\n              </li>\r\n              <li className=\"sub\">\r\n                <NavLink to={`/user/${username}`} className=\"nav-username\">\r\n                  {username}\r\n                </NavLink>\r\n                <div className=\"submenu\">\r\n                  <ul>\r\n                    <li>\r\n                      <NavLink to=\"/dashboard\">대시보드</NavLink>\r\n                    </li>\r\n                    <li onClick={logout}>\r\n                      <span>로그아웃</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </nav>\r\n      </header>\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const AuthRoute = ({ component: Component, ...rest }) => {\r\n  const { loggedIn } = useSelector((state) => ({\r\n    loggedIn: state.user.loggedIn,\r\n  }));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const GuestRoute = ({ component: Component, ...rest }) => {\r\n  const { loggedIn } = useSelector((state) => ({\r\n    loggedIn: state.user.loggedIn,\r\n  }));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/home\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nconst modalRoot = document.getElementById(\"modal\");\r\n\r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.el = document.createElement(\"div\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    modalRoot.appendChild(this.el);\r\n  }\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport Modal from \"./modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { errorHide } from \"../../../_actions/error_actions\";\r\n\r\nconst ErrorModal = (params) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const name = useSelector((state) => state.error.name);\r\n  const message = useSelector((state) => state.error.message);\r\n  const isOpen = useSelector((state) => state.error.isOpen);\r\n\r\n  const hideModal = (params) => {\r\n    dispatch(errorHide());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Modal>\r\n          <div className=\"modal\">\r\n            <div className=\"error-message\">\r\n              <h1>{name}</h1>\r\n              <p>{message}</p>\r\n              <button onClick={hideModal} className=\"submit-btn\">\r\n                확인\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport {\r\n  Register,\r\n  Login,\r\n  Dashboard,\r\n  Home,\r\n  Post,\r\n  Posting,\r\n  Profile,\r\n  LandingPage,\r\n  Footer,\r\n} from \"./components/views/index\";\r\nimport NotFound from \"./components/views/NotFound/notFound\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport NavBar from \"./components/views/NavBar/navbar\";\r\nimport { GuestRoute, AuthRoute } from \"./route/index\";\r\nimport { auth } from \"./_actions/user_action\";\r\nimport { errorHandle } from \"./_actions/error_actions\";\r\nimport ErrorModal from \"./components/views/Modal/modal-content\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchAuth = async () => {\r\n      console.log(\"initial auth\");\r\n\r\n      try {\r\n        await dispatch(auth());\r\n      } catch (e) {\r\n        dispatch(errorHandle(e.response));\r\n      }\r\n    };\r\n    fetchAuth();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <NavBar>\r\n          <section className=\"body-container\">\r\n            <Switch>\r\n              <GuestRoute exact path=\"/\" component={LandingPage} />\r\n\r\n              <GuestRoute path=\"/login\" component={Login} />\r\n              <GuestRoute path=\"/register\" component={Register} />\r\n\r\n              <AuthRoute path=\"/dashboard\" component={Dashboard} />\r\n              <AuthRoute path=\"/home\" component={Home} />\r\n              <AuthRoute path=\"/post\" component={Posting} />\r\n\r\n              <Route path=\"/user/:username\" children={<Profile />} />\r\n              <Route path=\"/p/:uuid\" children={<Post />} />\r\n\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </section>\r\n        </NavBar>\r\n      </Router>\r\n      <Footer />\r\n      <ErrorModal />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ERROR_HANDLE, ERROR_HIDE } from \"../_actions/types\";\r\n\r\nconst initState = {\r\n  name: null,\r\n  status: null,\r\n  message: null,\r\n  isOpen: false,\r\n};\r\n\r\nexport default function (state = initState, action) {\r\n  const { error } = action;\r\n\r\n  switch (action.type) {\r\n    case ERROR_HANDLE:\r\n      return {\r\n        name: error.statusText || null,\r\n        status: error.status,\r\n        message: error.data.message,\r\n        isOpen: true,\r\n      };\r\n\r\n    case ERROR_HIDE:\r\n      return {\r\n        name: null,\r\n        status: null,\r\n        message: null,\r\n        isOpen: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\nimport post from \"./post_reducer\";\r\nimport comment from \"./comment_reducer\";\r\nimport like from \"./like_reducer\";\r\nimport error from \"./error_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  post,\r\n  comment,\r\n  like,\r\n  error,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH,\r\n  LOGOUT_USER,\r\n  GET_USER,\r\n  GET_DASHBOARD,\r\n} from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return {\r\n        ...state,\r\n        getRegisterSuccess: action.payload.message,\r\n      };\r\n\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        userId: action.payload.user._id,\r\n        username: action.payload.user.username,\r\n      };\r\n\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        userId: {},\r\n        username: {},\r\n      };\r\n\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        getUserSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_DASHBOARD:\r\n      return {\r\n        ...state,\r\n        getDashboardSuccess: action.payload.message,\r\n      };\r\n    case AUTH:\r\n      return {\r\n        ...state,\r\n        loggedIn: action.payload.isAuth,\r\n        userId: action.payload.user._id,\r\n        username: action.payload.user.username,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CONTENT_POST,\r\n  GET_A_POST,\r\n  IMG_POST,\r\n  GET_POSTS,\r\n  DELETE_POST,\r\n} from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case IMG_POST:\r\n      return {\r\n        ...state,\r\n        imgurl: action.payload.url,\r\n      };\r\n\r\n    case CONTENT_POST:\r\n      return {\r\n        ...state,\r\n        postUploadSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_A_POST:\r\n      return {\r\n        ...state,\r\n        postGetSuccess: action.payload.message,\r\n      };\r\n\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        postsGetSuccess: action.payload.message,\r\n      };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        postDelSuccess: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_COMMENT, POST_COMMENT, DELETE_COMMENT } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case GET_COMMENT:\r\n      return {\r\n        ...state,\r\n        getCommentSuccess: action.payload.message,\r\n      };\r\n\r\n    case POST_COMMENT:\r\n      return {\r\n        ...state,\r\n        postCommentSuccess: action.payload.message,\r\n      };\r\n\r\n    case DELETE_COMMENT:\r\n      return {\r\n        ...state,\r\n        deleteComomentSuccess: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { POST_LIKE, POST_UNLIKE } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case POST_LIKE:\r\n      return {\r\n        ...state,\r\n        getLikeSuccess: action.payload.message,\r\n      };\r\n\r\n    case POST_UNLIKE:\r\n      return {\r\n        ...state,\r\n        postUnlikeSuccess: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport Reducers from \"../_reducers\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  promiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\n\r\n// const initialState = {\r\n//   auth: {\r\n//     loggedIn: true,\r\n//     userId: \"randomid\",\r\n//     username: \"haneul\",\r\n//     email: \"goodnavy@naver.com\",\r\n//   },\r\n// };\r\n\r\nconst store = createStoreWithMiddleware(\r\n  Reducers,\r\n  // initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./_store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}